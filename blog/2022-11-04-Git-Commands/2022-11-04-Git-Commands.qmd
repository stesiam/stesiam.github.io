---
title: "Git Series (Part I - Configuration)"
author: "stesiam"
description: "An article that brings together some configuration setttings of Git. A beginner's approach to Git."
categories: [Git]
fig-cap-location: bottom
date: "2022-11-04"
freeze: true
image: git_new.png
image-alt: "Git commands" 
toc: true
toc-title: Table of contents
toc-location: left
title-block-banner: true
citation: true
nocite: '@*'
csl: apa-6th-edition
bibliography: references.bib
format: 
  html:
    freeze: true
    code-link: true
    code-fold: true
execute:
  echo: true
editor_options: 
  markdown: 
    wrap: 80
---

## Introduction

### What is Version Control System

![Workflow without Version Control System](workflow_without_vcs.png)


### Popularity of VCS

The concept of Versioning 

```{r Import libraries, echo=FALSE, warning=FALSE, message=FALSE}
library(readr)
library(dplyr)
library(lubridate)
library(ggplot2)
```



```{r Import data, echo=FALSE, message=FALSE, warning=FALSE}
trends_vcs <- read_csv("multiTimeline.csv", 
    skip = 2)

trends_vcs$Month <- lubridate::ym(trends_vcs$Month)


trends_vcs_tidy = tidyr::pivot_longer(trends_vcs, !Month, names_to = "VCS", values_to = "counts")
```

```{r, fig.width= 7}
trends_vcs_tidy %>%
  ggplot(aes(x= Month, y = counts)) +
  geom_line(aes(color = VCS)) +
  labs(title = "Trends on Version Control Systems",
              subtitle = "Compare trends of Git and SVN (Subversion) from 2004 to 2022",
              caption = "Data source: Google Trends") +
  theme_classic()
```

Όπως είδαμε παραπάνω το Git αποτελεί το εργαλείο που κυριαρχεί. όταν θέλουμε να κάνουμε versioning σε μία εργασία μας ή σε ένα 


### Benefits





### Drawbacks





## Git settings

### Set up Name & Email

So, you decided to start Git without setting Name and Email? 

You may think of it again. In case you try to commit without setting a Name and email. Git will not commit your changes, without prior setting those.

```{.bash filename="Terminal"}
git config --global user.name "YourName"
git config --global user.email your_email
```

:::{.callout-note}
If you are planning to host your repository on GitHub, you may want to hide your casual email. In that case GitHub offers a `noreply` email for this purpose. You can read more [here](https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-email-preferences/setting-your-commit-email-address).
:::


### Set editor



```{.bash filename="Terminal"}
git config --global core.editor "editor_name"
```


| Editor     | Command | 
| :---        |    :----:   |
| Atom     | Title       |
| Vim   | Text        |

### Default branch name to main

Τον Οκτώβριο του 2020 το GitHub αποφάσισε να αλλάξει το προεπιλεγμένο όνομα του branch από master σε main. Συνεπώς, καλό θα ήταν να κάνουμε και αυτή την αλλαγή και στο local περιβάλλον μας, ως εξής.

```{.bash filename="Terminal"}
git config --global init.defaultBranch main
```


### Merge method



```{.bash filename="Terminal"}
git config --global merge.ff false
```



### Check your settings

You can verify your settings by using the following command :

```{.bash filename="Terminal"}
git config --list
```

Here is the output on my machine :


![Output of git-config command](git_config_output.png)


## To sum up

All the above can be summed up on the following list of commands.

```{.bash filename="Terminal"}
git config --global user.name "YourName"
git config --global user.email your_email
git config --global core.editor "editor_name"
git config --global init.defaultBranch main
git config --global merge.ff false

# check git config settings

git config --list --show-origin
```

Of course you can access your git config file on your Home directory (at least on Ubuntu installation). 

:::{.callout-warning}
Note that the .gitconfig file, which contains our settings, may not be visible in the Home directory. In general, files whose names begin with a period are not displayed. However, if everything has been done correctly, it's probably there. For example, in Ubuntu you should choose to show hidden files.
:::

In case you open that file you will see probably something like the above :

<script src="https://gist.github.com/stesiam/c6a172f7322a9b6e0d74b29f08f9f4be.js"></script>

## More about git config

Also, you can find Git config's documentation [here](https://git-scm.com/docs/git-config).


## Acknowledgements {.appendix}

Image by <a href="https://pixabay.com/users/skorec-16694100/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=7522129">Daniel Skovran</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=7522129">Pixabay</a>
