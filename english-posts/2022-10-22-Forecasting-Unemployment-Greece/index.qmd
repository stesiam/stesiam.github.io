---
title: "Forecasting Unemployment in Greece"
author: "stesiam"
description: |
  Make a prediction about the future value of Greece's unemployment using ARIMA model.
link-external-newwindow: true
categories: [R, Time Series]
image: unemployment.jpg
image-alt: Unemployment - Word Cloud
fig-cap-location: bottom
date: "2022-10-22"
toc: true
freeze: true
toc-title: Table of contents
toc-location: left
citation: true
slug: stesiam2022unemploymentgreece
title-block-banner: true
nocite: '@*'
csl: apa-6th-edition.csl
bibliography: [packages.bib, references.bib]
format: 
  html:
    code-link: true
    code-fold: true
    code-summary: "Show the code"
    code-tools: 
      source: repo
execute:
  echo: true
editor_options: 
  markdown: 
    wrap: 80
---

# Table of Contents {.unlisted}

<hr>

1. [Introduction](#introduction) <br>
2. [Prerequisites](#prerequisites) <br>
&nbsp; 2.1 [Import Libraries](#import-libraries) <br>
&nbsp; 2.2 [Import Dataset](#import-dataset) <br>
&nbsp; 2.3 [Preview Datasset](#preview-dataset) <br>
&nbsp; 2.4 [Dataset Structure](#dataset-structure) <br>
&nbsp; 2.5 [Time Series Preprocessing](#time-series-preprocessing) <br>
3. [Missing Values](#missing-values) <br>
4. [Descriptive Statistics](#descriptive-statistics) <br>
5. [Examine Stationarity](#examine-stationarity) <br>
&nbsp; 5.1 [Definition of stationarity](#definition-of-stationarity) <br>
&nbsp; 5.2 [Examine Stationarity Graphically](#examine-stationarity-graphically) <br>
&nbsp; 5.3 [Examine Stationarity with Statistical Tests](#examine-stationarity-with-statistical-tests) <br>
&nbsp; &nbsp; 5.3.1 [ADF test](#adf-test) <br>
&nbsp; &nbsp; 5.3.2 [PP test](#pp-test) <br>
&nbsp; &nbsp; 5.3.3 [KPSS test](#kpss-test) <br>
6. [Identify Model](#identify-model) <br>
7. [Build Time Series Model](#build-time-series-model) <br>
8. [Compare Models](#compare-models) <br>
9. [Forecast Future Unemployment](#forecast-future-unemployment) <br>
&nbsp; 9.1 [ARIMA (0,2,1) forecasts](#arima-021-forecasts) <br>
&nbsp; 9.2 [ARIMA (9,2,1) forecasts](#arima-921-forecastst) <br>
10. [Results](#results)

<hr>

# Introduction

[...editing...]

## Background


## Time series


## Procedure


## Short Answer

If you are in a hurry, I predicted that unemployment on Greece is expected to further reduce. It will range between 10\% - 13\% in February, 2023.



# Prerequisites

## Import Libraries

For this analysis we will need standard libraries for importing and processing my data, such as readr [@R-readr] and dplyr [@R-dplyr]. The kableExtra [@R-kableExtra] package was used to print the results in table format, while the flextable [@R-flextable] package was used to print the results of the Dickey-Fuller and KPSS tests.

Then, due to the nature of the data (time series) it was deemed necessary to use relevant libraries such as lubridate[@R-lubridate], tseries[@R-tseries] & forecast[@R-forecast] packages.


Finally, the ggplot2 [@R-ggplot2] package was used to create some visualizations, as well as an auxiliary package, ggtext [@R-ggtext], for further formatting those.

```{r Import R Libraries, message=FALSE, results='hide', echo=TRUE}
# General purpose R libraries
library(dplyr)
library(readr)
library(kableExtra)
library(flextable)


# Graphs
library(ggplot2)
library(ggtext) # Add support for HTML/CSS on ggplot

# Time Series 

library(lubridate)
library(tseries)
library(forecast)

# Other settings
options(digits=2) # print only 2 decimals

```

```{r, include=FALSE}
knitr::write_bib(.packages(), file = 'packages.bib')
```

## Import dataset

After loading the libraries I am able to use the commands of the readr package to import my data. My data is in .csv format, so I'll use the `read_csv()` command [@R-readr] to import them.

Additionally, I choose not to include EA-19 values (as I investigate Greece's unemployment).

```{r Import dataset, cache=TRUE, message=FALSE,results='hide',echo=TRUE, warning=FALSE}
unemployment <- read_csv("data/unemployment.csv") %>%
  select(LOCATION, TIME, Value) %>% filter(LOCATION != "EA19")
```

## Preview Dataset

```{r Preview Data}

#| label: tbl-preview-dataset
#| tbl-cap: "Preview Dataset (first 6 rows)"
#| 
preview_dataset = head(unemployment, 10)
kbl(preview_dataset, 
    align = 'c',
    booktabs = T,
    centering = T,
    valign = T) %>%
  kable_paper() %>%
  scroll_box(width = "600px", height = "250px")
```

## Dataset Structure

Our dataset is consisted by `r ncol(unemployment)` variables (columns). More specifically, concerning my variables, are as follows
:

|  Variable  |             Property             |                Description                 |
|:---------------:|:-------------------------:|:----------------------------------:|
| `LOCATION` |   *qualitative* <br> (nominal)   |       Specific country's statistics        |
|   `TIME`   |   *qualitative* <br> (ordinal)   | Month of the reported data |
|  `Value`   | *quantitative* <br> (continuous) | Unemployment at the given Time and Country |

Thus, my sample has `r ncol(unemployment)` variables, of which 2 are qualitative
and 1 is quantitative property.

## Time Series Preprocessing

The `TIME` variable needs to be a Date variable which is not fulfilled on our
case.

```{r}
sapply(unemployment, class) %>% kbl() %>% kable_styling(full_width = F, position = "center")
```

So, above I see that I have dates in a format "YYYY-MM" (Year - Month) and they
are considered as characters. With the help of `lubridate` package I will
convert my time series on a Date format.

```{r}
unemployment$TIME <- lubridate::ym(unemployment$TIME)
```

And let's check again :

```{r}
sapply(unemployment, class) %>% kbl() %>% kable_styling(full_width = F, position = "center")
``` 

And now I got the Date format. I am able to continue my analysis.

# Missing Values

```{r, results='hide'}
sum(is.na(unemployment))
```

Good news! On this dataset there are `r sum(is.na(unemployment))` missing values, in total. 

In case the dataset had missing values, I would first look at which variables those were.In a second phase, it might be necessary to replace the missing values.

# Descriptive Statistics

The unemployment data for Greece refer to the period from April 1998 το August 2022. Regarding Europe we have data from January 2000 to August 2022.

The last 20 years have seen particularly large changes mainly in Greece, due to the domestic economic crisis. There is a noticeable change between September 2010 (10.1\%) and September 2013 (28.1 \%), in terms of unemployment in Greece. For the record, below you can find a table with the months that presented the highest unemployment in Greece.  As you will notice the five highest values were observed in 2013.


```{r}
unemployment %>% dplyr::filter(LOCATION == "GRC") %>% select(TIME, Value) %>% as.data.frame() %>%
  arrange(Value) %>% tail(5) %>% kbl() %>% kable_styling(full_width = F, position = "center")
```

Accordingly, the highest unemployment rates observed at the European level are the following:

```{r}
unemployment %>% dplyr::filter(LOCATION == "EU27_2020") %>% select(TIME, Value)  %>%
  as.data.frame() %>% arrange(Value) %>% tail(5) %>% kbl() %>% kable_styling(full_width = F, position = "center")
```


The lowest unemployment ever recorded in Greece was in the period of 2008:

```{r}
unemployment %>% dplyr::filter(LOCATION == "GRC") %>% select(TIME, Value) %>% as.data.frame() %>%
  arrange(Value) %>% head(5) %>% kbl() %>% kable_styling(full_width = F, position = "center")
```

On the other hand, at the moment in Europe we are at the lowest levels of the last 20 years, with unemployment hovering around 6\%.

```{r}
unemployment %>% dplyr::filter(LOCATION == "EU27_2020") %>% select(TIME, Value) %>%
  as.data.frame() %>% arrange(Value) %>% head(5) %>% kbl() %>% kable_styling(full_width = F, position = "center")
```

Finally, it is evident that in the case of Greece the changes are more intense than in Europe.

All of the above can be summarized by the following graph:

```{r}
grc_unemployment <- unemployment %>% filter(LOCATION == "GRC")

unemployment %>%
  ggplot(aes(x= TIME, y=Value, color = LOCATION)) +
  geom_line() + 
  geom_vline(aes(xintercept = as.POSIXct(as.Date("2010-11-03"))), color = "#000000", size = 1, linetype = "dashed")+
  scale_color_manual(values=c('black', 'dodgerblue2', 'orange')) +
  scale_x_date(date_labels = "%m-%Y") +
  theme_minimal()
```


# Examine stationarity

## Definition of stationarity


An important concept in studying time series is stationarity. A time series is called stationary [@appliedtimeseriespenn] if: \br

1.  $E(X_t) = \text{constant}$ \br
2.  $Var(X_t) = \text{constant}$ \br
3.  $Cov(X_t, X_s) = \text{constant}$

## Examine Stationarity Graphically

::: {.panel-tabset}

### Level

It is apparent that there is a big variation on the values of unemployment. This time series is not stationary and the differencing is justified.


```{r}
plot(grc_unemployment$Value,type = "l")
```


### First Diff.

Here we can see a big improvement in comparison with original data. I have some concerns about points close to 150 (mildly upwards trend) and 250 (outlier). 

```{r}
grc_unemployment_diff1 <- diff(grc_unemployment$Value, differences = 1)

plot(grc_unemployment_diff1,type = "l")
```


### Second Diff.


Given the concerns of above, I made also a second difference plot. It seems to solve the problem on points close to 150.

```{r}

grc_unemployment_diff2<- diff(grc_unemployment$Value, differences = 2)

plot(grc_unemployment_diff2, type = "l")

```


:::


## Examine Stationarity with Statistical tests


The graphical interpretation of stationarity can be beneficial for a quick assessment on topic of stationarity. However it can be considered a subjective metric, which leads on a non consistent decision (someone may consider the second figure as stationary and some others not. 


Thankfully, there are some statistical tests which can help us on our decisions. Some commonly used are :

- **Augmented Dickey-Fuller** (ADF) test
- **Phillips- Perron** (PP) test
- **Kwiatkowski-Phillips-Schmidt-Shin** (KPSS) test 


### Summary


```{r}
summary_stationarity_results <- data.frame(
                             "Type" = c("levels", "Diff(GRC)", "Diff2(GRC)"),
                             "ADF test" = c("Non Stationary", "Stationary", "Stationary"),
                              "PP test" = c("Non Stationary", "Stationary", "Stationary"),
                             "KPSS test" =c("Non Stationary", "Non Stationary", "Stationary")
)


summary_stationarity_results  %>% kbl() %>% kable_styling()
```


### ADF test




$$
\begin{array}{l}
H_0 : \text{Time series is not stationary} \\
H_1 : \text{Alternatively} 
\end{array}
\equiv
\begin{array}{l}
H_0 : \text{There is a unit root} \\
H_1 : \text{Alternatively} 
\end{array}
$$



```{r}
adf.test(grc_unemployment$Value) %>% as_flextable()
```

Συνεπώς, είναι προφανές από τα αποτελέσματα του
στατιστικού ελέγχου Dickey Fuller ότι η χρονοσειρά μου δεν είναι στάσιμη. Θα πρέπει να εφαρμόσω τον έλεγχο Dickey-Fuller στις δοαφορές.


```{r}
adf.test(grc_unemployment_diff1) %>% as_flextable()
```

And finally the results for the second differences are :

```{r}
adf.test(grc_unemployment_diff2) %>% as_flextable()
```


### PP  test

$$
\begin{array}{l}
H_0 : \text{Time series is not stationary} \\
H_1 : \text{Alternatively} 
\end{array}
\equiv
\begin{array}{l}
H_0 : \text{There is a unit root} \\
H_1 : \text{Alternatively} 
\end{array}
$$

```{r, warning=FALSE}
pp.test(grc_unemployment$Value,) %>% as_flextable()
```

```{r, warning=FALSE}
pp.test(grc_unemployment_diff1) %>% as_flextable()
```

```{r, warning=FALSE}
pp.test(grc_unemployment_diff2) %>% as_flextable()
```

### KPSS test

$$
\begin{array}{l}
H_0 : \text{Time series is stationary} \\
H_1 : \text{Alternatively} 
\end{array}
\equiv
\begin{array}{l}
H_0 : \text{There is not  unit root} \\
H_1 : \text{Alternatively} 
\end{array}
$$


```{r, warning=FALSE}
kpss.test(grc_unemployment$Value,) %>% as_flextable()
```

```{r, warning=FALSE}
kpss.test(grc_unemployment_diff1) %>% as_flextable()
```

```{r, warning=FALSE}
kpss.test(grc_unemployment_diff2) %>% as_flextable()
```

# Identify Model

::: {.panel-tabset}

## Levels

```{r}
par(mfrow = c(1, 2))

acf(grc_unemployment$Value)
pacf(grc_unemployment$Value )
```

## First Diff.

```{r}
par(mfrow = c(1, 2))

acf(grc_unemployment_diff1 )
pacf(grc_unemployment_diff1 )
```

## Second Diff.

```{r}
par(mfrow = c(1, 2))

acf(grc_unemployment_diff2 )
pacf(grc_unemployment_diff2 )
```

:::

# Build Time Series Model

::: {.panel-tabset}

## Automated model

```{r}
grc_unemployment = grc_unemployment%>% select(Value)
auto_model <- auto.arima(grc_unemployment, trace = T,seasonal = TRUE)
auto_model 
```


## ARIMA candidate 1

```{r}
arimaModel_1=arima(grc_unemployment, order=c(0,1,2))
arimaModel_1
```


## ARIMA candidate 2

```{r}
arimaModel_2=arima(grc_unemployment, order=c(1,1,2))
arimaModel_2
```


## ARIMA candidate 3

```{r}
arimaModel_3=arima(grc_unemployment, order=c(9,2,1))
arimaModel_3
```

:::

# Compare Models

After building some ARIMA models, I should
decide which is the best one to make my estimations. One metric to evaluate those models is **AIC** (Akaike Information Criterion). The lower the value of AIC, the better my model.



```{r}
accuracy_table <- data.frame(
                             "Name of Model" = c("Auto Model", "ARIMA Candidate #1", "ARIMA Candidate #2", "ARIMA Candidate #3"),
                             Model = c("ARIMA(0,2,1)", "ARIMA(0,1,2)", "ARIMA(1,1,2)", "ARIMA(9,2,1)"),
                             AIC =c(auto_model$aic, arimaModel_1$aic, arimaModel_2$aic, arimaModel_3$aic)
)


accuracy_table %>% kbl() %>% kable_styling()
```

So, the best model is the Auto Model (ARIMA(9,2,1)), which has the lowest AIC value. 


# Checking best models




# Forecast Future Unemployment

Previously, I identify which is the best model. Now, I will use this model in order to predict unemployment for the next 6 months. It should be recalled that the last available value was from August of 2022 (12.2\%). Therefore, I will make a prediction for unemployment in Greece until February 2023.

## ARIMA (0,2,1) forecasts

```{r}
forecast(auto_model,6) %>% autoplot()

forecast(auto_model,6) %>% kbl() %>% kable_paper()

```

## ARIMA (9,2,1) forecasts

```{r}
forecast(arimaModel_3,6) %>% autoplot()

forecast(arimaModel_3,6) %>% kbl() %>% kable_paper()
```

# Results

Given the diagram as well as the forecast table (of the best performing model, candidate #3), I conclude that a reduction in unemployment in Greece is expected in the next period of time (in the next six months). More specifically, **Greece's unemployment** in **February 2023** will range between **10\%** (9.4\%) and **13\%** (14\%) with an **80\%** (95\%) probability (based on **ARIMA(9,2,1)** model).

# Acknowledgements {.appendix .unlisted}

Image by <a href="https://pixabay.com/users/publicdomainpictures-14/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=19907">PublicDomainPictures</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=19907">Pixabay</a>


