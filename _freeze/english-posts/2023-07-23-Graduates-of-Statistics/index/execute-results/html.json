{
  "hash": "f60fa32ee95ddf0d0b48c3a2b5a4bfd4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Statistics of Statistics' Graduates\"\nauthor: \"stesiam\"\ndescription: |\n  Extracting tabular data from PDF file, in order to explore facts about graduates of Statistics and Insurance Department in University of Piraeus\nfreeze: true\nlink-external-newwindow: true\ncategories: [R, EDA, PDF, tabulizer]\nimage: graduation-cap.jpg\nimage-alt: graduation cap\nfig-cap-location: bottom\ndate: \"2023-07-23\"\ntoc: true\ntoc-title: Table of Contents\ntoc-location: left\ncitation: true\n#df_print: paged\ntitle-block-banner: true\nnocite: '@*'\ncsl: apa-6th-edition.csl\nbibliography: [references.bib]\nformat: \n  html:\n    freeze: true\n    code-link: true\n    code-fold: false\n    code-summary: \"Show the code\"\n    code-tools: \n      source: https://github.com/stesiam/stesiam.github.io/blob/gh-pages/english-posts/2023-07-23-Graduates-of-Statistics/index.qmd\n    fig_retina: 1\nexecute:\n  echo: true\neditor_options: \n  markdown: \n    wrap: 80\n---\n\n\n\n\n\n## Introduction\n::: {.callout-note}\nFrequent updates should be expected until this note be erased.\n:::\n\nThe recent study guide includes data about the graduates and their average grade of graduation over the years. First and foremost the data we are interested in are included in table form (which is good ðŸ˜€) but it is part of a pdf file (which is not good ðŸ˜¢). Thankfully, **tabulizer** is the solution to this kind of problems, as it one of its various features is to extract tabular data from pdf files.\n\n## Load Packages\n\nAs I will extract tables from a pdf file, I will definitely need `tabulizer` package. Unfortunately, I was not able to install the specific package, as I was getting an error similar to this\n[one](https://github.com/ropensci/tabulizer/issues/157). This issue seems to be related to rJava package and [this\ncomment](https://github.com/s-u/rJava/issues/255#issuecomment-794473988) solved the issue. After installing `rJava`, I was able to install successfully tabulizer as below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# remotes::install_github(c(\"ropensci/tabulizerjars\", \"ropensci/tabulizer\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidyr)\n\nlibrary(ggplot2)\nlibrary(ggtext)\nlibrary(glue)\nlibrary(showtext)\nlibrary(packcircles)\n#library(ggcirclepack)\nlibrary(sysfonts)\nlibrary(hrbrthemes)  #theme_ipsum_rs\nlibrary(waffle)\n\n\nlibrary(reactable)\n\nlibrary(rJava)\nlibrary(tabulizer)\nlibrary(pdftools)\n\n\nfont_add_google(\"Lobster\", \"lobster\")\nfont_add_google(\"Lato\", \"economica\")\nfont_add_google(\"Creepster\", \"Creepster\")\nfont_add_google(\"Oswald\", \"Oswald\")\nfont_add_google(\"Ubuntu Condensed\", \"uc\")\n\nsysfonts::font_add('fb', '_extensions/quarto-ext/fontawesome/assets/webfonts/fa-brands-400.ttf')\nsysfonts::font_add('fs', '_extensions/quarto-ext/fontawesome/assets/webfonts/fa-solid-900.ttf')\n\nshowtext_auto()\nshowtext::showtext_opts(dpi = 300)\n```\n:::\n\n\n\n\n\n## Extract Data\n\nThe study guide gives a general description of the university, as well as the prerequisites for a degree and a detailed description of each course. In total, the guide is a little bit less than 200 pages! Of course we don't need My main source of data is the Department's study guide. The most recent one (2022) has data on admissions, graduations etc., since 2004. The study guide gives a\ngeneral description of the university, as well as the prerequisites for a degree and a detailed description of each course. In total, the guide is a little bit less than 200 pages! Of course we don't need everything in there. I am just interested on the tables of the last pages, so I will extract those pages first from the original pdf.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# url = \"https://www.unipi.gr/faculty/mbouts/anak/OS_22_23.pdf\"\n# \n# download.file(url, \n#               destfile = \"sg22.pdf\",\n#               method = \"wget\",\n#               extra = \"--no-check-certificate\")\n\npdf_subset('sg22.pdf',\n  pages = 186:190,  output = \"subset.pdf\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"/home/stelios/stesiam.github.io/english-posts/2023-07-23-Graduates-of-Statistics/subset.pdf\"\n```\n\n\n:::\n:::\n\n\n\nSo, we extracted the pages which we are interested in. Let's take a look at\nthem:\n\n\n\n```{=html}\n<iframe width=\"100%\" height=\"600\" src=\"./subset.pdf\">\n</iframe>\n```\n\n\n\nThankfully, tabulizer comes with a very handy function to extract all the tables from a PDF file. Yeap, I know the original study guide is written in greek but don't worry that's just to take a basic understanding of how the pdf and the tables look. I will translate the column names when I will work with the data. But look at the bright side. At least we will get a notebook with ggplot2\nvisualizations as an alternative of those Excel graphs :)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstatistics_tables <- extract_tables(\n    file   = \"subset.pdf\", \n    method = \"decide\", \n    output = \"data.frame\")\n```\n:::\n\n\n\nExtracting the tables from splitted PDF I get a list of 5 tables with my data. It's amazing that in a matter of seconds I get all the information in a format ready for analysis. If I were to write them the traditional way (copy-paste) it would definitely take me an hour.\n\n## Admitted students\n\nSo, in Greece there is 1 standard way to be admitted to a university. Although there are 3 more ways which require some certain conditions. I will try to\nexplain them as simple as possible.\n\n### Main Exams\n\nOnce a year, third-year high school students from all over Greece take exams on\nthe same subjects at the same time. The exams are known as **Panhellenic\nExams**. Until today, it's one of the few things in Greece that as its integrity\nis not disputed, as the papers of students are getting graded by teachers from\nother areas. However, it has also faced considerable criticism for the pressure\nit places on students. In my opinion a fair one as everything in your life is\ndepending on these exams... If you fail you should wait to retake them next\nyear.\n\nTypically the exams are being held between the second half of May and the first\nweek of June. The students' grades are getting published approximately either\nthe end of June or the first days of July. Then you are completing a list on\nwhich you are declare which departments you are interested to. On the end of\nJuly the minimum grades to be admitted for each department are announced. Those\ncan fluctuate significantly every year as they are depending on both students'\nperformance on the Exams and the difficulty of the exams.\n\nIn a nutchell, the departments from big cities like Attica (Athens, Piraeus) and\nThessaloniki have the biggest demand and so the minimum grades for those are\nhigher from the rest ones. For example, the Statistics Department in Piraeus had\na minimum grade of 11700 in 2019 (for simplicity consider it like 11.7/20). The\ncorresponding department of Statistics in University of Aegean the same year had\na minimum grade of 5100 (5.1/20) (yes, that's not a typo). Well there are many\nreasons behind that, as the continuance of austerity in Greece, but in general\nthat's the pattern.\n\nNot so fun fact but when I made my list of preference for studies, Statistics in\nPiraeus was something like 15th place, so I guess my fate was that. Okay and a\nlittle bit of anxiety. :)\n\n### Transfer\n\nAs I wrote earlier there are some exceptions. First of all the Admission by\nTransfer is referring to transfer your place in one department with one\n**similar-study** in other city. There are many criteria mainly based on your\nincome. For example, a student admitted on Statistics on University of Aegean\ncould be admitted on Statistics Department on Piraeus (i.e. in case his/her\nfamily hasn't enough income).\n\nThese seats are limited.\n\n### Entry Exams\n\nIn case you have already graduated a Bachelor programme then you are able to\ngive Entry Exams on your department of choice, instead of the nightmare of\nPanhellenic Exams.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadmitted_students = statistics_tables[[1]] %>%\n  .[-1,] %>%\n  setNames(c(\"Year\", \"Main_exams\", \"Transfer\", \"Entry_exams\", \"Other\", \"Total\"))\n\n\nadmitted_students$Main_exams = admitted_students$Main_exams %>% as.integer()\nadmitted_students$Transfer= admitted_students$Transfer %>% as.integer()\nadmitted_students$Entry_exams = admitted_students$Entry_exams %>% as.integer()\nadmitted_students$Other = admitted_students$Other %>% as.integer()\nadmitted_students$Pct_Non_Main = (admitted_students$Main_exams/admitted_students$Total) %>% as.double()\nrownames(admitted_students) = 1:nrow(admitted_students)\n\n\n\nadmitted_students = admitted_students %>% \n  pivot_longer(\n    cols = !Year, \n    names_to = \"Admission_Type\", \n    values_to = \"count\"\n  )\n\nadmitted_students = admitted_students %>%\n  dplyr::filter(Admission_Type == \"Pct_Non_Main\" &\n                !(Year %in% c(\"2020-2121\",\"2021-2022\", \"2022-2023\"))) %>%\n  mutate(perc = round((1 - count)*100, digits = 2),\n         perc100 = 100-perc) %>%\n  dplyr::select(c(-Admission_Type, -count)) %>%\n  tidyr::pivot_longer(., cols = !Year,values_to = \"Obs\") %>%\n  dplyr::rename(\n    \n  )\n\nadmitted_students %>%\n  reactable(\n    defaultPageSize = 5\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"reactable html-widget html-fill-item\" id=\"htmlwidget-d9fc3cad7d36aef8ab2f\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d9fc3cad7d36aef8ab2f\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Year\":[\"2003-2004\",\"2003-2004\",\"2004-2005\",\"2004-2005\",\"2005-2006\",\"2005-2006\",\"2006-2007\",\"2006-2007\",\"2007-2008\",\"2007-2008\",\"2008-2009\",\"2008-2009\",\"2009-2010\",\"2009-2010\",\"2010-2011\",\"2010-2011\",\"2011-2012\",\"2011-2012\",\"2012-2013\",\"2012-2013\",\"2013-2014\",\"2013-2014\",\"2014-2015\",\"2014-2015\",\"2015-2016\",\"2015-2016\",\"2016-2017\",\"2016-2017\",\"2017-2018\",\"2017-2018\",\"2018-2019\",\"2018-2019\",\"2019-2020\",\"2019-2020\"],\"name\":[\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\"],\"Obs\":[15.28,84.72,17.35,82.65,13.08,86.92,16.59,83.41,23.87,76.13,32.81,67.19,30.33,69.67,30,70,1.49,98.51,13.08,86.92,25.45,74.55,19.49,80.51,13.82,86.18,13.82,86.18,17.06,82.94,8.25,91.75,21.92,78.08]},\"columns\":[{\"id\":\"Year\",\"name\":\"Year\",\"type\":\"character\"},{\"id\":\"name\",\"name\":\"name\",\"type\":\"character\"},{\"id\":\"Obs\",\"name\":\"Obs\",\"type\":\"numeric\"}],\"defaultPageSize\":5,\"dataKey\":\"d6ba351c17767cb1a57b17b789785898\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nI would like to examine the percentage of students who have been admitted by the other 3 ways over the years.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncaption_text = glue(\"<b> Data: </b> Study Guide of Statistics and Insurance Science <br><span style='font-family:fb;'  >&#xf09b;</span> <b>stesiam</b>, 2024\")\n\nadmitted_students1 =\n admitted_students %>%\ngroup_by(Year) %>%\nmutate(lab.ypos = cumsum(Obs) - 0.5*Obs)\n\nggplot(data = admitted_students1, aes(x = \"\", y = Obs, fill = name)) +\n  geom_bar(stat=\"identity\", width=1) +\n  geom_richtext(aes(y = lab.ypos, label = ifelse(name == \"perc100\", paste0(round(Obs), \"%\"), \"\")), color = \"white\", fontface = \"bold\",\n      fill = NA, label.color = NA)+\n  facet_wrap(~Year, nrow = 3) +\n  coord_polar(\"y\", start=0) +\n  labs(\n    title = \"Proportion of Admissions through Panhellenic Exams\",\n    subtitle = glue(\"It seems that <span style = 'color:#619CFF; font-weight: bold'>Panhellenic Exams</span> is the prevalent way to be admitted to Statistics <br> Department. Although that was an expected result. It is interesting to study <br> the proportion over the years. The most extraordinary result is in 2011 when almost <br>  everyone came through Panhellenic Exams.\"),\n    caption = caption_text\n  ) +\n  theme_void(base_size = 12) +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_markdown(family = \"lobster\", face=\"bold\"),\n    plot.subtitle = element_markdown(family = \"economica\", \n                                      margin = margin(t=5,b=5)),\n    plot.caption = element_markdown(family = \"economica\",\n                                    lineheight = 1.2)\n  )\n```\n\n::: {.cell-output-display}\n![Admitted Undergrads through Panhellnic Exams](index_files/figure-html/fig-line-plot-1.png){#fig-line-plot width=2100}\n:::\n:::\n\n\n\n\n## Student Population\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nA = statistics_tables[[2]] %>%\n  setNames(c(\"Year\", \"BSc\", \"MScAppliedStat\", \"MScActuar\", \"PhD\")) %>%\n  .[-1,] %>%\n  mutate_at(., vars(-Year), as.integer) %>%\n  tidyr::pivot_longer(., cols = !Year, values_to = \"Obs\")\n \nd = A %>% \n  dplyr::filter(name == \"BSc\" & (Year == \"2003-2004\" | Year == \"2022-2023\"))\n\ne = A %>% dplyr::filter(name == \"BSc\") %>% dplyr::filter(.,Obs == max(Obs) | Obs == min(Obs)) %>%\n  .$Year\n\nsub = glue(\"Last 20 years the undergraduates have been increased\n           by <span style = 'color:orange; font-weight: bold'>{d$Obs[2] - d$Obs[1]}</span> ({round(((d$Obs[2] - d$Obs[1])/d$Obs[1])*100, digits = 2)} %). <br>The highest number of undergrads is observed at the academic term of <span style = 'color:red; font-weight: bold'>{e[1]}</span> <br> and the lowest at <span style = 'color:#0a5c36; font-weight: bold'>{e[2]}</span>\" ) \n\nA %>%\n  dplyr::filter(name == \"BSc\") %>%\n  ggplot(., aes(x = Year, y = Obs, group = \"1\")) +\n  ylim(2000, 3500) +\n  geom_line(color = \"white\") +\n  labs(title = \"Number of Undergraduate Students\",\n       x = \"Academic Year\",\n       y = \"Undergraduate Students\",\n       caption = caption_text,\n       subtitle = sub) +\n  geom_point(data= A %>% dplyr::filter(name == \"BSc\") %>% dplyr::filter(.,Obs == max(Obs)), aes(x = Year, y = Obs), color = \"red3\") +\n  geom_point(data= A %>% dplyr::filter(name == \"BSc\") %>% dplyr::filter(.,Obs == min(Obs)), aes(x = Year, y = Obs), color = \"green4\") +\n  geom_point(data = A %>% dplyr::filter(Year == \"2003-2004\" | Year == \"2022-2023\") %>% dplyr::filter(name == \"BSc\"), color = \"orange\") +\n  geom_text(data= A %>% dplyr::filter(Year == \"2003-2004\" | Year == \"2022-2023\") %>% dplyr::filter(name == \"BSc\"),aes(x = Year, y = Obs+200, label = Obs), color = \"orange\", fontface = \"bold\", size = 4) +\n  theme_minimal(base_size = 12) +\n  theme(axis.text.x = element_text(angle = 60,color = \"white\"),\n        axis.text.y = element_text(color = \"white\"),\n        axis.title = element_text(color = \"white\"),\n        panel.grid = element_blank(),\n        plot.title = element_text(family = \"Oswald\", hjust = 0.5),\n        plot.title.position = \"plot\",\n        plot.subtitle = element_markdown(family = \"Oswald\",\n                                     margin = margin(l = 10, r = 10),\n                                     lineheight = 1.2, hjust = 0.5),\n        plot.caption = element_markdown(family = \"Oswald\", size = 10,\n                                    lineheight = 1.2),\n        plot.background = element_rect(fill = \"black\", color = \"black\"),\n        panel.background = element_rect(fill = \"black\", color = \"black\"),\n        text = element_text(color = \"white\")\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=2100}\n:::\n:::\n\n\n\n## PhD Students Ratio\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# statistics_tables[[3]] %>%\n#   setNames(c(\"Year\", \"MSc_AppliedStats\", \"MSc_Actuar\")) %>%\n#   slice(-c(1:2))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nms_phd_students = statistics_tables[[2]] %>%\n  setNames(c(\"AcademicYear\", \"BSc\", \"MSc (AppliedStat)\", \"MSc (Actuar)\", \"PhD\")) %>%\n  .[-1,]\n\nrownames(ms_phd_students) = 1:nrow(ms_phd_students)\n\nms_phd_students = ms_phd_students %>%\n  mutate_at(c(\"BSc\", \"MSc (AppliedStat)\", \"MSc (Actuar)\", \"PhD\"), as.numeric) %>%\n  mutate(pct = round((PhD/BSc)*100, 2)) %>%\n  mutate(AcademicYear = stringr::str_remove(AcademicYear, \"-.*\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nâ„¹ In argument: `MSc (Actuar) = .Primitive(\"as.double\")(`MSc (Actuar)`)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggpattern)\nlibrary(MetBrewer)\nbg_gradient <- grid::linearGradient(colours = rev(MetBrewer::met.brewer(\"Pillement\")[5:6]))\nspline.d <- as.data.frame(spline(ms_phd_students$AcademicYear, ms_phd_students$pct))\nggplot(spline.d, aes(x = x, y = y, group = 1))  +\n  ggpattern::geom_area_pattern(\n                               pattern = \"gradient\", \n                               fill = \"#00000000\",\n                               pattern_fill  = \"#00000000\",\n                               pattern_fill2 = \"#80C02080\") +\n  labs(\n    title = \"Ratio of PhD students per Hundreds of Undergraduates\",\n    subtitle = \"The decrease \",\n    caption = caption_text\n  ) +\n  geom_text(data = spline.d %>% dplyr::filter(y == min(y) | y == max(y)),aes(label = round(y,digits = 2), y = y+0.05), fontface = \"bold\", family = \"uc\", nudge_y =0.1, size = 2) +\n  scale_y_continuous(expand = c(0, 0), limits = c(0, NA)) + \n  theme_minimal(base_size = 5) +\n  theme(legend.position = \"none\",\n        plot.title.position = \"plot\",\n        plot.title = element_markdown(family = \"lobster\", face=\"bold\",\n        hjust = 0.5),\n        plot.subtitle = element_markdown(family = \"economica\", \n                                      margin = margin(t=5,b=5, r=10, l = 10),\n                                      hjust = 0.5,\n                                      lineheight = 1.2),\n        plot.caption = element_markdown(family = \"economica\",\n                                    lineheight = 1.2),\n        axis.title = element_blank()\n        )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n## Structure of Students\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nB = statistics_tables[[2]] %>%\n  setNames(c(\"Year\", \"BSc_students\", \"MScStudentsA\", \"MScStudentsB\", \"PhD\")) %>%\n  .[-1,] %>%\n mutate_at(., vars(-Year), as.integer) %>%\n mutate(\n   MScStudentsB = tidyr::replace_na(MScStudentsB, 0),\n   MSc_Students = MScStudentsA + MScStudentsB\n ) %>%\n  dplyr::select(-c(\"MScStudentsA\", \"MScStudentsB\")) %>%\n  relocate(., MSc_Students, .after = \"BSc_students\") %>%\n  mutate(\n    total = BSc_students + MSc_Students + PhD,\n    BSc_students = BSc_students/total,\n    MSc_Students = MSc_Students/total,\n    PhD = PhD/total\n  ) %>%\n  mutate_at(vars(!c(Year, total)), ~round(.*100, 2)) %>%\n  dplyr::select(c(-total)) %>%\n  tidyr::pivot_longer(., cols = !c(Year), values_to = \"Obs\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nâ„¹ In argument: `MScStudentsB = .Primitive(\"as.integer\")(MScStudentsB)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nB %>%\ndplyr::filter(Year == \"2021-2022\") %>%\nggplot(., aes(label=name, values=round(Obs))) +\ngeom_pictogram(n_rows = 10,\n               flip = TRUE,\n               make_proportional = TRUE, \n               family = \"fs\", size = 5, \n               aes(color = name)) +\n  scale_label_pictogram(\n    name = NULL,\n    values = c(\n      \"BSc_students\" = \"graduation-cap\", \n      \"MSc_Students\" = \"graduation-cap\", \n      \"PhD\" = \"graduation-cap\"\n    )\n  ) +\nscale_color_manual(\n    name = NULL,\n    values = c(\n      BSc_students = \"#a40000\",\n      MSc_Students = \"#c68958\", \n      PhD = \"black\"\n    )\n  ) +\n  labs(\n      title = \"Students' Ratio by Degree\",\n      subtitle = \"**<span style = 'color:#a40000; font-weight: bold'>Undergraduates</span>** are about the 95% of the total student population of our Dept. <br> Next we have **<span style = 'color:#c68958; font-weight: bold'>Postgraduates</span>** are the 5% and **<span style = 'color:black; font-weight: bold'>PhD</span>** candidates are just 0.5%.\",\n      caption = caption_text\n  ) +\n  coord_equal() +\n  theme_ipsum_rc(grid=\"\") +\n  theme_enhance_waffle() +\n  theme(legend.position = \"none\",\n        plot.title.position = \"plot\",\n        plot.title = element_markdown(family = \"lobster\", face=\"bold\",\n        hjust = 0.5),\n        plot.subtitle = element_markdown(family = \"economica\", \n                                      margin = margin(t=5,b=5, r=10, l = 10),\n                                      hjust = 0.5, size = 10,\n                                      lineheight = 1.2),\n        plot.caption = element_markdown(family = \"economica\",\n                                    lineheight = 1.2))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=2100}\n:::\n:::\n\n\n\n\n## Graduation Rate\n\n\n\n::: {.cell}\n\n:::\n\n\n\n## Graduates & Graduation Grade\n\nI hope you are still here because for the end I hold the best part. Finally, how\ndid we perform? The study guide gives a distribution\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextractGraduatesAndGrades = statistics_tables[[4]] %>%\n  setNames(c(\"Year\", \"[5.0 - 6)\", \"[6, 7)\", \"[7-8.5)\", \"[8.5-10]\", \"AVG_Grade\")) %>%\n  slice(-c(1:4))  %>%\n  mutate(across(\"AVG_Grade\"), separate(.,AVG_Grade, into = c(\"AVG_Grade\", \"Graduates\"),sep = \"\\\\(\")) %>%\n  select(c(\"Year\", \"AVG_Grade\", \"Graduates\")) %>%\n  mutate(\n    \"Graduates\" =  stringr::str_remove_all(Graduates, \"\\\\)\")\n  ) %>%\n  mutate(\n    AVG_Grade = stringr::str_replace_all(AVG_Grade, \",\", \".\")\n  ) %>%\n  mutate_at(vars(\"AVG_Grade\", \"Graduates\"), as.numeric)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata = extractGraduatesAndGrades %>%\n  mutate(\n    AVG_Group = ifelse(AVG_Grade >= mean(AVG_Grade), \"over\", \"under\")\n  ) %>%\n  mutate(\n    Year = stringr::str_remove_all(Year, \"-.*\")\n  )\n\npacking <- circleProgressiveLayout(data$Graduates, sizetype='area')\ndata <- cbind(data, packing)\ndata <- data |> \n  rename(xcirc = x, \n         ycirc = y, \n         radius_circ = radius) |> \n  tibble::rowid_to_column('id')\n# Calculate the 50 vertices points for each circle\ndat.gg <- circleLayoutVertices(packing, npoints=50)\nfinal_data <- left_join(data, dat.gg, by = join_by(id))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = final_data) + \n  geom_polygon(aes(x, \n                   y, \n                   group = Year,\n                   fill = AVG_Group), \n               colour = \"white\", \n               # alpha = 0.7\n               ) +\n  scale_fill_manual(values = c(\"under\"=\"#ff6366\",\"over\" = \"#0D6E6E\"))+\n  geom_richtext(aes(xcirc, \n                ycirc,\n                size = Graduates,\n                label = glue(\"{Year}\")),\n            family = 'uc', \n            fontface = 'bold',\n            fill = NA, label.color = NA) +\n  labs(title = \"Graduates and Graduation Grade per Year\",\n       subtitle = \"On this bubble chart we visualized the total graduates per Academic Year <br> depending on the size of the circle. Funrthermore, the color of the circle <br> notes if the average grade of graduation of that specific year is **<span style = 'color: #0D6E6E'>over</span>** or <br>**<span style = 'color: #ff6366'>under</span>** the historical average graduation grade.\",\n       x = NULL,\n       y = NULL,\n       caption = caption_text) +\n  coord_equal() +\n  theme_void(base_size = 10) +\n  theme(\n      legend.position = \"none\",\n      plot.subtitle = element_markdown(family = \"serif\"),\n      plot.caption = element_markdown(lineheight = 1.2)\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=2100}\n:::\n:::\n\n\n\n## Online vs On-campus Exams\n\nDue to pandemic COVID-19, Greek government suspended the operation of schools\n(elementary, high school, universities) on Tuesday 10 March 2020. Some days\nlater imposed lockdown measures. That period our department organized online\nlectures and organized online exams for the majority of the courses on Spring\nSemester and on the September (retake exams). Long story short that lasted for\nat least 2 years.\n\n## Students Graduated in 6 Years\n\nLast but not least, maybe the most nervewrecking statistic is that one. Just for\nclarification, our studies have a duaration of four years. Although the majority\nwill not successfully finish their degree even in 6 Years. This is important as\ncurrently has been voted the time-limit on BSc studies. We have 6 years to\ncomplete our studies otherwise we will not take the degree. In the next years,\nthe best case scenario is that 60% of my collegeaus who were about to graduate\nwill not get their degree.\n\n![](https://github.com/stesiam/30DayChartChallenge/blob/main/2024/day23/day23-2024-cc.png?raw=true)\n\n## Acknowledgements {.appendix .unlisted}\n\nDataset based on recent study guide\n<a href=\"https://www.unipi.gr/faculty/mbouts/anak/OS_22_23.pdf\">recent study\nguide</a> of Department of Statistics and Insurance Science of the University of\nPiraeus.\n\nImage by\n<a href=\"https://pixabay.com/users/vloveland-4834409/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2148715\">Victoria\nLoveland</a> from\n<a href=\"https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2148715\">Pixabay</a>",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/core-js-2.5.3/shim.min.js\"></script>\n<script src=\"../../site_libs/react-18.2.0/react.min.js\"></script>\n<script src=\"../../site_libs/react-18.2.0/react-dom.min.js\"></script>\n<script src=\"../../site_libs/reactwidget-1.0.0/react-tools.js\"></script>\n<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/reactable-0.4.4.9000/reactable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/reactable-binding-0.4.4.9000/reactable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}