{
  "hash": "43afe7a8d28e43e97ded5fab7957a7c3",
  "result": {
    "markdown": "---\ntitle: \"Git Series (Part I - Configuration)\"\nauthor: \"stesiam\"\ndescription: \"An article that brings together some configuration setttings of Git. A beginner's approach to Git.\"\ncategories: [Git]\nfig-cap-location: bottom\ndate: \"2022-11-04\"\nfreeze: true\nimage: git_new.png\nimage-alt: \"Git commands\" \ntoc: true\ntoc-title: Table of contents\ntoc-location: left\ntitle-block-banner: true\ncitation: true\nnocite: '@*'\ncsl: apa-6th-edition\nbibliography: references.bib\nformat: \n  html:\n    freeze: true\n    code-link: true\n    code-fold: true\nexecute:\n  echo: true\neditor_options: \n  markdown: \n    wrap: 80\n---\n\n\n## Introduction\n\n### What is Version Control System\n\n![Workflow without Version Control System](workflow_without_vcs.png)\n\n\n### Popularity of VCS\n\nThe concept of Versioning \n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntrends_vcs_tidy %>%\n  ggplot(aes(x= Month, y = counts)) +\n  geom_line(aes(color = VCS)) +\n  labs(title = \"Trends on Version Control Systems\",\n              subtitle = \"Compare trends of Git and SVN (Subversion) from 2004 to 2022\",\n              caption = \"Data source: Google Trends\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](2022-11-04-Git-Commands_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nΌπως είδαμε παραπάνω το Git αποτελεί το εργαλείο που κυριαρχεί. όταν θέλουμε να κάνουμε versioning σε μία εργασία μας ή σε ένα \n\n\n### Benefits\n\n\n\n\n\n### Drawbacks\n\n\n\n\n\n## Git settings\n\n### Set up Name & Email\n\nSo, you decided to start Git without setting Name and Email? \n\nYou may think of it again. In case you try to commit without setting a Name and email. Git will not commit your changes, without prior setting those.\n\n```{.bash filename=\"Terminal\"}\ngit config --global user.name \"YourName\"\ngit config --global user.email your_email\n```\n\n:::{.callout-note}\nIf you are planning to host your repository on GitHub, you may want to hide your casual email. In that case GitHub offers a `noreply` email for this purpose. You can read more [here](https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-email-preferences/setting-your-commit-email-address).\n:::\n\n\n### Set editor\n\n\n\n```{.bash filename=\"Terminal\"}\ngit config --global core.editor \"editor_name\"\n```\n\n\n| Editor     | Command | \n| :---        |    :----:   |\n| Atom     | Title       |\n| Vim   | Text        |\n\n### Default branch name to main\n\nΤον Οκτώβριο του 2020 το GitHub αποφάσισε να αλλάξει το προεπιλεγμένο όνομα του branch από master σε main. Συνεπώς, καλό θα ήταν να κάνουμε και αυτή την αλλαγή και στο local περιβάλλον μας, ως εξής.\n\n```{.bash filename=\"Terminal\"}\ngit config --global init.defaultBranch main\n```\n\n\n### Merge method\n\n\n\n```{.bash filename=\"Terminal\"}\ngit config --global merge.ff false\n```\n\n\n\n### Check your settings\n\nYou can verify your settings by using the following command :\n\n```{.bash filename=\"Terminal\"}\ngit config --list\n```\n\nHere is the output on my machine :\n\n\n![Output of git-config command](git_config_output.png)\n\n\n## To sum up\n\nAll the above can be summed up on the following list of commands.\n\n```{.bash filename=\"Terminal\"}\ngit config --global user.name \"YourName\"\ngit config --global user.email your_email\ngit config --global core.editor \"editor_name\"\ngit config --global init.defaultBranch main\ngit config --global merge.ff false\n\n# check git config settings\n\ngit config --list --show-origin\n```\n\nOf course you can access your git config file on your Home directory (at least on Ubuntu installation). \n\n:::{.callout-warning}\nNote that the .gitconfig file, which contains our settings, may not be visible in the Home directory. In general, files whose names begin with a period are not displayed. However, if everything has been done correctly, it's probably there. For example, in Ubuntu you should choose to show hidden files.\n:::\n\nIn case you open that file you will see probably something like the above :\n\n<script src=\"https://gist.github.com/stesiam/c4c1541fd57dad0cafdb3c8be9b95a12.js\"></script>\n\n## More about git config\n\nAlso, you can find Git config's documentation [here](https://git-scm.com/docs/git-config).\n\n\n## Acknowledgements {.appendix}\n\nImage by <a href=\"https://pixabay.com/users/skorec-16694100/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=7522129\">Daniel Skovran</a> from <a href=\"https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=7522129\">Pixabay</a>\n",
    "supporting": [
      "2022-11-04-Git-Commands_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}