{
  "hash": "648e307b3e9cc0711342784bf5809838",
  "result": {
    "markdown": "---\ntitle: \"Quarto and GitHub Pages\"\nauthor: \"stesiam\"\ndescription: |\n  Hosting your Quarto site with GitHub Pages.\ncategories: [Quarto, Github Pages, Website]\nimage: article.png\nfig-cap-location: bottom\ndate: \"2022-08-05\"\ntoc: true\ntoc-title: Table of contents\ntoc-location: left\ncitation: true\nslug: stesiam2022firstarticle\ntitle-block-banner: true\nnocite: '@*'\ncsl: apa-6th-edition\nbibliography: references.bib\nformat: \n  html:\n    code-link: true\nexecute:\n  echo: true\n  freeze: true\neditor_options: \n  markdown: \n    wrap: 80\n---\n\n\n# Implementation\n\n## Step 1 : Adding a .nojekyll file\n\nGitHub supports natively Jekyll sites. In case someone wants to host a website\nby using a different framework has to create that file. So simple as that.\n\nIf you are working local you can use this command :\n\n``` bash\ncd path/to/project\ntouch .nojekyll\n```\n\nNote : You do not need to write anything on your .nokekyll file.\n\n## Step 2 : Specify Quarto's output directory\n\nAnd here comes my main troubleshooting with Github Pages. As a new user I came\nup that Github gives an already named specified folder for output (named\n\"docs\"). On Quarto, when you render your website the default directory that\nincludes all the parts of your website) is named \"\\_site\".\n\n::: column-margin\n<center>\n\n![Quarto's Logo](quarto.png)\n\n</center>\n:::\n\nIn order to solve that you can go to your `quarto.yml` file and specify under\nthe project category, your output directory like this :\n\n``` yml\nproject:\n  type: website\n  output-dir: docs\n```\n\nIf you are not sure you can always check [my\nrepository](https://github.com/stesiam/stesiam.github.io) to see how I did it.\n\n## Step 3 : Render and Push to GitHub\n\nHere I will split on two conditions. In case your project is already on GItHub\nand if it's not.\n\n::: column-margin\n<center>\n\n![Github's Logo](github_logo.png)\n\n</center>\n:::\n\nAt this point you have done the most crucial part but there is a little bit\nmore. Now, you have to render your website.\n\nAfter you have done that you can commit your changes like that :\n\n``` bash\ncd path/to/project\n\ngit add .\ngit commit -m \"Initial commit\"\n```\n\nAnd push your changes to your repository on GitHub.\n\n``` bash\ngit push -u origin gh-pages\n```\n\n## Step 4 : Change the settings of your repository\n\nLast step, to make your page working is to go to the settings of your website\nrepository. <br> <br>\n<center>\n![](settings_github.png){width=\"500\"} \n</center>\n<br>\n\nAnd set docs as your output directory : <br>\n<center>\n![](set_directory_github.png){width=\"500\"} \n</center>\n<br>\n\n\nNow, your project should be \"GitHub Pages -ready\". If your site is not live, you should check if something else is\nset up wrongly or you are missing something. There is one article by Beatriz\nMilz, who explains the procedure of creating a Quarto website [@milz2022quarto].\nAlthough, have in mind that the aforementioned article uses Netlify instead of\nGitHub Pages which is the main subject of this article.\n\n# Alternatives to Github Pages\n\nThe most known one is [Netlify](https://www.netlify.com/) and is being used by\nmany users. Except for the fact that is free with some limitations that are\nunlocked on their premium plans, I think that it is also a viable option.\n\n::: column-margin\n<center>\n\n![Netlify's Logo](netlify_logo.png)\n\n</center>\n:::\n\nThe main advantage is that I can specify the directory of my output This\nsimplifies even more our procedure to publish our website. Also, on\n[Netlify](https://www.netlify.com/), I do not need to create a .nojekyll file,\nas I did on this site's repository[^1].\n\n[^1]: My site is using [GitHub Pages](https://pages.github.com/), instead of\n    Netlify.\n\n## Last updated on {.appendix .unnumbered .unlisted}\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"2022-08-05\"\n```\n:::\n:::\n\n\n## Acknowledgments {.appendix .unnumbered .unlisted}\n\nThumbnail image made with the help of <a href=\"https://www.gimp.org/\">GIMP</a>.\nAlso, I used the logos of <a href=\"https://quarto.org/\">Quarto</a>,\n<a href=\"https://pages.github.com/\">Github Pages</a> and\n<a href=\"https://www.netlify.com/\">Netlify</a>.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}