{
  "hash": "a8976fd8e6bb4236a0ac4b696ced15b7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Statistics of Statistics' Graduates\"\nauthor: \"stesiam\"\ndescription: |\n  Extracting tabular data from PDF file, in order to explore facts about graduates of Statistics and Insurance Department in University of Piraeus\nlink-external-newwindow: true\ncategories: [R, EDA, PDF, tabulizer]\nfig-cap-location: bottom\ndate: \"2023-07-23\"\nfreeze: true\nimage: graduation-cap.jpg\ndf_print: paged\nimage-alt: graduation cap\ntoc: true\ntoc-title: Table of contents\ntoc-location: left\ncitation: true\nslug: stesiam2022\ntitle-block-banner: true\nnocite: '@*'\ncsl: apa-6th-edition.csl\nbibliography: [references.bib]\nformat: \n  html:\n    code-link: true\n    code-fold: false\n    code-summary: \"Show the code\"\n    code-tools: \n      source: repo\n    fig_retina: 1\nexecute:\n  echo: true\neditor_options: \n  markdown: \n    wrap: 80\n---\n\n\n\n\n\n\n## Introduction\n\n**NOTE:** Frequent updates should be expected until this note be erased.\n\nThe recent study guide includes data about the graduates and their average grade of graduation over the years. First and foremost the data we are interested in are included in table form (which is good) but is is part of a pdf file (which is not good :)). Thankfully, **tabulizer** is the solution to this kind of problems.\n\n\n## Load Packages\n\nAs I will extract tables from a pdf file, I will definitely need **tabulizer** package. Unfortunately, I was not able to install the specific package, as I was getting an error similar to this [one](https://github.com/ropensci/tabulizer/issues/157). This issue seems to be related to rJava package and [this comment](https://github.com/s-u/rJava/issues/255#issuecomment-794473988) solved the issue. After installing rJava I was able to install successufully tabulizer as below:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# remotes::install_github(c(\"ropensci/tabulizerjars\", \"ropensci/tabulizer\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rJava)\nlibrary(tabulizer)\nlibrary(dplyr)\nlibrary(pdftools)\nlibrary(tidyr)\nlibrary(reactable)\n\nlibrary(ggplot2)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(glue)\n\nlibrary(packcircles)\n\nfont_add_google(\"Lobster\", \"lobster\")\nfont_add_google(\"Economica\", \"economica\")\nfont_add_google(\"Creepster\", \"Creepster\")\nfont_add_google(\"Oswald\", \"Oswald\")\nfont_add_google(\"Ubuntu Condensed\", \"uc\")\nshowtext_auto()\n```\n:::\n\n\n\n\n\n## Extract Data\n\nThe study guide gives a general description of the university, as well as the prerequisites for a degree and a detailed description of each course. In total, the guide is a little bit less than 200 pages! Of course we don't need \nMy main source of data is the Department's study guide. The most recent one (2022) has data on admissions, graduations etc., since 2004. The study guide gives a general description of the university, as well as the prerequisites for a degree and a detailed description of each course. In total, the guide is a little bit less than 200 pages! Of course we don't need everything in there. I am just interested on the tables of the last pages, so I will extract those pages first from the original pdf.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# url = \"https://www.unipi.gr/faculty/mbouts/anak/OS_22_23.pdf\"\n# \n# download.file(url, \n#               destfile = \"sg22.pdf\",\n#               method = \"wget\",\n#               extra = \"--no-check-certificate\")\n\npdf_subset('sg22.pdf',\n  pages = 186:190,  output = \"subset.pdf\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"/home/stelios/stesiam.github.io/english/2023-07-23-Graduates-of-Statistics/subset.pdf\"\n```\n\n\n:::\n:::\n\n\n\nSo, we extracted the pages which we are interested in. Let's take a look at them:\n\n\n\n```{=html}\n<iframe width=\"100%\" height=\"600\" src=\"./subset.pdf\">\n</iframe>\n```\n\n\n\n\nThankfully, tabulizer comes with a very handy function to extract all the tables from a PDF file. Yeap, I know the original study guide is written in greek but don't worry that's just to take a basic understanding of how the pdf and the tables look. I will translate the column names when I will work with the data. But look at the bright side. At least we will get a notebook with ggplot2 visualizations as an alternative of those Excel graphs :)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstatistics_tables <- extract_tables(\n    file   = \"subset.pdf\", \n    method = \"decide\", \n    output = \"data.frame\")\n```\n:::\n\n\n\nExtracting the tables from splitted PDF I get a list of 5 tables with my data. It's amazing that in a matter of seconds I get all the information in a format ready for analysis. If I were to write them the traditional way (copy-paste) it would definitely take me an hour.\n\n\n##  Admitted students\n\nSo, in Greece there is 1 standard way to be admitted to a university. Although there are 3 more ways which require some certain conditions. I will try to explain them as simple as possible. \n\n\n\n\n### Main Exams\n\nOnce a year, third-year high school students from all over Greece take exams on the same subjects at the same time. The exams are known as **Panhellenic Exams**. Until today, it's one of the few things in Greece that as its integrity is not disputed, as the papers of students are getting graded by teachers from other areas. However, it has also faced considerable criticism for the pressure it places on students. In my opinion a fair one as everything in your life is depending on these exams... If you fail you should wait to retake them next year.\n\nTypically the exams are being held between the second half of May and the first week of June. The students' grades are getting published approximately either the end of June or the first days of July. Then you are completing a list on which you are declare which departments you are interested to. On the end of July the minimum grades to be admitted for each department are announced. Those can fluctuate significantly every year as they are depending on both students' performance on the Exams and the difficulty of the exams.\n\nIn a nutchell, the departments from big cities like Attica (Athens, Piraeus) and Thessaloniki have the biggest demand and so the minimum grades for those are higher from the rest ones. For example, the Statistics Department in Piraeus had a minimum grade of 11700 in 2019  (for simplicity consider it like 11.7/20). The corresponding department of Statistics in University of Aegean the same year had a minimum grade of 5100 (5.1/20) (yes, that's not a typo). Well there are many reasons behind that, as the continuance of austerity in Greece, but in general that's the pattern.\n\nNot so fun fact but when I made my list of preference for studies, Statistics in Piraeus was something like 15th place, so I guess my fate was that. Okay and a little bit of anxiety. :)\n\n### Transfer\n\nAs I wrote earlier there are some exceptions. First of all the Admission by Transfer is referring to transfer your place in one department with one **similar-study** in other city. There are many criteria mainly based on your income. For example, a student admitted on Statistics on University of Aegean could be admitted on Statistics Department on Piraeus (i.e. in case his/her family hasn't enough income). \n\nThese seats are limited.\n\n### Entry Exams\n\nIn case you have already graduated a Bachelor programme then you are able to give Entry Exams on your department of choice, instead of the nightmare of Panhellenic Exams.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nadmitted_students = statistics_tables[[1]] %>%\n  .[-1,] %>%\n  setNames(c(\"Year\", \"Main_exams\", \"Transfer\", \"Entry_exams\", \"Other\", \"Total\"))\n\n\nadmitted_students$Main_exams = admitted_students$Main_exams %>% as.integer()\nadmitted_students$Transfer= admitted_students$Transfer %>% as.integer()\nadmitted_students$Entry_exams = admitted_students$Entry_exams %>% as.integer()\nadmitted_students$Other = admitted_students$Other %>% as.integer()\nadmitted_students$Pct_Non_Main = (admitted_students$Main_exams/admitted_students$Total) %>% as.double()\nrownames(admitted_students) = 1:nrow(admitted_students)\n\n\n\nadmitted_students = admitted_students %>% \n  pivot_longer(\n    cols = !Year, \n    names_to = \"Admission_Type\", \n    values_to = \"count\"\n  )\n\nadmitted_students = admitted_students %>%\n  dplyr::filter(Admission_Type == \"Pct_Non_Main\" &\n                !(Year %in% c(\"2020-2121\",\"2021-2022\", \"2022-2023\"))) %>%\n  mutate(perc = round((1 - count)*100, digits = 2),\n         perc100 = 100-perc) %>%\n  dplyr::select(c(-Admission_Type, -count)) %>%\n  tidyr::pivot_longer(., cols = !Year,values_to = \"Obs\") %>%\n  dplyr::rename(\n    \n  )\n\nadmitted_students %>%\n  reactable(\n    defaultPageSize = 5\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"reactable html-widget html-fill-item\" id=\"htmlwidget-2a2eab3e124ec3bc3402\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2a2eab3e124ec3bc3402\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"Year\":[\"2003-2004\",\"2003-2004\",\"2004-2005\",\"2004-2005\",\"2005-2006\",\"2005-2006\",\"2006-2007\",\"2006-2007\",\"2007-2008\",\"2007-2008\",\"2008-2009\",\"2008-2009\",\"2009-2010\",\"2009-2010\",\"2010-2011\",\"2010-2011\",\"2011-2012\",\"2011-2012\",\"2012-2013\",\"2012-2013\",\"2013-2014\",\"2013-2014\",\"2014-2015\",\"2014-2015\",\"2015-2016\",\"2015-2016\",\"2016-2017\",\"2016-2017\",\"2017-2018\",\"2017-2018\",\"2018-2019\",\"2018-2019\",\"2019-2020\",\"2019-2020\"],\"name\":[\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\",\"perc\",\"perc100\"],\"Obs\":[15.28,84.72,17.35,82.65,13.08,86.92,16.59,83.41,23.87,76.13,32.81,67.19,30.33,69.67,30,70,1.49,98.51,13.08,86.92,25.45,74.55,19.49,80.51,13.82,86.18,13.82,86.18,17.06,82.94,8.25,91.75,21.92,78.08]},\"columns\":[{\"id\":\"Year\",\"name\":\"Year\",\"type\":\"character\"},{\"id\":\"name\",\"name\":\"name\",\"type\":\"character\"},{\"id\":\"Obs\",\"name\":\"Obs\",\"type\":\"numeric\"}],\"defaultPageSize\":5,\"dataKey\":\"d6ba351c17767cb1a57b17b789785898\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nI would like to examine the percentage of students who have been admitted by the other 3 ways over the years.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = admitted_students, aes(x = \"\", y = Obs, fill = name)) +\n  geom_bar(stat=\"identity\", width=1) +\n  facet_wrap(~Year) +\n  coord_polar(\"y\", start=0) +\n  \n  labs(\n    title = \"Proportion of Admissions through Panhellenic Exams\",\n    subtitle = glue(\"It seems that <span style = 'color:#619CFF; font-weight: bold'>Panhellenic Exams</span> is the prevalent way to be admitted to Statistics <br> Department. Although that was an expected result. It is interesting to study <br> the proportion over the years. The most extraordinary result is in 2011 when almost <br>  everyone came through Panhellenic Exams.\"),\n    caption = \"**Data:** Study Guide of Statistics and Insurance Science <br> \n    stesiam, 2023\"\n  ) +\n  theme_void() +\n  theme(\n    legend.position = \"none\",\n    plot.title = element_markdown(family = \"lobster\", face=\"bold\"),\n    plot.subtitle = element_markdown(family = \"economica\"),\n    plot.caption = element_markdown(family = \"economica\")\n  )\n```\n\n::: {.cell-output-display}\n![](2023-07-23-Graduates-of-Statistics_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# admitted_students %>%\n#   filter(Admission_Type %in% c(\"Main_exams\", \"Total\")) %>%\n#   ggplot2::ggplot(., aes(x = Year, y = count, color = Admission_Type , group = Admission_Type)) +\n#   geom_line() +\n#   labs(\n#     title = \"Admitted students\",\n#     subtitle = \"Admitted students over the years (2003-2023) at Department of Statistics and Insurance Science of <br> University of Piraeus. A significant drop in admissions occured in 2021 which is maily caused by the <br> introduction of grade requirements to be admitted to specific departments.\",\n#     caption = \"stesiam, 2023\",\n#     x = \"Academic Year\",\n#     y = \"Students\",\n#     color = \"Type of Admission\"\n#   ) +\n#   theme_classic() +\n#   theme(\n#     plot.title = element_markdown(family = \"lobster\", face=\"bold\"),\n#     plot.subtitle = element_markdown(family = \"economica\"),\n#     plot.caption = element_markdown(family = \"economica\"),\n#     axis.text.x = element_text(face=\"bold\", angle=90)\n#   )\n```\n:::\n\n\n\n\n## Student Population\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nA = statistics_tables[[2]] %>%\n  setNames(c(\"Year\", \"BSc\", \"MScAppliedStat\", \"MScActuar\", \"PhD\")) %>%\n  .[-1,] %>%\n  mutate_at(., vars(-Year), as.integer) %>%\n  tidyr::pivot_longer(., cols = !Year, values_to = \"Obs\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `MScActuar = .Primitive(\"as.integer\")(MScActuar)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n\n```{.r .cell-code}\nd = A %>% \n  dplyr::filter(name == \"BSc\" & (Year == \"2003-2004\" | Year == \"2022-2023\"))\n\ne = A %>% dplyr::filter(name == \"BSc\") %>% dplyr::filter(.,Obs == max(Obs) | Obs == min(Obs)) %>%\n  .$Year\n\nsub = glue(\"Last 20 years the undergraduates have been increased\n           by <span style = 'color:orange; font-weight: bold'>{d$Obs[2] - d$Obs[1]}</span> ({round(((d$Obs[2] - d$Obs[1])/d$Obs[1])*100, digits = 2)} %). <br>The highest number of undergrads is observed at the academic term of <span style = 'color:red; font-weight: bold'>{e[1]}</span> <br> and the lowest at <span style = 'color:#0a5c36; font-weight: bold'>{e[2]}</span>\" ) \n\nA %>%\n  dplyr::filter(name == \"BSc\") %>%\n  ggplot(., aes(x = Year, y = Obs, group = \"1\")) +\n  ylim(2000, 4000) +\n  geom_line(color = \"white\") +\n  labs(title = \"Number of Undergraduate Students\",\n       x = \"Academic Year\",\n       y = \"Undergraduate Students\",\n       caption = \"stesiam, 2024\",\n       subtitle = sub) +\n  geom_point(data= A %>% dplyr::filter(name == \"BSc\") %>% dplyr::filter(.,Obs == max(Obs)), aes(x = Year, y = Obs), color = \"red3\") +\n  geom_point(data= A %>% dplyr::filter(name == \"BSc\") %>% dplyr::filter(.,Obs == min(Obs)), aes(x = Year, y = Obs), color = \"green4\") +\n  geom_point(data = A %>% dplyr::filter(Year == \"2003-2004\" | Year == \"2022-2023\") %>% dplyr::filter(name == \"BSc\"), color = \"orange\") +\n  geom_text(data= A %>% dplyr::filter(Year == \"2003-2004\" | Year == \"2022-2023\") %>% dplyr::filter(name == \"BSc\"),aes(x = Year, y = Obs+200, label = Obs), color = \"orange\", fontface = \"bold\", size = 4) +\n  theme_minimal(base_size = 15) +\n  theme(axis.text.x = element_text(angle = 60, size = 10,color = \"white\"),\n        axis.text.y = element_text(size = 10, color = \"white\"),\n        axis.title = element_text(size = 10, color = \"white\"),\n        panel.grid = element_blank(),\n        plot.title = element_text(family = \"Oswald\", hjust = 0.5),\n        plot.title.position = \"plot\",\n        plot.subtitle = element_markdown(family = \"Oswald\", size = 14,\n                                     margin = margin(l = 10, r = 10),\n                                     lineheight = 1.2, hjust = 0.5),\n        plot.caption = element_markdown(family = \"Oswald\", size = 10),\n        plot.background = element_rect(fill = \"black\", color = \"black\"),\n        panel.background = element_rect(fill = \"black\", color = \"black\"),\n        text = element_text(color = \"white\")\n  )\n```\n\n::: {.cell-output-display}\n![](2023-07-23-Graduates-of-Statistics_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n## Master Programmes\n\nOur department has two Master options. \n\n- Applied Statistics\n- Actuarial Science and Risk Management\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstatistics_tables[[3]] %>%\n  setNames(c(\"Year\", \"MSc_AppliedStats\", \"MSc_Actuar\")) %>%\n  slice(-c(1:2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        Year MSc_AppliedStats MSc_Actuar\n1                                       \n2  2003-2004            27 15           \n3                                       \n4  2004-2005            28 26           \n5                                       \n6  2005-2006            25 20           \n7                                       \n8  2006-2007            25 34           \n9                                       \n10 2007-2008            24 31       38 0\n11                                      \n12 2008-2009            20 42       36 4\n13                                      \n14 2009-2010            30 27      35 21\n15                                      \n16 2010-2011            20 17      40 35\n17                                      \n18 2011-2012            30 26      38 30\n19                                      \n20 2012-2013            18 19      37 37\n21                                      \n22 2013-2014            23 35      39 63\n23                                      \n24 2014-2015            20 29      38 38\n25                                      \n26 2015-2016            21 24      42 39\n27                                      \n28 2016-2017            20 22      33 40\n29                                      \n30 2017-2018            23 21      37 30\n31                                      \n32 2018-2019            22 20      29 29\n33                                      \n34 2019-2020            26 15      26 24\n35                                      \n36 2020-2021            32 18      27 28\n37                                      \n38 2021-2022            41 33      34 59\n39                                      \n40 2022-2023               31         19\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmsc_students = statistics_tables[[2]] %>%\n  setNames(c(\"AcademicYear\", \"BSc\", \"MSc (AppliedStat)\", \"MSc (Actuar)\", \"PhD\")) %>%\n  .[-1,]\n\nrownames(msc_students) = 1:nrow(msc_students)\n\nmsc_students = msc_students %>%\n  mutate_at(c(\"BSc\", \"MSc (AppliedStat)\", \"MSc (Actuar)\", \"PhD\"), as.numeric) %>%\n  mutate(pct = round((PhD/BSc)*100, 2))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `MSc (Actuar) = .Primitive(\"as.double\")(`MSc (Actuar)`)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n\n```{.r .cell-code}\nmsc_students %>%\n  reactable(\n    defaultPageSize = 5\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"reactable html-widget html-fill-item\" id=\"htmlwidget-490221543ebaa403eb21\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-490221543ebaa403eb21\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"AcademicYear\":[\"2003-2004\",\"2004-2005\",\"2005-2006\",\"2006-2007\",\"2007-2008\",\"2008-2009\",\"2009-2010\",\"2010-2011\",\"2011-2012\",\"2012-2013\",\"2013-2014\",\"2014-2015\",\"2015-2016\",\"2016-2017\",\"2017-2018\",\"2018-2019\",\"2019-2020\",\"2020-2021\",\"2021-2022\",\"2022-2023\"],\"BSc\":[2135,2128,2225,2255,2360,2411,2429,2629,2528,2631,2707,2656,2742,2842,2953,3021,3091,3200,3159,3177],\"MSc (AppliedStat)\":[68,67,89,57,65,50,54,55,56,52,56,52,85,42,47,43,53,66,102,111],\"MSc (Actuar)\":[\"NA\",\"NA\",\"NA\",\"NA\",38,66,81,86,88,87,89,110,47,74,85,69,68,66,93,85],\"PhD\":[11,16,20,24,24,20,13,13,16,15,16,14,14,18,21,21,19,19,18,15],\"pct\":[0.52,0.75,0.9,1.06,1.02,0.83,0.54,0.49,0.63,0.57,0.59,0.53,0.51,0.63,0.71,0.7,0.61,0.59,0.57,0.47]},\"columns\":[{\"id\":\"AcademicYear\",\"name\":\"AcademicYear\",\"type\":\"character\"},{\"id\":\"BSc\",\"name\":\"BSc\",\"type\":\"numeric\"},{\"id\":\"MSc (AppliedStat)\",\"name\":\"MSc (AppliedStat)\",\"type\":\"numeric\"},{\"id\":\"MSc (Actuar)\",\"name\":\"MSc (Actuar)\",\"type\":\"numeric\"},{\"id\":\"PhD\",\"name\":\"PhD\",\"type\":\"numeric\"},{\"id\":\"pct\",\"name\":\"pct\",\"type\":\"numeric\"}],\"defaultPageSize\":5,\"dataKey\":\"9e1a659e4b3bbf409916a76f20fe3050\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(msc_students, aes(x = AcademicYear, y = pct, group = 1))  +\n  geom_area(fill = rgb(0.3,0.7,0.3,0.4)) +\n  labs(\n    title = \"Ratio of PhD students per Hundreds of Undergraduates\",\n    subtitle = \"The decrease \",\n    caption = \"stesiam, 2023\"\n  ) +\n  geom_text(data = msc_students %>% dplyr::filter(pct == min(pct) | pct == max(pct)),aes(label = pct, y = pct+0.1), fontface = \"bold\", family = \"uc\", nudge_y =0.1) +\n  theme_minimal() +\n  theme(\n    plot.title = element_markdown(family = \"uc\", face=\"bold\"),\n    plot.subtitle = element_markdown(family = \"serif\"),\n    plot.caption = element_markdown(family = \"serif\"),\n    axis.text.x = element_text(face=\"bold\", angle=90),panel.grid = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](2023-07-23-Graduates-of-Statistics_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n## Structure of Students\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nB = statistics_tables[[2]] %>%\n  setNames(c(\"Year\", \"BSc_students\", \"MScStudentsA\", \"MScStudentsB\", \"PhD\")) %>%\n  .[-1,] %>%\n mutate_at(., vars(-Year), as.integer) %>%\n mutate(\n   MScStudentsB = tidyr::replace_na(MScStudentsB, 0),\n   MSc_Students = MScStudentsA + MScStudentsB\n ) %>%\n  dplyr::select(-c(\"MScStudentsA\", \"MScStudentsB\")) %>%\n  relocate(., MSc_Students, .after = \"BSc_students\") %>%\n  mutate(\n    total = BSc_students + MSc_Students + PhD,\n    BSc_students = BSc_students/total,\n    MSc_Students = MSc_Students/total,\n    PhD = PhD/total\n  ) %>%\n  mutate_at(vars(!c(Year, total)), ~round(.*100, 2)) %>%\n  dplyr::select(c(-total)) %>%\n  tidyr::pivot_longer(., cols = !c(Year), values_to = \"Obs\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `MScStudentsB = .Primitive(\"as.integer\")(MScStudentsB)`.\nCaused by warning:\n! NAs introduced by coercion\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# C$label = fontawesome('fa-twitter')\n# waffle_data <- waffle_iron(C, aes_d(group = name))\n# \n# ggplot(C, aes( fill = name, values = Obs)) + \n#   geom_waffle() +\n#   theme_waffle()\n# \n# ggplot(C, aes(fill = name, values = Obs)) +\n#   geom_text(aes(label=label), family='fontawesome-webfont', size=12) +\n#   geom_waffle(n_rows = 8, size = 0.33, colour = \"white\")\n# \n# library(waffle)\n# \n# # Data\n# df <- data.frame(group = LETTERS[1:3],\n#                  value = c(25, 20, 35))\n# \n# # Waffle plot\n# ggplot(df, aes(fill = group, values = value)) +\n#   geom_waffle(n_rows = 8, size = 0.33, colour = \"white\", ) +\n#   scale_fill_manual(name = NULL,\n#                     values = c(\"#BA182A\", \"#FF8288\", \"#FFDBDD\"),\n#                     labels = c(\"A\", \"B\", \"C\")) +\n#   coord_equal() +\n#   theme_void()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntidy_students = msc_students %>%\n  select(!pct) %>%\n  tidyr::pivot_longer(., cols = !c(AcademicYear), values_to = \"count\")\n\nggplot(tidy_students, aes(x = AcademicYear, y = count, fill = name)) +\n  geom_col() +\n  guides(fill = guide_legend(reverse = TRUE)) +\n  labs(\n    title = \"Ratio of PhD students/ Undergraduates\",\n    subtitle = \"The decrease \",\n    caption = \"stesiam, 2023\",\n    x = \"\",\n    y = \"\"\n  ) +\n  theme_classic() +\n  theme(\n    plot.title = element_markdown(family = \"serif\", face=\"bold\"),\n    plot.subtitle = element_markdown(family = \"serif\"),\n    plot.caption = element_markdown(family = \"serif\"),\n    axis.text.x = element_text(face=\"bold\", angle=90)\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 4 rows containing missing values or values outside the scale range\n(`geom_col()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2023-07-23-Graduates-of-Statistics_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n## Master Students\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstatistics_tables[[3]] %>%\n  select(c(1,2)) %>%\n  setNames(c(\"Year\", \"S\")) %>%\n  .[-c(1,2),] %>%\n  separate(S, c('Admitted', 'Graduated')) %>%\n  na.omit() %>%\n  mutate(Ratio = round(as.numeric(Graduated)/as.numeric(Admitted), 2)) %>%\n  select(Year, Ratio) %>%\n  ggplot(.) +\n  geom_line(aes(x = Year, y = Ratio, group = 1))+\n  theme_classic()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Expected 2 pieces. Missing pieces filled with `NA` in 21 rows [1, 3,\n5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, ...].\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2023-07-23-Graduates-of-Statistics_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n## Graduation Grade\n\nI hope you are still here because for the end I hold the best part. Finally, how did we perform? The study guide gives a distribution \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nVVV = statistics_tables[[4]] %>%\n  setNames(c(\"Year\", \"[5.0 - 6)\", \"[6, 7)\", \"[7-8.5)\", \"[8.5-10]\", \"AVG_Grade\")) %>%\n  slice(-c(1:4))  %>%\n  mutate(across(\"AVG_Grade\"), separate(.,AVG_Grade, into = c(\"AVG_Grade\", \"Graduates\"),sep = \"\\\\(\")) %>%\n  select(c(\"Year\", \"AVG_Grade\", \"Graduates\")) %>%\n  mutate(\n    \"Graduates\" =  stringr::str_remove_all(Graduates, \"\\\\)\")\n  ) %>%\n  mutate(\n    AVG_Grade = stringr::str_replace_all(AVG_Grade, \",\", \".\")\n  ) %>%\n  mutate_at(vars(\"AVG_Grade\", \"Graduates\"), as.numeric)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata = VVV %>%\n  mutate(\n    AVG_Group = ifelse(AVG_Grade >= mean(AVG_Grade), \"over\", \"under\")\n  ) %>%\n  mutate(\n    Year = stringr::str_remove_all(Year, \"-.*\")\n  )\n\npacking <- circleProgressiveLayout(data$Graduates, sizetype='area')\ndata <- cbind(data, packing)\ndata <- data |> \n  rename(xcirc = x, \n         ycirc = y, \n         radius_circ = radius) |> \n  tibble::rowid_to_column('id')\n# Calculate the 50 vertices points for each circle\ndat.gg <- circleLayoutVertices(packing, npoints=50)\nfinal_data <- left_join(data, dat.gg, by = join_by(id))\n```\n:::\n\n::: {.cell fig.fullwidth='true'}\n\n```{.r .cell-code}\nggplot(data = final_data) + \n  geom_polygon(aes(x, \n                   y, \n                   group = Year,\n                   fill = AVG_Group, \n                   text = Graduates), \n               colour = \"white\", \n               # alpha = 0.7\n               ) +\n  scale_fill_manual(values = c(\"under\"=\"#ff6366\",\"over\" = \"#0D6E6E\"))+\n  geom_text(aes(xcirc, \n                ycirc, \n                size = Graduates,\n                label = Year), \n            size = 3, \n            family = 'uc', \n            fontface = 'bold',\n            color = 'white') +\n  labs(title = \"Graduates and Graduation Grade per Year\",\n       subtitle = \"On this bubble chart we visualized the total graduates per Academic Year <br> depending on the size of the circle. Funrthermore, the color of the circle <br> notes if the average grade of graduation of that specific year <br> is <span style = 'color: #0D6E6E'>over</span> or <span style = 'color: #ff6366'>under</span> the historical average graduation grade.\",\n       x = NULL,\n       y = NULL,\n       caption = \"stesiam, 2024\") +\n  coord_equal() +\n  theme_void(base_size = 10) +\n  theme(\n      legend.position = \"none\",\n      plot.subtitle = element_markdown(family = \"serif\")\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in geom_polygon(aes(x, y, group = Year, fill = AVG_Group, text =\nGraduates), : Ignoring unknown aesthetics: text\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](2023-07-23-Graduates-of-Statistics_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n\n## Online vs On-campus Exams\n\nDue to pandemic COVID-19, Greek government suspended the operation of  schools (elementary, high school, universities) on Tuesday 10 March 2020. Some days later imposed lockdown measures. That period our department organized online lectures  and organized online exams for the majority of the courses on Spring Semester and on the September (retake exams). Long story short that lasted for at least 2 years.\n\n\n## Students Graduated in 6 Years\n\nLast but not least, maybe the most nervewrecking statistic is that one. Just for clarification, our studies have a duaration of four years. Although the majority will not successfully finish their degree even in 6 Years. This is important as currently has been voted the time-limit on BSc studies. We have 6 years to complete our studies otherwise we will not take the degree. In the next years, the best case scenario is that 60% of my collegeaus who were about to graduate will not get their degree.\n\n![](https://github.com/stesiam/30DayChartChallenge/blob/main/2024/day23/day23-2024-cc.png?raw=true)\n\n## Acknowledgements {.appendix .unlisted}\n\nDataset based on recent study guide <a href=\"https://www.unipi.gr/faculty/mbouts/anak/OS_22_23.pdf\">recent study guide</a> of Department of Statistics and Insurance Science of the University of Piraeus.\n\nImage by <a href=\"https://pixabay.com/users/vloveland-4834409/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2148715\">Victoria Loveland</a> from <a href=\"https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2148715\">Pixabay</a>\n\n\n## References {.appendix .unlisted}",
    "supporting": [
      "2023-07-23-Graduates-of-Statistics_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/core-js-2.5.3/shim.min.js\"></script>\n<script src=\"../../site_libs/react-18.2.0/react.min.js\"></script>\n<script src=\"../../site_libs/react-18.2.0/react-dom.min.js\"></script>\n<script src=\"../../site_libs/reactwidget-1.0.0/react-tools.js\"></script>\n<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/reactable-0.4.4/reactable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/reactable-binding-0.4.4/reactable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}