[
  {
    "objectID": "material.html",
    "href": "material.html",
    "title": "Material",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\nTitle\n\n\n\n\n\n\n\nMar 3, 2023\n\n\nTable of Distributions\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "material.html#personal-notes",
    "href": "material.html#personal-notes",
    "title": "Material",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\nTitle\n\n\n\n\n\n\n\nMar 3, 2023\n\n\nTable of Distributions\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "material.html#presentations",
    "href": "material.html#presentations",
    "title": "Material",
    "section": "Presentations",
    "text": "Presentations\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nDate\n\n\nTitle\n\n\n\n\n\n\nMar 13, 2023\n\n\nTest Presentation\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "greek.html",
    "href": "greek.html",
    "title": "Greek Posts",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nΣυγκεντρωμένο υλικό για την R στα ελληνικά\n\n\n\n\n\n\n\nR\n\n\n\n\nΜία λίστα (που θα ανανεώνεται συνεχώς) με υλικό που υπάρχει διαθέσιμο στο διαδίκτυο (δωρεάν) σχετικά με την R\n\n\n\n\n\n\nOct 23, 2022\n\n\nstesiam\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "presentations/Test.html#getting-up",
    "href": "presentations/Test.html#getting-up",
    "title": "Test Presentation",
    "section": "Getting up",
    "text": "Getting up\n\nTurn off alarm\nGet out of bed"
  },
  {
    "objectID": "presentations/Test.html#breakfast",
    "href": "presentations/Test.html#breakfast",
    "title": "Test Presentation",
    "section": "Breakfast",
    "text": "Breakfast\n\nEat eggs\nDrink coffee"
  },
  {
    "objectID": "presentations/Test.html#dinner",
    "href": "presentations/Test.html#dinner",
    "title": "Test Presentation",
    "section": "Dinner",
    "text": "Dinner\n\nEat spaghetti\nDrink wine"
  },
  {
    "objectID": "presentations/Test.html#going-to-sleep",
    "href": "presentations/Test.html#going-to-sleep",
    "title": "Test Presentation",
    "section": "Going to sleep",
    "text": "Going to sleep\n\nGet in bed\nCount sheep"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hello !",
    "section": "",
    "text": "I’m Stelios !\nCurrently, I am an undergraduate student of Statistics and Insurance Science at University of Piraeus.\nOn my website I will upload various posts closely related with R and Statistics.\nAlso you can have a look on my Shiny Apps."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nInstall LightGBM and CatBoost on Ubuntu 22.04\n\n\n\n\n\n\n\nLinux\n\n\nLightGBM\n\n\nCatBoost\n\n\nXGBoost\n\n\n\n\nInstall high performance algorithms (LightGBM, CatBoost & XGBoost) on your Linux device\n\n\n\n\n\n\nNov 13, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nGit Series (Part I - Configuration)\n\n\n\n\n\n\n\nGit\n\n\n\n\nAn article that brings together some configuration setttings of Git. A beginner’s approach to Git.\n\n\n\n\n\n\nNov 4, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nVerify your commits !\n\n\n\n\n\n\n\nGPG\n\n\nQuarto\n\n\n\n\nUsing GPG keys to add a signature to your GitHub commits\n\n\n\n\n\n\nOct 3, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nList of Quarto Websites\n\n\n\n\n\n\n\nQuarto\n\n\n\n\nA collection of websites built with Quarto. Includes links to websites and their respective repositories. Further additions are always welcome.\n\n\n\n\n\n\nAug 10, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nHello, World\n\n\n\n\n\n\n\nfirst article\n\n\n\n\nMy first article on my Quarto website.\n\n\n\n\n\n\nJul 27, 2022\n\n\nstesiam\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "gallery.html",
    "href": "gallery.html",
    "title": "Gallery",
    "section": "",
    "text": "Tidy Tuesday 2023 - Week 6"
  },
  {
    "objectID": "gallery.html#tidy-tuesday",
    "href": "gallery.html#tidy-tuesday",
    "title": "Gallery",
    "section": "",
    "text": "Tidy Tuesday 2023 - Week 6"
  },
  {
    "objectID": "gallery.html#day-map-challenge",
    "href": "gallery.html#day-map-challenge",
    "title": "Gallery",
    "section": "30 Day Map Challenge",
    "text": "30 Day Map Challenge\n\n\n\n\n\nPublic Music Schools in Greece\n\n\n\n\n\n\n\nRailway Network of Greece\n\n\n\n\n\n\n\nRegions of Greece\n\n\n\n\n\n\n\nPharmacies in Greece\n\n\n\n\n\n\n\nPorts in Ukraine\n\n\n\n\n\n\n\nLuxembourg’s City Bus Transportation"
  },
  {
    "objectID": "gallery.html#greece-in-figures",
    "href": "gallery.html#greece-in-figures",
    "title": "Gallery",
    "section": "Greece in Figures",
    "text": "Greece in Figures\n\n\n\n\n\nPharmacies in Greece\n\n\n\n\n\n\n\nGDP per capita\n\n\n\n\n\n\n\nDentists per Region\n\n\n\n\n\n\n\nPopulation Density\n\n\n\n\n\n\n\nPhysiotherapists, 2020"
  },
  {
    "objectID": "gallery.html#eu-in-figures",
    "href": "gallery.html#eu-in-figures",
    "title": "Gallery",
    "section": "EU in Figures",
    "text": "EU in Figures\n\n\n\n\n\nAsylum Applicants in EU, 2021"
  },
  {
    "objectID": "gallery.html#other-visualizations",
    "href": "gallery.html#other-visualizations",
    "title": "Gallery",
    "section": "Other Visualizations",
    "text": "Other Visualizations\n\n\n\n\n\nMost elected MPs"
  },
  {
    "objectID": "notebooks.html",
    "href": "notebooks.html",
    "title": "Notebooks",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nPredict Cost of Housing in Kallithea\n\n\n\n\n\n\n\nR\n\n\nRegression\n\n\n\n\nBuild a regression model using various ML algorithms to predict cost to buy a house in Kallithea.\n\n\n\n\n\n\nDec 6, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nPredict Possible Interested Clients\n\n\n\n\n\n\n\nR\n\n\nClassification\n\n\nTidymodels\n\n\n\n\nBuild a classification machine learning model (using LightGBM & XGBoost) in order to classify people based on their interest to have a term deposit or not.\n\n\n\n\n\n\nNov 24, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nForecasting Unemployment in Greece\n\n\n\n\n\n\n\nR\n\n\nTime Series\n\n\n\n\nMake a prediction about the future value of Greece’s unemployment using ARIMA model.\n\n\n\n\n\n\nOct 22, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nEDA on Greek Parliament\n\n\n\n\n\n\n\nR\n\n\nEDA\n\n\n\n\nLet’s explore the MPs that got elected the most over the years (1981-2019).\n\n\n\n\n\n\nOct 10, 2022\n\n\nstesiam\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/2022-07-27-hello/27-07-2022-hello.html",
    "href": "blog/2022-07-27-hello/27-07-2022-hello.html",
    "title": "Hello, World",
    "section": "",
    "text": "Finally, I made my site using Quarto and hosted it via GitHub Pages.\nIt was a month ago, that I decided to start building my website. Initially, I was experimenting with other frameworks (e.g., Hugo with the help of blogdown, Distill), which were pretty good, but Quarto fulfilled my needs. The reasons for my decision are going to be discussed in a new article."
  },
  {
    "objectID": "blog/2022-07-27-hello/27-07-2022-hello.html#last-updated-on",
    "href": "blog/2022-07-27-hello/27-07-2022-hello.html#last-updated-on",
    "title": "Hello, World",
    "section": "Last updated on",
    "text": "Last updated on\n\n\n[1] \"2022-11-24\""
  },
  {
    "objectID": "blog/2022-07-27-hello/27-07-2022-hello.html#acknowledgments",
    "href": "blog/2022-07-27-hello/27-07-2022-hello.html#acknowledgments",
    "title": "Hello, World",
    "section": "Acknowledgments",
    "text": "Acknowledgments\nImage by R. E. Beck from Pixabay"
  },
  {
    "objectID": "blog/2022-10-03-Verified-Commits/2022-10-03-Verified-Commits.html",
    "href": "blog/2022-10-03-Verified-Commits/2022-10-03-Verified-Commits.html",
    "title": "Verify your commits !",
    "section": "",
    "text": "It’s not a long time ago that I have started to use Git. I am constantly discovering new things. All this time I was reading articles, posts on Stackoverflow etc. One day I saw a Verified badge on someones’ repository commit history.\nThen the first questions arised.\n\n“What is that ?”  “Why I don’t have it ?”  “Do I need that ?”\n\n\n\n\n\n\n\nSSH vs GitHub for commit\n\n\n\nIn reality, when you have make a commit via your GitHub account your commit is indeed marked as verified but the majority of the users is working locally, thus they have set SSH. Those are in need to set up GPG in order to sign their commits and push their changes."
  },
  {
    "objectID": "blog/2022-10-03-Verified-Commits/2022-10-03-Verified-Commits.html#introduction",
    "href": "blog/2022-10-03-Verified-Commits/2022-10-03-Verified-Commits.html#introduction",
    "title": "Verify your commits !",
    "section": "",
    "text": "It’s not a long time ago that I have started to use Git. I am constantly discovering new things. All this time I was reading articles, posts on Stackoverflow etc. One day I saw a Verified badge on someones’ repository commit history.\nThen the first questions arised.\n\n“What is that ?”  “Why I don’t have it ?”  “Do I need that ?”\n\n\n\n\n\n\n\nSSH vs GitHub for commit\n\n\n\nIn reality, when you have make a commit via your GitHub account your commit is indeed marked as verified but the majority of the users is working locally, thus they have set SSH. Those are in need to set up GPG in order to sign their commits and push their changes."
  },
  {
    "objectID": "blog/2022-10-03-Verified-Commits/2022-10-03-Verified-Commits.html#what-if-i-do-not-verify",
    "href": "blog/2022-10-03-Verified-Commits/2022-10-03-Verified-Commits.html#what-if-i-do-not-verify",
    "title": "Verify your commits !",
    "section": "What if I do not verify",
    "text": "What if I do not verify"
  },
  {
    "objectID": "blog/2022-10-03-Verified-Commits/2022-10-03-Verified-Commits.html#create-pgp-key",
    "href": "blog/2022-10-03-Verified-Commits/2022-10-03-Verified-Commits.html#create-pgp-key",
    "title": "Verify your commits !",
    "section": "Create PGP key",
    "text": "Create PGP key\nGitHub has a wonderful explanation , so I won’t bother you to say the same things. You can see their guide here\nFor brevity, I will make a TL;DR version :\ngpg --full-generate-key\n# Accept defaults\n# Give no-reply email\n# Passphrase\n\n\n#print GPG Key ID\ngpg --list-secret-keys --keyid-format=long\n# the alphanumeric after / is ID\n\n# print GPG key\ngpg --armor --export GPG_key_ID"
  },
  {
    "objectID": "blog/2022-10-03-Verified-Commits/2022-10-03-Verified-Commits.html#signing-your-commits",
    "href": "blog/2022-10-03-Verified-Commits/2022-10-03-Verified-Commits.html#signing-your-commits",
    "title": "Verify your commits !",
    "section": "Signing your commits",
    "text": "Signing your commits\nAfter that you can continue your usual workflow with Git with just a little change. Now you have to sign your commits. To do that you have to set the option -S as follows :\ngit commit -S -m \"Edit something\"\nThen, you will be prompted to a new window in order to complete the password of your GPG key. And here it is, my first verified commit :\n\n\n\nVerified Commit on GitHub\n\n\nLet’s take a closer look :\n\n\n\nVerified Commit on GitHub\n\n\nBut there is more. On GitHub settings (Settings &gt; SSH and GPG keys) there is also the option to warn others if a commit is not signed. If I enable it :\n\n\n\nSettings for unsigned commits\n\n\nthen it marks all my unsigned commits (before and after the change) as unverified, as a warning to others. I guess it’s good if someones’ intention is to use only signed commits.\n\n\n\nSettings for unsigned commits"
  },
  {
    "objectID": "blog/2022-10-03-Verified-Commits/2022-10-03-Verified-Commits.html#to-sum-up",
    "href": "blog/2022-10-03-Verified-Commits/2022-10-03-Verified-Commits.html#to-sum-up",
    "title": "Verify your commits !",
    "section": "To sum up",
    "text": "To sum up\nIn GitHub, Commit = Sign + Commit\nLocally,  - bash git commit -m \"...\" = Commit  - bash git commit -S -m \"...\" = Sign + Commit"
  },
  {
    "objectID": "blog/2022-10-03-Verified-Commits/2022-10-03-Verified-Commits.html#sources",
    "href": "blog/2022-10-03-Verified-Commits/2022-10-03-Verified-Commits.html#sources",
    "title": "Verify your commits !",
    "section": "Sources",
    "text": "Sources\n\nGithub Documentation Page for GPG keys\nAdding a GPG key to your GitHub account"
  },
  {
    "objectID": "blog/2022-08-10-List-of-Quarto-Sites/2022-08-10-List-of-Quarto-Sites.html",
    "href": "blog/2022-08-10-List-of-Quarto-Sites/2022-08-10-List-of-Quarto-Sites.html",
    "title": "List of Quarto Websites",
    "section": "",
    "text": "Given the increased popularity of Quarto, I took the initiative to make a list of some sites that are using this framework. That way, users of other popular frameworks (e.g., distill, blogdown) will have the chance to see the features of a Quarto site. Furthermore, existing Quarto users can take some inspiration from other web pages.\nUnfortunately, it is certain, that this list does not contain all the Quarto pages. Although, you are welcome to edit the page (to add yours) or comment on this article."
  },
  {
    "objectID": "blog/2022-08-10-List-of-Quarto-Sites/2022-08-10-List-of-Quarto-Sites.html#introduction",
    "href": "blog/2022-08-10-List-of-Quarto-Sites/2022-08-10-List-of-Quarto-Sites.html#introduction",
    "title": "List of Quarto Websites",
    "section": "",
    "text": "Given the increased popularity of Quarto, I took the initiative to make a list of some sites that are using this framework. That way, users of other popular frameworks (e.g., distill, blogdown) will have the chance to see the features of a Quarto site. Furthermore, existing Quarto users can take some inspiration from other web pages.\nUnfortunately, it is certain, that this list does not contain all the Quarto pages. Although, you are welcome to edit the page (to add yours) or comment on this article."
  },
  {
    "objectID": "blog/2022-08-10-List-of-Quarto-Sites/2022-08-10-List-of-Quarto-Sites.html#list-of-quarto-sites",
    "href": "blog/2022-08-10-List-of-Quarto-Sites/2022-08-10-List-of-Quarto-Sites.html#list-of-quarto-sites",
    "title": "List of Quarto Websites",
    "section": "List of Quarto Sites",
    "text": "List of Quarto Sites\nAn indicative list of websites using Quarto is as follows:\n\n\n\n\n\n\n\n\n   User\n\n   Website URL\n\n   GitHub  Repository\n\n\n\nandreashandel\nandreashandel.com/\nandreashandelwebsite\n\n\nandrewheiss\nnonprofitf22.classes.andrewheiss.com\nnonprofitf22.classes.andrewheiss.com\n\n\nbeatrizmilz\nbeamilz.com\nblog-en\n\n\nBioconductor\nbioconductor.github.io/biocblog/\nbiocblog\n\n\ndjnavarro\nblog.djnavarro.net/\nquarto-blog\n\n\njhelvy\n–\njhelvy_quarto\n\n\njoelnitta\njoelnitta.com\njoelnitta-home\n\n\njthomasmock\nTheMockup.blog\nthemockup-blog\n\n\nmine-cetinkaya-rundel\nA Quarto tip a day\nquarto-tip-a-day\n\n\nnjlyon0\nnjlyon0.github.io\nnjlyon0.github.io\n\n\nquarto-dev\nquarto.org\nquarto-web\n\n\nrobjhyndman\nrobjhyndman.com/\nrobjhyndman.com\n\n\nsamanthacsik\nsamanthacsik.github.io/\nsamanthacsik.github.iog\n\n\nshamindras\nshamindras.com\nss_personal_distill_blog\n\n\nstesiam\nstesiam.github.io\nstesiam.github.io\n\n\ntladeras\nladerast.github.io/\nladerast.github.io\n\n\nvbaliga\nvbaliga.github.io\nvbaliga.github.io"
  },
  {
    "objectID": "blog/2022-11-13-Install-LightGBM-CatBoost-Ubuntu/2022-11-13-Install-LightGBM-CatBoost-Ubuntu.html",
    "href": "blog/2022-11-13-Install-LightGBM-CatBoost-Ubuntu/2022-11-13-Install-LightGBM-CatBoost-Ubuntu.html",
    "title": "Install LightGBM and CatBoost on Ubuntu 22.04",
    "section": "",
    "text": "When someone starts with Machine Learning he usually starts to build some simple models as logistic regression, naive Bayes, linear regression etc. And those alone are already enough for most use cases, as their simplicity is productivity-friendly and comes up with adequate accuracy. However, in enterprise level, accuracy can be important for a lot of reasons. Gradient Boosting Machines are some algorithms which outperform the aforementioned methods and are not complex enough to use them. Of course, before we build the model with (e.g. tidymodels) we have to install them.\n\n\n\nError - Missing LightGBM install\n\n\nThus, on this article I gather all that information.\n\n\n\nInstallation Guides\nSource\n\n\n\n\nLightGBM\nLink\n\n\nCatBoost\nLink\n\n\nXGBoost\nLink"
  },
  {
    "objectID": "blog/2022-11-13-Install-LightGBM-CatBoost-Ubuntu/2022-11-13-Install-LightGBM-CatBoost-Ubuntu.html#introduction",
    "href": "blog/2022-11-13-Install-LightGBM-CatBoost-Ubuntu/2022-11-13-Install-LightGBM-CatBoost-Ubuntu.html#introduction",
    "title": "Install LightGBM and CatBoost on Ubuntu 22.04",
    "section": "",
    "text": "When someone starts with Machine Learning he usually starts to build some simple models as logistic regression, naive Bayes, linear regression etc. And those alone are already enough for most use cases, as their simplicity is productivity-friendly and comes up with adequate accuracy. However, in enterprise level, accuracy can be important for a lot of reasons. Gradient Boosting Machines are some algorithms which outperform the aforementioned methods and are not complex enough to use them. Of course, before we build the model with (e.g. tidymodels) we have to install them.\n\n\n\nError - Missing LightGBM install\n\n\nThus, on this article I gather all that information.\n\n\n\nInstallation Guides\nSource\n\n\n\n\nLightGBM\nLink\n\n\nCatBoost\nLink\n\n\nXGBoost\nLink"
  },
  {
    "objectID": "blog/2022-11-13-Install-LightGBM-CatBoost-Ubuntu/2022-11-13-Install-LightGBM-CatBoost-Ubuntu.html#lightgbm",
    "href": "blog/2022-11-13-Install-LightGBM-CatBoost-Ubuntu/2022-11-13-Install-LightGBM-CatBoost-Ubuntu.html#lightgbm",
    "title": "Install LightGBM and CatBoost on Ubuntu 22.04",
    "section": "LightGBM",
    "text": "LightGBM\n\nOption 1. Install R Package\nIf you are reading this blog, the most possible scenario in that you are using R too. The most easy way to install the corresponding R package :\n\n\nR code\n\nstart_time_lightgbm &lt;- Sys.time()\ninstall.packages(\"lightgbm\", repos = \"https://cran.r-project.org\")\nend_time_lightgbm &lt;- Sys.time()\n\n\n\nOption 2. CMAKE\nThe LightGBM documentation are referring to this method of installation.\n\n\nTerminal\n\nsudo apt install cmake\n\n\n\nTerminal\n\ngit clone --recursive https://github.com/microsoft/LightGBM\ncd LightGBM\nmkdir build\ncd build\ncmake ..\nmake -j4"
  },
  {
    "objectID": "blog/2022-11-13-Install-LightGBM-CatBoost-Ubuntu/2022-11-13-Install-LightGBM-CatBoost-Ubuntu.html#catboost",
    "href": "blog/2022-11-13-Install-LightGBM-CatBoost-Ubuntu/2022-11-13-Install-LightGBM-CatBoost-Ubuntu.html#catboost",
    "title": "Install LightGBM and CatBoost on Ubuntu 22.04",
    "section": "CatBoost",
    "text": "CatBoost\nTheir realeases.\n\n\nR code\n\ninstall.packages(\"devtools\")\n\nOn my occassion, when I tried to install devtools had an error status. According to my error status I had to add packages libharfbuzz-dev and libfribidi-dev. After that, my devtools installation completed without errors.\n\n\n\nR code\n\nstart_time_catboost &lt;- Sys.time()\ndevtools::install_url(\"https://github.com/catboost/catboost/releases/download/v1.1.1/catboost-R-Linux-1.1.1.tgz\"[, INSTALL_opts = c(\"--no-multiarch\", \"--no-test-load\")])\nend_time_catboost &lt;- Sys.time()"
  },
  {
    "objectID": "blog/2022-11-13-Install-LightGBM-CatBoost-Ubuntu/2022-11-13-Install-LightGBM-CatBoost-Ubuntu.html#xgboost",
    "href": "blog/2022-11-13-Install-LightGBM-CatBoost-Ubuntu/2022-11-13-Install-LightGBM-CatBoost-Ubuntu.html#xgboost",
    "title": "Install LightGBM and CatBoost on Ubuntu 22.04",
    "section": "XGBoost",
    "text": "XGBoost\n\n\nR code\n\nstart_time_xgboost &lt;- Sys.time()\ninstall.packages(\"xgboost\")\nend_time_xgboost &lt;- Sys.time()"
  },
  {
    "objectID": "blog/2022-11-13-Install-LightGBM-CatBoost-Ubuntu/2022-11-13-Install-LightGBM-CatBoost-Ubuntu.html#summary",
    "href": "blog/2022-11-13-Install-LightGBM-CatBoost-Ubuntu/2022-11-13-Install-LightGBM-CatBoost-Ubuntu.html#summary",
    "title": "Install LightGBM and CatBoost on Ubuntu 22.04",
    "section": "Summary",
    "text": "Summary\n\n\n\nML Model\nMethod\nInstallation time\n\n\n\n\nLightGBM\nR package\n7.79 min.\n\n\nCatBoost\nR package (w/o devtools)\n2.1 min.\n\n\nXGBoost\nR package\n6.16 min."
  },
  {
    "objectID": "blog/2022-11-04-Git-Commands/2022-11-04-Git-Commands.html",
    "href": "blog/2022-11-04-Git-Commands/2022-11-04-Git-Commands.html",
    "title": "Git Series (Part I - Configuration)",
    "section": "",
    "text": "A Version Control System (VCS) is a way to manage and track code changes. As we build an application, we add functions, change frontend features, fix bugs. We will need to edit the code many times. So we need a way to manage these changes. The tracking of every change to our code is the key point of VCS.\n\n\nWorkflow without Version Control\n\n\nSome popular Version Control Software are the following :\n\nGit\nApache Subversion (SVN)\nMercurial\nBazaar\n\nHaving seen what a VCS is, it would be interesting to see which one is the most widely used. In order to study which VCS is the most popular, I pulled data from Google Trends.\n\nCode  ggplot(data = trends_vcs_tidy, aes(x= Month, y = counts)) +\n  geom_line(aes(color = VCS)) +\n  labs(title = \"Trends on Version Control Systems\",\n              subtitle = \"Compare trends of Git and SVN (Subversion) from 2004 to 2022\",\n              caption = \"Data source: Google Trends\") +\n  theme_classic()\n\n\n\n\nThe figure above makes clear the dominance of Git as a version control tool. Also, we notice that Subversion (SVN) was quite popular and a capable competitor of Git until 2010. After that period there is a continuous decline in SVN’s interest and the exact opposite for Git. Today, in 2022, the difference is chaotic between them.\n\n\nWhy should I use VCS ?\n\n\nEasy transition between versions\nMore productive, Time saver if a version produces error\nEnables cooperation with other developers (especially with a hosting service like GitHub).\n\n\nOk. There are some good points. But where is the catch ?\n\n\nWe are adding a new tool to our workflow (Git)\nKind of steep learning curve.\n\nWe have mentioned some of the most important programs for managing the code of an application. Of course, there are not a few times when we want to save the progress of our application somewhere else to enable developers communicate their code commits to each other. The solution is some code hosting services. The best known are GitHub, GitLab and Bitbucket. Finally, in case none of the options outlined earlier satisfy us, there is also the self-host solution. For example, if I had concerns about the terms of the above services, I could host Gitea on my own server or even to rent a cloud server. That way I would have my own “GitHub”, without depending on a third party service."
  },
  {
    "objectID": "blog/2022-11-04-Git-Commands/2022-11-04-Git-Commands.html#introduction",
    "href": "blog/2022-11-04-Git-Commands/2022-11-04-Git-Commands.html#introduction",
    "title": "Git Series (Part I - Configuration)",
    "section": "",
    "text": "A Version Control System (VCS) is a way to manage and track code changes. As we build an application, we add functions, change frontend features, fix bugs. We will need to edit the code many times. So we need a way to manage these changes. The tracking of every change to our code is the key point of VCS.\n\n\nWorkflow without Version Control\n\n\nSome popular Version Control Software are the following :\n\nGit\nApache Subversion (SVN)\nMercurial\nBazaar\n\nHaving seen what a VCS is, it would be interesting to see which one is the most widely used. In order to study which VCS is the most popular, I pulled data from Google Trends.\n\nCode  ggplot(data = trends_vcs_tidy, aes(x= Month, y = counts)) +\n  geom_line(aes(color = VCS)) +\n  labs(title = \"Trends on Version Control Systems\",\n              subtitle = \"Compare trends of Git and SVN (Subversion) from 2004 to 2022\",\n              caption = \"Data source: Google Trends\") +\n  theme_classic()\n\n\n\n\nThe figure above makes clear the dominance of Git as a version control tool. Also, we notice that Subversion (SVN) was quite popular and a capable competitor of Git until 2010. After that period there is a continuous decline in SVN’s interest and the exact opposite for Git. Today, in 2022, the difference is chaotic between them.\n\n\nWhy should I use VCS ?\n\n\nEasy transition between versions\nMore productive, Time saver if a version produces error\nEnables cooperation with other developers (especially with a hosting service like GitHub).\n\n\nOk. There are some good points. But where is the catch ?\n\n\nWe are adding a new tool to our workflow (Git)\nKind of steep learning curve.\n\nWe have mentioned some of the most important programs for managing the code of an application. Of course, there are not a few times when we want to save the progress of our application somewhere else to enable developers communicate their code commits to each other. The solution is some code hosting services. The best known are GitHub, GitLab and Bitbucket. Finally, in case none of the options outlined earlier satisfy us, there is also the self-host solution. For example, if I had concerns about the terms of the above services, I could host Gitea on my own server or even to rent a cloud server. That way I would have my own “GitHub”, without depending on a third party service."
  },
  {
    "objectID": "blog/2022-11-04-Git-Commands/2022-11-04-Git-Commands.html#git-settings",
    "href": "blog/2022-11-04-Git-Commands/2022-11-04-Git-Commands.html#git-settings",
    "title": "Git Series (Part I - Configuration)",
    "section": "Git settings",
    "text": "Git settings\nSet up Name & Email\nSo, you decided to start Git without setting Name and Email?\nYou may think of it again. In case you try to commit without setting a Name and email. Git will not commit your changes, without prior setting those.\n\n\nTerminal\n\ngit config --global user.name \"YourName\"\ngit config --global user.email your_email\n\n\n\n\n\n\n\nNote\n\n\n\nIf you are planning to host your repository on GitHub, you may want to hide your casual email. In that case GitHub offers a noreply email for this purpose. You can read more here.\n\n\nSet editor\nA part that I considered a little bit hard is editing Git commits. By default, Ubuntu has installed Vim, so this was my first editor for my commits. I think this choice is good if you are writing short commit messages or you are acquainted with Vim options/shortcuts. In case you are in a hurry, the use of an alterantive (most familiar) IDE is justified.\n\n\nTerminal\n\ngit config --global core.editor \"editor_name\"\n\nMost notable is Visual Studio Code, which is the most popular IDE, according to recent Stackoveflow’s survey.\n\n\nEditor\nCommand\n\n\n\nAtom\ngit config –global core.editor “atom –wait”\n\n\nVisual Studio Code\ngit config –global core.editor “code –wait”\n\n\nDefault branch name to main\nIn October of 2020, GitHub announced that will change the default name of initial branch from master to main. \n\nThe default branch name for new repositories is now main. GitHub.blog - October 1,2020\n\nTherefore, it would be good to make this change in our local environment as well, as follows :\n\n\nTerminal\n\ngit config --global init.defaultBranch main\n\nMerge method\nOne change that is not exactly necessary but helps me is to change the defaults regarding merge. Let’s say that I want to add a new feature in my application. Most of the times I will make a branch on which I will start developing my new feature. When I implement this function and I’m ready to merge my changes into the main code there are two situations.\n1. There are commits to main branch \nThe predefined action is to merge. The branch is visible. Our setting has not any effect on this case.\n2. There are no commits to main branch\nThe predefined action of Git is to take the feature branch and paste it on the top of main branch. By making the setting above I am telling Git to keep the branch and react like the first case. The branch is visible again.\nWith simple words, I am forcing Git to keep branch, regardless of changes to main branch.\n\n\nTerminal\n\ngit config --global merge.ff false\n\nAuto-sign your commits\nIn a previous article we saw how to sign our commits as well as the reasons for doing so. In short, we made a PGP key which we added to our GitHub account. From that moment to sign my commits I had to write git commit -S -m \"something\", instead of git commit -m \"something\". Of course, that method is a little bit problematic. It is a little bit longer, little different in comparison to what I am used to type and most importantly I may forget some times to sign it manually. The last one happened to me A LOT. Thankfully, there is a way to be carefree about that anymore. I can set git config in a way that my commits will be signed automatically.\n\n\n\n\n\n\nWarning\n\n\n\nIf you do not have already a GPG key, you can have a look in this guide in order to generate one. Also, depending your hosting platform for your code, you can link your GPG with your account : \n\n\nGitHub and GPG keys \n\n\nBitBucket and GPG keys \n\nGitLab and GPG keys\n\n\n\n\n\nTerminal\n\ngpg --list-secret-keys --keyid-format LONG\ngit config user.signingkey key_id\ngit config commit.gpgsign true\n\nCheck your settings\nMaking the above settings, we can have a summary of those with the corresponding command:\n\n\nTerminal\n\ngit config --list\n\nHere is the output on my machine :\n\n\nOutput of git-config command\n\n\nThe image above sums up the settings of Git. Although, each user has different needs and for that reason it would be good in case you want to learn more about git config to see their documentation page."
  },
  {
    "objectID": "blog/2022-11-04-Git-Commands/2022-11-04-Git-Commands.html#to-sum-up",
    "href": "blog/2022-11-04-Git-Commands/2022-11-04-Git-Commands.html#to-sum-up",
    "title": "Git Series (Part I - Configuration)",
    "section": "To sum up",
    "text": "To sum up\nA summary of the commands we used to configure Git :\n\n\nTerminal\n\ngit config --global user.name \"YourName\"\ngit config --global user.email your_email\ngit config --global core.editor \"editor_name\"\ngit config --global init.defaultBranch main\ngit config --global merge.ff false\n\n# Add PGP key to your commits\n\ngpg --list-secret-keys --keyid-format LONG\ngit config user.signingkey key_id\ngit config commit.gpgsign true\n\n# check git config settings\n\ngit config --list --show-origin\n\nOf course you can access your git config file on your Home directory (at least on Ubuntu installation).\n\n\n\n\n\n\nWarning\n\n\n\nNote that the .gitconfig file, which contains our settings, may not be visible in the Home directory. In general, files whose names begin with a period are not displayed. However, if everything has been done correctly, it’s probably there. For example, in Ubuntu you should choose to show hidden files.\n\n\nIn case you open that file you will see probably something like the above :"
  },
  {
    "objectID": "blog/2022-11-04-Git-Commands/2022-11-04-Git-Commands.html#acknowledgements",
    "href": "blog/2022-11-04-Git-Commands/2022-11-04-Git-Commands.html#acknowledgements",
    "title": "Git Series (Part I - Configuration)",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nImage by Daniel Skovran from Pixabay"
  },
  {
    "objectID": "greek/2022-10-23-Material-for-R-Greek/2022-10-23-Material-for-R-Greek.html",
    "href": "greek/2022-10-23-Material-for-R-Greek/2022-10-23-Material-for-R-Greek.html",
    "title": "Συγκεντρωμένο υλικό για την R στα ελληνικά",
    "section": "",
    "text": "Καλησπέρα σας.\nΠρώτο άρθρο στα ελληνικά και ελπίζω να μην τα γράφω τζάμπα και καποιος, κάπου, κάποτε να βρει αυτή τη σελίδα αν ποτέ τη χρειαστεί. :)\nΠροϋποθέσεις για να συμπεριληφθεί κάτι στη σελίδα :\n\nΝα είναι δωρεάν\nΝα είναι στα ελληνικά\nΝα είναι κατανοητό για όλο το φάσμα των χρηστών της R"
  },
  {
    "objectID": "greek/2022-10-23-Material-for-R-Greek/2022-10-23-Material-for-R-Greek.html#εισαγωγή",
    "href": "greek/2022-10-23-Material-for-R-Greek/2022-10-23-Material-for-R-Greek.html#εισαγωγή",
    "title": "Συγκεντρωμένο υλικό για την R στα ελληνικά",
    "section": "",
    "text": "Καλησπέρα σας.\nΠρώτο άρθρο στα ελληνικά και ελπίζω να μην τα γράφω τζάμπα και καποιος, κάπου, κάποτε να βρει αυτή τη σελίδα αν ποτέ τη χρειαστεί. :)\nΠροϋποθέσεις για να συμπεριληφθεί κάτι στη σελίδα :\n\nΝα είναι δωρεάν\nΝα είναι στα ελληνικά\nΝα είναι κατανοητό για όλο το φάσμα των χρηστών της R"
  },
  {
    "objectID": "greek/2022-10-23-Material-for-R-Greek/2022-10-23-Material-for-R-Greek.html#βιβλία-για-την-r",
    "href": "greek/2022-10-23-Material-for-R-Greek/2022-10-23-Material-for-R-Greek.html#βιβλία-για-την-r",
    "title": "Συγκεντρωμένο υλικό για την R στα ελληνικά",
    "section": "Βιβλία για την R",
    "text": "Βιβλία για την R\n\n\n\n\n\n\n\n\nΤίτλος βιβλίου\nΣυγγραφέας\nΣύνδεσμος\n\n\n\n\nΕισαγωγή στην R Πρόχειρες σημειώσεις\nΦωκιανός, Κ.  Χαραλάμπους, Χ.\nΣύνδεσμος  (απευθείας κατέβασμα)\n\n\nΕισαγωγή στον προγραμματισμό και στη στατιστική ανάλυση με R\nΝτζούφρας, Ι.  Καρλής, Δ.\nΣύνδεσμος\n\n\nΗ επιστήμη των δεδομένων μέσα από τη γλώσσα R\nΒερύκιος, Β.  Καγκλής, Β.  Σταυρόπουλος, Η.\nΣύνδεσμος\n\n\nΕισαγωγή στην επιχειρησιακή έρευνα και στον γραμμικό προγραμματισμό\nΚουνέτας, Κ  Χατζησταμούλου, Ν.\nΣύνδεσμος\n\n\nΕισαγωγή στην εκπαιδευτική και ψυχολογική μέτρηση με τη χρήση της R\nAlbano, A.  Markos, A. (tr)\nΣύνδεσμος\n\n\n\nΔυστυχώς, οι επιλογές μας σε σχέση με το υλικό που υπάρχει στα αγγλικά (ελεύθερα διαθέσιμο) είναι αρκετά περιορισμένες. Ωστόσο, υπάρχουν κάποιες πολύ καλές επιλογές (ανάλογα το επίπεδο και τον σκοπό του χρήστη).\nΗ πρώτη μου επιλογή (και προσωπικά η αγαπημένη μου) είναι το βιβλίο “Εισαγωγή στην R - Πρόχειρες σημειώσεις”. Είναι ένας συνδυασμός σημειώσεων και εφαρμογής των εντολών για κατηγορίες προβλημάτων. Αναφέρεται σε ένα μεγάλο εύρος θεμάτων (κυρίως στατιστικής), από τα πιο απλά (έλεγχοι t-test) μέχρι πιο σύνθετα θέματα (ανάλυση κατά συστάδες). Πολύ καλό για φοιτητές στατιστικής (μάλλον για αυτό μου αρέσει).\nΗ δεύτερη επιλογή (“Εισαγωγή στον προγραμματισμό και στη στατιστική ανάλυση με R”) κινείται σε παρόμοια νερά. Είναι ένα βιβλίο που με προβλημάτισε κάπως. Αυτό το βιβλίο είχε τα φόντα να γίνει το προσωπικό μου αγαπημένο, διότι δεν σου δείχνει απλά τις εντολές. Σου μαθαίνει να προγραμματίζεις με την R, αφού δίνει μεγαλύτερη σημασία σε ελέγχους ροής, συναρτήσεις και άλλα θέματα. Αυτό είναι πολύ σημαντικό, αν θες να φτιάξεις κάτι πιο περίπλοκο (π.χ. μία περίπλοκη ανάλυση, ένα πακέτο στην R, κτλ.). Αν και προγραμματισμός μαθαίνεται κυρίως κάνοντας και όχι διαβαζοντας πιστεύω ότι είναι μία καλή προσθήκη στη λίστα.\nΗ τρίτη μου επιλογή είναι το “Επιστήμη των δεδομένων μέσα από τη γλώσσα R”. Πιθανότατα αυτό το βιβλίο πλησιάζει περισσότερο στη λογική των notebooks και στο να ανεβάσεις δικά σου project. Σε βάζει σε μία λογική να αρχίσεις να κάνεις αναλύσεις. Καλό, αν κάποιος θέλει να φτιάξει το δικό του portfolio, προκειμένου κάποτε να βρει μία δουλειά (εγώ με αυτή την ελπίδα ζω ακόμα :) ). Προσωπικά πιστεύω ότι είναι καλό για κάποιον που έχει ήδη κάποια εξοικείωση στην R.\nΤα τελευταία 2 βιβλία της λίστας μου αφορούν εξειδικευμένα θέματα, συνεπώς προορίζονται για ανθρώπους με πολύ συγκεκριμένους σκοπούς."
  },
  {
    "objectID": "greek/2022-10-23-Material-for-R-Greek/2022-10-23-Material-for-R-Greek.html#βίντεομαθήματα-για-την-r",
    "href": "greek/2022-10-23-Material-for-R-Greek/2022-10-23-Material-for-R-Greek.html#βίντεομαθήματα-για-την-r",
    "title": "Συγκεντρωμένο υλικό για την R στα ελληνικά",
    "section": "Βίντεομαθήματα για την R",
    "text": "Βίντεομαθήματα για την R\n\n\n\n\n\n\n\nΌνομα καναλιού\nΣύνδεσμος\n\n\n\n\nChristos Malliarakis\nΣύνδεσμος\n\n\n\nΠέρα όμως από τα βιβλία έψαξα να βρω και υλικό για την R στο Youtube. Το υλικό είναι επίσης αρκετά περιορισμένο. Προς το παρόν θα αφήσω μία επιλογή η οποία είναι και η πιο πλήρης. Στη σειρά βιντεομαθημάτων (playlist) του κ. Χρήστου Μαλλιαράκη γίνεται μία αναφορά σε βασικά στοιχεία της R ενώ σε επόμενα μαθήματα ασχολείται με κάποια απλά παραδείγματα μηχανικής μάθησης."
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "All posts",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nPredict Cost of Housing in Kallithea\n\n\n\n\n\n\n\nR\n\n\nRegression\n\n\n\n\nBuild a regression model using various ML algorithms to predict cost to buy a house in Kallithea.\n\n\n\n\n\n\nDec 6, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nPredict Possible Interested Clients\n\n\n\n\n\n\n\nR\n\n\nClassification\n\n\nTidymodels\n\n\n\n\nBuild a classification machine learning model (using LightGBM & XGBoost) in order to classify people based on their interest to have a term deposit or not.\n\n\n\n\n\n\nNov 24, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nInstall LightGBM and CatBoost on Ubuntu 22.04\n\n\n\n\n\n\n\nLinux\n\n\nLightGBM\n\n\nCatBoost\n\n\nXGBoost\n\n\n\n\nInstall high performance algorithms (LightGBM, CatBoost & XGBoost) on your Linux device\n\n\n\n\n\n\nNov 13, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nGit Series (Part I - Configuration)\n\n\n\n\n\n\n\nGit\n\n\n\n\nAn article that brings together some configuration setttings of Git. A beginner’s approach to Git.\n\n\n\n\n\n\nNov 4, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nForecasting Unemployment in Greece\n\n\n\n\n\n\n\nR\n\n\nTime Series\n\n\n\n\nMake a prediction about the future value of Greece’s unemployment using ARIMA model.\n\n\n\n\n\n\nOct 22, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nEDA on Greek Parliament\n\n\n\n\n\n\n\nR\n\n\nEDA\n\n\n\n\nLet’s explore the MPs that got elected the most over the years (1981-2019).\n\n\n\n\n\n\nOct 10, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nVerify your commits !\n\n\n\n\n\n\n\nGPG\n\n\nQuarto\n\n\n\n\nUsing GPG keys to add a signature to your GitHub commits\n\n\n\n\n\n\nOct 3, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nList of Quarto Websites\n\n\n\n\n\n\n\nQuarto\n\n\n\n\nA collection of websites built with Quarto. Includes links to websites and their respective repositories. Further additions are always welcome.\n\n\n\n\n\n\nAug 10, 2022\n\n\nstesiam\n\n\n\n\n\n\n  \n\n\n\n\nHello, World\n\n\n\n\n\n\n\nfirst article\n\n\n\n\nMy first article on my Quarto website.\n\n\n\n\n\n\nJul 27, 2022\n\n\nstesiam\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html",
    "title": "EDA on Greek Parliament",
    "section": "",
    "text": "Introduction\n\nPrerequisites    2.1 Import Libraries    2.2 Import Dataset    2.3 Preview Dataset    2.4 Structure of Dataset    2.5 Recoding variables    2.6 Setting colors \n\n\nParliament over the years \n\n\nMost elected members of parliament \n\n\nMost elected members by party    5.1 KKE    5.2 ND    5.3 PASOK    5.4 SYRIZA \n\n\nMost elected members per constituency    6.1 Attica    6.2 Central Greece    6.3 Central Macedonia    6.4 Crete    6.5 Eastern Macedonia and Thrace    6.6 Epirus    6.7 Ionian Islands    6.8 North Aegean    6.9 Peloponnese    6.10 South Aegean    6.11 Thessaly    6.12 Western Greece    6.13 Western Macedonia \n\nAcknowledgements\n\nReferences"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#import-libraries",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#import-libraries",
    "title": "EDA on Greek Parliament",
    "section": "Import Libraries",
    "text": "Import Libraries\nFirst and foremost, we have to load our libraries.\n\nShow the code# General purpose R libraries\nlibrary(tidyverse)\nlibrary(kableExtra)\n\n\n# Graphs\nlibrary(ggplot2)\nlibrary(ggpol) \nlibrary(ggtext)\n\n# Other settings\noptions(digits=2) # print only 2 decimals"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#import-dataset",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#import-dataset",
    "title": "EDA on Greek Parliament",
    "section": "Import dataset",
    "text": "Import dataset\nAfter loading R libraries, then I will load my data.\n\nShow the codeparliament &lt;- read_csv(\"data/greek_parliament.csv\")"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#preview-dataset",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#preview-dataset",
    "title": "EDA on Greek Parliament",
    "section": "Preview Dataset",
    "text": "Preview Dataset\n\nShow the codepreview_dataset = head(parliament, 10)\nkbl(preview_dataset, \n    align = 'c',\n    booktabs = T,\n    centering = T,\n    valign = T) %&gt;%\n  kable_paper() %&gt;%\n  scroll_box(width = \"600px\", height = \"250px\")\n\n\n\n\nTable 1: Preview Dataset (first 6 rows)\n\nFullName\nParty\nConstituency\nTerm\n\n\n\nAgorastis Vasileios\nPA.SO.K. (Panhellenic Socialist Movement)\nLarissa\n3\n\n\nAkrita Sylva - Kaiti\nPA.SO.K. (Panhellenic Socialist Movement)\nAthens B\n3\n\n\nAkritidis Nikolaos\nPA.SO.K. (Panhellenic Socialist Movement)\nThessaloniki A\n3\n\n\nAkrivakis Alexandros\nPA.SO.K. (Panhellenic Socialist Movement)\nViotia\n3\n\n\nAlevras Ioannis\nPA.SO.K. (Panhellenic Socialist Movement)\nAthens A\n3\n\n\nAlexandris Efstathios (Stathis)\nPA.SO.K. (Panhellenic Socialist Movement)\nAthens B\n3\n\n\nAlexiadis Konstantinos\nPA.SO.K. (Panhellenic Socialist Movement)\nTrikala\n3\n\n\nAlexiou Thomas\nNEA DIMOKRATIA\nXanthi\n3\n\n\nAllamanis Stylianos\nNEA DIMOKRATIA\nKarditsa\n3\n\n\nAmanatidis Konstantinos\nPA.SO.K. (Panhellenic Socialist Movement)\nThessaloniki B\n3"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#structure-of-dataset",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#structure-of-dataset",
    "title": "EDA on Greek Parliament",
    "section": "Structure of Dataset",
    "text": "Structure of Dataset\n\n\n\n\n\n\n\nVariable\nProperty\nDescription\n\n\n\nFull Name\n\nqualitative  (nominal)\nSurname and name of the member of parliament\n\n\nParty\n\nqualitative  (nominal)\nThe party on which the MP got elected\n\n\nConstituency\n\nqualitative  (nominal)\nMP got elected on this area\n\n\nTerm\n\nqualitative  (ordinal)\nPlenum term\n\n\n\nThus, my sample has 4 variables, of which 0 are quantitative and 4 are quantitative properties, of which 3 are nominal and the rest one (Term) is ordinal."
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#recoding-variables",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#recoding-variables",
    "title": "EDA on Greek Parliament",
    "section": "Recoding variables",
    "text": "Recoding variables\n\nShow the codetable(parliament$Party)\n\n\n\nShow the code## Recoding parliament$Party\nparliament$Party[parliament$Party == \"ANEXARTITOI DIMOKRATIKOI VOULEFTES\"] &lt;- \"ADP\"\nparliament$Party[parliament$Party == \"ANEXARTITOI ELLINES (Independent Hellenes)\"] &lt;- \"ANEL\"\nparliament$Party[parliament$Party == \"ANEXARTITOI ELLINES (Independent Hellenes) National Patriotic Democratic Alliance\"]&lt;- \"ANEL\"\nparliament$Party[parliament$Party == \"Coalition of the Left and Progress\"] &lt;- \"SYRIZA\"\nparliament$Party[parliament$Party == \"Communist Party of Greece (Interior)\"] &lt;- \"KKE (interior)\"\nparliament$Party[parliament$Party == \"DEMOCRATIC COALITION (Panhellenic Socialist Movement Democratic Left )\"] &lt;- \"PASOK\"\nparliament$Party[parliament$Party == \"DHM.AR (Democratic Left)\"] &lt;- \"DHMAR\"\nparliament$Party[parliament$Party == \"DI.ANA.\"] &lt;- \"DIANA\"\nparliament$Party[parliament$Party == \"DI.K.KI.\"] &lt;- \"DIKKI\"\nparliament$Party[parliament$Party == \"INDEPENDENT\"] &lt;- \"INDEPENDENT\"\nparliament$Party[parliament$Party == \"KOMMOUNISTIKO KOMMA ELLADAS\"] &lt;- \"KKE\"\nparliament$Party[parliament$Party == \"LA.O.S.\"] &lt;- \"LAOS\"\nparliament$Party[parliament$Party == \"LAIKI ENOTITA\"] &lt;- \"LAE\"\nparliament$Party[parliament$Party == \"LAIKOS SYNDESMOS - CHRYSI AVGI (People’s Association – Golden Dawn)\"] &lt;- \"XA\"\nparliament$Party[parliament$Party == \"NEA DIMOKRATIA\"] &lt;- \"ND\"\nparliament$Party[parliament$Party == \"PA.SO.K. (Panhellenic Socialist Movement)\"] &lt;- \"PASOK\"\nparliament$Party[parliament$Party == \"POL.A.\"] &lt;- \"POLA\"\nparliament$Party[parliament$Party == \"SYNASPISMOS RIZOSPASTIKIS ARISTERAS\"] &lt;- \"SYRIZA\"\nparliament$Party[parliament$Party == \"TO POTAMI (The River)\"] &lt;- \"POTAMI\"\nparliament$Party[parliament$Party == \"ΟΟ.ΕΟ.\"] &lt;- \"ΟΟ.ΕΟ\""
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#setting-colors",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#setting-colors",
    "title": "EDA on Greek Parliament",
    "section": "Setting colors",
    "text": "Setting colors\nA few days after, I decided that there should be a consistency in the choice of colors. That’s the reason of this section. Set a hex color for each party.\n\nShow the codekke_color = \"#FF6666\"\nnd_color = \"#0492c2\"\npasok_color = \"#95bb72\"\nsyriza_color = \"#e27bb1\""
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#kke",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#kke",
    "title": "EDA on Greek Parliament",
    "section": "KKE",
    "text": "KKE\n\nShow the codeparty_plot(\"KKE\", \"#FF6666\", times_elected_min = 5)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#nd",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#nd",
    "title": "EDA on Greek Parliament",
    "section": "ND",
    "text": "ND\n\nShow the codeparty_plot(\"ND\", \"#0492c2\", times_elected_min = 10)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#pasok",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#pasok",
    "title": "EDA on Greek Parliament",
    "section": "PASOK",
    "text": "PASOK\n\nShow the codeparty_plot(\"PASOK\", \"#95bb72\", times_elected_min = 10)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#syriza",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#syriza",
    "title": "EDA on Greek Parliament",
    "section": "SYRIZA",
    "text": "SYRIZA\n\nShow the codeparty_plot(\"SYRIZA\", \"#e27bb1\", times_elected_min = 5)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#state",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#state",
    "title": "EDA on Greek Parliament",
    "section": "State",
    "text": "State\n\nShow the codeconstituency_freqs(\"State\", 3)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#attica",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#attica",
    "title": "EDA on Greek Parliament",
    "section": "Attica",
    "text": "Attica\n\n\nAthens A\nAthens B\nPiraeus A\nPiraeus B\nOf Attica (rest)\n\n\n\n\nShow the codeconstituency_freqs(\"Athens A\",5)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Athens B\",7)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Piraeus A\",5)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Piraeus B\",5)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Of Attica (rest)\",5)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#central-greece",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#central-greece",
    "title": "EDA on Greek Parliament",
    "section": "Central Greece",
    "text": "Central Greece\n\n\nViotia\nEvrytania\nFokida\nFthiotida\n\n\n\n\nShow the codeconstituency_freqs(\"Viotia\",5)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Evrytania\",2)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Fokida\",2)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Fthiotida\",3)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#central-macedonia",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#central-macedonia",
    "title": "EDA on Greek Parliament",
    "section": "Central Macedonia",
    "text": "Central Macedonia\n\n\nThessaloniki A\nThessaloniki B\nKilkis\nPella\nPieria\nSerres\nHalkidiki\n\n\n\n\nShow the codeconstituency_freqs(\"Thessaloniki A\",6)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Thessaloniki B\",6)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Kilkis\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Pella\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Pieria\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Serres\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Halkidiki\",3)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#crete",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#crete",
    "title": "EDA on Greek Parliament",
    "section": "Crete",
    "text": "Crete\n\n\nChania\nHeraklion\nLasithi\nRethymno\n\n\n\n\nShow the codeconstituency_freqs(\"Chania\",3)\n\n\n\n\n\n\n\nShow the code#constituency_freqs(\"Irakleio\",3)\n\n\n\n\n\nShow the codeconstituency_freqs(\"Lasithi\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Rethymno\",3)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#eastern-macedonia-and-thrace",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#eastern-macedonia-and-thrace",
    "title": "EDA on Greek Parliament",
    "section": "Eastern Macedonia and Thrace",
    "text": "Eastern Macedonia and Thrace\n\n\nDrama\nEvros\nKavala\nXanthi\nRodopi\n\n\n\n\nShow the codeconstituency_freqs(\"Drama\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Evros\",4)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Kavala\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Xanthi\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Rodopi\",3)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#epirus",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#epirus",
    "title": "EDA on Greek Parliament",
    "section": "Epirus",
    "text": "Epirus\n\n\nArta\nIoannina\nPreveza\nThesprotia\n\n\n\n\nShow the codeconstituency_freqs(\"Arta\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Ioannina\",4)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Preveza\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Thesprotia\",3)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#ionian-islands",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#ionian-islands",
    "title": "EDA on Greek Parliament",
    "section": "Ionian Islands",
    "text": "Ionian Islands\n\n\nCorfu\nKefallonia\nLefkada\nZakynthos\n\n\n\n\nShow the codeconstituency_freqs(\"Corfu\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Kefallonia\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Lefkada\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Zakynthos\",3)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#north-aegean",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#north-aegean",
    "title": "EDA on Greek Parliament",
    "section": "North Aegean",
    "text": "North Aegean\n\n\nChios\nLesvos\nSamos\n\n\n\n\nShow the codeconstituency_freqs(\"Chios\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Lesvos\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Samos\",3)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#peloponnese",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#peloponnese",
    "title": "EDA on Greek Parliament",
    "section": "Peloponnese",
    "text": "Peloponnese\n\n\nArgolida\nArkadia\nKorinthia\nLakonia\nMessinia\n\n\n\n\nShow the codeconstituency_freqs(\"Argolida\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Arcadia\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Korinthia\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Lakonia\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Messinia\",3)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#south-aegean",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#south-aegean",
    "title": "EDA on Greek Parliament",
    "section": "South Aegean",
    "text": "South Aegean\n\n\nDodecanese Islands\nCyclades\n\n\n\n\nShow the codeconstituency_freqs(\"Dodecanese Islands\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Cyclades\",3)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#thessaly",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#thessaly",
    "title": "EDA on Greek Parliament",
    "section": "Thessaly",
    "text": "Thessaly\n\n\nKarditsa\nLarissa\nMagnesia\nTrikala\n\n\n\n\nShow the codeconstituency_freqs(\"Karditsa\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Larissa\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Magnesia\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Trikala\",3)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#western-greece",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#western-greece",
    "title": "EDA on Greek Parliament",
    "section": "Western Greece",
    "text": "Western Greece\n\n\nAchaia\nAitoloakarnania\nIleia\n\n\n\n\nShow the codeconstituency_freqs(\"Achaia\",3)\n\n\n\n\n\n\n\nShow the code#constituency_freqs(\"Aitoloakarnania\",3)\n\n\n\n\n\nShow the codeconstituency_freqs(\"Ileia\",3)"
  },
  {
    "objectID": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#western-macedonia",
    "href": "notebooks/2022-10-10-EDA-Greek-Parliament/2022-10-10-EDA-Greek-Parliament.html#western-macedonia",
    "title": "EDA on Greek Parliament",
    "section": "Western Macedonia",
    "text": "Western Macedonia\n\n\nFlorina\nGrevena\nKastoria\nKozani\n\n\n\n\nShow the codeconstituency_freqs(\"Florina\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Grevena\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Kastoria\",3)\n\n\n\n\n\n\n\nShow the codeconstituency_freqs(\"Kozani\",3)"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html",
    "title": "Predict Possible Interested Clients",
    "section": "",
    "text": "Introduction\n\nPrerequisites    2.1 Import Libraries    2.2 Import Dataset    2.3 Preview Dataset    2.4 Dataset Structure    2.5 Custon Functions \n\n\nEDA with R    3.1 Missing Values    3.2 Univariate Analysis        3.2.1 Qualitative variables        3.2.2 Quantitative variables    3.3 Bivariate Analysis        3.3.1 Qualitative variables        3.3.2 Quantitative variables \n\n\nBuilding Model    4.1 Split train/test Dataset    4.2 Recipes    4.3 Create Validation Set    4.4 Specify Models    4.5 Hyperparameters tuning    4.6 Fit Resamples    4.7 Evaluate Model    4.8 Last Fit \n\n\nResults"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#import-libraries",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#import-libraries",
    "title": "Predict Possible Interested Clients",
    "section": "Import libraries",
    "text": "Import libraries\nFor this analysis we will need standard libraries for importing and processing my data, such as readr (Wickham, Hester, & Bryan, 2022) and dplyr (Wickham, François, Henry, & Müller, 2022). The kableExtra (Zhu, 2021) package was used to print the results in table format. Concerning general purpose R libraries, I also used gridExtra in order to show ggplot items side to side.\nOn its basis this analysis is about to predict if someone is interested or not to have a term deposit. Thus, we need to build a ML model. The all-in-one solution package tidymodels is crucial to this. Although, there are some concerns about our data (imbalanced predicted value and our implementation of LightGBM. Thankfully, these are solved by bonsai and treesnip packages, respectively.\nFinally, the ggplot2 (Wickham, Chang, et al., 2022) package was used to create some visualizations, as well as an auxiliary package, ggtext (Wilke & Wiernik, 2022), for further formatting those.\n\nShow the code# General purpose R libraries\nlibrary(readr)\nlibrary(dplyr)\nlibrary(forcats)\nlibrary(kableExtra)\nlibrary(gridExtra)\n\n# Build ML models\nlibrary(tidymodels)\n\n# Graphs\nlibrary(ggplot2)\nlibrary(ggtext) # Add support for HTML/CSS on ggplot\n\n# Other R packages\nlibrary(fontawesome)\n\n\n# Build ML models\n\nlibrary(tidymodels)\nlibrary(bonsai)\nlibrary(themis)\n\n# Other settings\noptions(digits=4) # print only 4 decimals\noptions(warn = -1)"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#import-dataset",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#import-dataset",
    "title": "Predict Possible Interested Clients",
    "section": "Import dataset",
    "text": "Import dataset\nAfter loading R libraries, then I will load my data. The initial source of my dataset has various versions of the same dataset. I will use the smaller one, as the fitting process on Boosting algorithms it is more time consuming in comparison with other methods (e.g. Logistic Regression, k-Nearest Neighbors etc.).\n\nShow the codebank_dataset &lt;- read_delim(\"bank_dataset_files/bank.csv\",  delim = \";\", escape_double = FALSE, trim_ws = TRUE)"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#preview-dataset",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#preview-dataset",
    "title": "Predict Possible Interested Clients",
    "section": "Preview dataset",
    "text": "Preview dataset\nHere we can see a small chunk of my dataset (first 10 rows / observations) just to understand the dataset’s structure and type of variables.\n\nShow the code#| label: tbl-preview-dataset\n#| tbl-cap: \"Preview Dataset (first 6 rows)\"\n#| \npreview_bank_dataset = head(bank_dataset, 10)\nkbl(preview_bank_dataset, \n    align = 'c',\n    booktabs = T,\n    centering = T,\n    valign = T) %&gt;%\n  kable_paper() %&gt;%\n  scroll_box(width = \"600px\", height = \"250px\")\n\n\n\n\nage\njob\nmarital\neducation\ndefault\nbalance\nhousing\nloan\ncontact\nday\nmonth\nduration\ncampaign\npdays\nprevious\npoutcome\ny\n\n\n\n30\nunemployed\nmarried\nprimary\nno\n1787\nno\nno\ncellular\n19\noct\n79\n1\n-1\n0\nunknown\nno\n\n\n33\nservices\nmarried\nsecondary\nno\n4789\nyes\nyes\ncellular\n11\nmay\n220\n1\n339\n4\nfailure\nno\n\n\n35\nmanagement\nsingle\ntertiary\nno\n1350\nyes\nno\ncellular\n16\napr\n185\n1\n330\n1\nfailure\nno\n\n\n30\nmanagement\nmarried\ntertiary\nno\n1476\nyes\nyes\nunknown\n3\njun\n199\n4\n-1\n0\nunknown\nno\n\n\n59\nblue-collar\nmarried\nsecondary\nno\n0\nyes\nno\nunknown\n5\nmay\n226\n1\n-1\n0\nunknown\nno\n\n\n35\nmanagement\nsingle\ntertiary\nno\n747\nno\nno\ncellular\n23\nfeb\n141\n2\n176\n3\nfailure\nno\n\n\n36\nself-employed\nmarried\ntertiary\nno\n307\nyes\nno\ncellular\n14\nmay\n341\n1\n330\n2\nother\nno\n\n\n39\ntechnician\nmarried\nsecondary\nno\n147\nyes\nno\ncellular\n6\nmay\n151\n2\n-1\n0\nunknown\nno\n\n\n41\nentrepreneur\nmarried\ntertiary\nno\n221\nyes\nno\nunknown\n14\nmay\n57\n2\n-1\n0\nunknown\nno\n\n\n43\nservices\nmarried\nprimary\nno\n-88\nyes\nyes\ncellular\n17\napr\n313\n1\n147\n2\nfailure\nno"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#dataset-structure",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#dataset-structure",
    "title": "Predict Possible Interested Clients",
    "section": "Dataset structure",
    "text": "Dataset structure\nBefore we do any analysis we have to define what kind of data we have available. We can assess this type of information by looking on the values of each variable. Generally, we can classify our variables, depending their values, as follows :\n\n\nShow the codegraph TD;\n  A(Type of variables) --&gt; B(Quantitative)\n  A(Type of variables) --&gt; C(Qualitative)\n  B --&gt; D(Discrete)\n  B --&gt; E(Continuous)\n  C --&gt; J(Nominal)\n  C --&gt; G(Ordinal)\n\n\n\ngraph TD;\n  A(Type of variables) --&gt; B(Quantitative)\n  A(Type of variables) --&gt; C(Qualitative)\n  B --&gt; D(Discrete)\n  B --&gt; E(Continuous)\n  C --&gt; J(Nominal)\n  C --&gt; G(Ordinal)\n\n\n\n\n\n\nOur dataset is consisted by 17 variables (columns) and 4521 observations (rows). More specifically, concerning my variables, are as follows :\n\n\n\n\n\n\n\nVariable\nProperty\nDescription\n\n\n\nAge\n\nquantitative  (continuous)\nThe age of the respondent\n\n\nJob\n\nqualitative  (nominal)\nThe sector of employment of the respondent\n\n\nMarital\n\nqualitative  (nominal)\nThe marital status of the respondent\n\n\nEducation\n\nqualitative  (ordinal)\nThe higher education level that the respondent has ever reached\n\n\nDefault\n\nqualitative  (nominal)\nhas credit in default?\n\n\nBalance\n\nquantitative  (continuous)\nAverage yearly balance, in euros\n\n\nHousing\n\nqualitative  (nominal)\nHas housing loan?\n\n\nLoan\n\nqualitative  (nominal)\nHas personal loan?\n\n\nContact\n\nqualitative  (nominal)\nContact communication type\n\n\nMonth\n\nqualitative  (ordinal)\nLast contact day of the month\n\n\nDuration\n\nquantitative  (continuous)\nLast contact duration, in seconds (numeric)\n\n\nCampaign\nquantitative\nNumber of contacts performed during this campaign and for this client\n\n\npdays\nquantitative\nNumber of days that passed by after the client was last contacted from a previous campaign\n\n\npprevious\nquantitative\nNumber of contacts performed before this campaign and for this client\n\n\npoutcome\n\nqualitative (nominal)\nOutcome of the previous marketing campaign\n\n\nDeposit\n\nqualitative  (nominal)\nHas the client subscribed a term deposit?\n\n\n\nThus, my sample has 17 variables, of which 7 are quantitative and 10 are quantitative properties, of which 8 are nominal and the rest ones (Education, Month) are ordinal.\n\nShow the codebank_dataset$y = as.factor(bank_dataset$y)"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#custom-functions",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#custom-functions",
    "title": "Predict Possible Interested Clients",
    "section": "Custom functions",
    "text": "Custom functions\n\nSo, I have a basic idea about my data. Can we start analyzing our data?\n\nIt depends. If you want to do a simple analysis then yes. Although most of the times this is not the case. Probably there is the need for repetitive actions. In order to not repeat ourselves we need to define some actions, prior to our analysis.\nOn this occasion, I found beneficial the definition of a function for qualitative data.\n\nShow the codeunivariate_qualitative = function(variable, title_plot){\ntable = bank_dataset %&gt;%\n    select(variable) %&gt;%\n    table() %&gt;%\n    prop.table() %&gt;%\n    as.data.frame() %&gt;%\n    magrittr::set_colnames(c(\"Var1\", \"Freq\"))\n  \nplot =  ggplot(data = table, aes(x = fct_reorder(Var1,Freq, .desc = T), fill=Var1, y = Freq)) + \n     geom_bar(stat = \"identity\")+\n     scale_fill_hue(c = 40) +\n     geom_text(aes(label = sprintf(\"%.2f %%\", Freq*100),  stat=\"identity\",\n        vjust = -.1)) +\n     labs(\n       title = title_plot,\n       caption = \"Bank Marketing Dataset from &lt;b&gt;UCI&lt;/b&gt;\",\n       x = \"Response\",\n       y = \"Observations\"\n        ) +\n     theme_classic() +\n     theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 30, vjust = 0.5),\n        plot.caption = element_markdown(lineheight = 1.2),\n        plot.title = element_text(hjust = 0.5),)\n  \nreturn(plot)\n}\n\n\nI will do the same for univariate numeric data.\n\nShow the codeuniv_quanti = function(variable_sel){\n  ggplot(bank_dataset, aes(x = variable_sel )) +\n  geom_histogram(x = variable_sel, stat = \"count\") +\n  scale_fill_hue(c = 40) +\n  labs(\n    title = \"Age Distribution of Respondents\",\n    caption = \"Bank Marketing Dataset from &lt;b&gt;UCI&lt;/b&gt;\",\n    x = \"Age of Respondent\",\n    y = \"Observations\"\n  ) +\n  theme_classic() + \n  theme(\n    plot.caption = element_markdown(lineheight = 1.2),\n    plot.title = element_text(hjust = 0.5))\n}"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#missing-values",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#missing-values",
    "title": "Predict Possible Interested Clients",
    "section": "Missing Values",
    "text": "Missing Values\n\nShow the codehow_many_nas = sum(is.na(bank_dataset))\n\n\nOn this dataset there are 0 missing values, in total. So, there is no need for imputation."
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#univariate-analysis",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#univariate-analysis",
    "title": "Predict Possible Interested Clients",
    "section": "Univariate analysis",
    "text": "Univariate analysis\nQualitative variables\n\n\nJob\nMarital status\nEducation\nDefault\nHousing\nLoan\nContact\nMonth\npoutcome\nDeposit\n\n\n\n\nShow the codeunivariate_qualitative(\"job\", \"Job of Respondent\")\n\n\n\n\n\n\n\n\n\n\nShow the codeunivariate_qualitative(\"marital\", \"Marital Status of the respondent\")\n\n\n\n\n\n\n\n\n\n\nShow the codeunivariate_qualitative(\"education\", \"Educational Backgroung\")\n\n\n\n\n\n\n\n\n\n\nShow the codeunivariate_qualitative(\"default\", \"Has credit in default ?\")\n\n\n\n\n\n\n\n\n\n\nShow the codeunivariate_qualitative(\"housing\", \"Has housing loan?\")\n\n\n\n\n\n\n\n\n\n\nShow the codeunivariate_qualitative(\"loan\", \"Has personal loan ?\")\n\n\n\n\n\n\n\n\n\n\nShow the codeunivariate_qualitative(\"contact\", \"Type of Contact\")\n\n\n\n\n\n\n\n\n\n\nShow the codeoptions(digits =2)\n\nperc_month = table(bank_dataset$month) %&gt;%\n  prop.table() %&gt;%\n  sort(decreasing = T) %&gt;%\n  as.data.frame()\n\nnum_month = table(bank_dataset$month) %&gt;%\n  sort(decreasing = T) %&gt;%\n  as.data.frame()\n\nperc_month %&gt;%\n    ggplot(aes(x = factor(Var1, level = c('jan', 'feb', 'mar', 'apr','may','jun','jul','aug','sep', 'oct', 'nov', 'dec')), y = Freq)) + \n  geom_bar(stat = \"identity\")+\n  scale_fill_hue(c = 40) +\n  geom_text(aes(label = sprintf(\"%.2f\", Freq*100),  stat=\"identity\",\n        vjust = -.25)) +\n  labs(\n    title = \"Calls per month\",\n    caption = \"Bank Marketing Dataset from &lt;b&gt;UCI&lt;/b&gt;\",\n    x = \"Response\",\n    y = \"Observations\"\n  ) +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(vjust = 0.5),\n        plot.caption = element_markdown(lineheight = 1.2),\n        plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n\n\nShow the codeunivariate_qualitative(\"poutcome\", \"Outcome of previous approach\")\n\n\n\n\n\n\n\nShow the codeunivariate_qualitative(\"y\", \"How many people made a deposit account ?\")\n\n\n\n\n\n\n\n\n\n\nQuantitative variables\n\n\nAge\nBalance\nDuration\nCampaign\n\n\n\n\nShow the codeggplot(bank_dataset, aes(x = age )) +\n  geom_bar() +\n  scale_fill_hue(c = 40) +\n  labs(\n    title = \"Age Distribution of Respondents\",\n    caption = \"Bank Marketing Dataset from &lt;b&gt;UCI&lt;/b&gt;\",\n    x = \"Age of Respondent\",\n    y = \"Observations\"\n  ) +\n  theme_classic() + \n  theme(\n    plot.caption = element_markdown(lineheight = 1.2),\n    plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\nShow the code# NOTE : In order to make HTML tags to work I need to specify element on theme command.\n\n\n\n\n\nShow the codeggplot(bank_dataset, aes(x=balance)) + \n  geom_histogram(bins = 20) +\n  scale_fill_hue(c = 40) +\n  labs(\n    title = \"Average yearly balance\",\n    caption = \" Bank Marketing Data Set from &lt;b&gt;UCI&lt;/b&gt;\",\n    x = \"Response\",\n    y = \"Observations\"\n  ) +\n  theme_bw() +\n  theme(legend.position = \"none\",\n        plot.caption = element_markdown(lineheight = 1.2),\n        plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n\n\nShow the codeggplot(bank_dataset, aes(x=duration, fill=duration)) + \n  geom_histogram( ) +\n  scale_fill_hue(c = 40) +\n  theme_bw() +\n  labs(\n    title = \"How many people made a deposit account ?\",\n    caption = \"Data from the 1974 Motor Trend US magazine.\",\n    x = \"Response\",\n    y = \"Observations\"\n  ) +\n  theme_classic() +\n  theme(legend.position = \"none\")\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nShow the codeggplot(bank_dataset, aes(x= campaign, fill=campaign )) + \n  geom_bar() +\n  scale_fill_hue(c = 40) +\n  theme_bw() +\n  labs(\n    title = \"Number of Approaches to a specific person\",\n    x = \"# of Approaches\",\n    y = \"Observations\"\n  ) + \n  theme_classic()"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#bivariate-analysis",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#bivariate-analysis",
    "title": "Predict Possible Interested Clients",
    "section": "Bivariate analysis",
    "text": "Bivariate analysis\nOn the previous section I learned a lot about my dataset. Now, I have to reveal relationships between my variables. Visualizing those relationships will make it even easier to explain our results. In order to make the right plots on the right occasions I used the book “Datavis with R” (Chapter 4 : Bivariate Graphs).\nQualitative variables\n\n\nJob\nMarital status\nEducation\nDefault\nHousing\nLoan\nContact\nMonth\npoutcome\n\n\n\n\nShow the codeplotjob &lt;- bank_dataset %&gt;%\n  group_by(job, y) %&gt;%\n  summarize(n = n()) %&gt;% \n  mutate(pct = n/sum(n),\n         lbl = scales::percent(pct))\n\nplot_job = ggplot(plotjob, \n       aes(x = fct_reorder(job, pct),\n           y = pct,\n           fill = y)) + \n  geom_bar(stat = \"identity\",\n           position = \"fill\") +\n  geom_text(aes(label = lbl), \n            size = 3, \n            position = position_stack(vjust = 0.5)) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(y = \"Percent\", \n       fill = \"Drive Train\",\n       x = \"Class\",\n       title = \"Job of Respondent by Interest to Term Deposit\") +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 30, vjust = 0.5),\n        plot.caption = element_markdown(lineheight = 1.2),\n        plot.title = element_text(hjust = 0.5))\n\nplot_job\n\n\n\n\n\n\n\nShow the codeplot_marital1 &lt;- ggplot(bank_dataset, \n       aes(x = marital, \n           fill = y)) + \n       scale_fill_hue(c = 40) +\n       theme_bw() +\n       geom_bar(position = position_dodge(preserve = \"single\"))\n\n\n\nShow the codeplotmarital &lt;- bank_dataset %&gt;%\n  group_by(marital, y) %&gt;%\n  summarize(n = n()) %&gt;% \n  mutate(pct = n/sum(n),\n         lbl = scales::percent(pct))\n\nplot_marital2 = ggplot(plotmarital, \n       aes(x = marital,\n           y = pct,\n           fill = y)) + \n  geom_bar(stat = \"identity\",\n           position = \"fill\") +\n  geom_text(aes(label = lbl), \n            size = 3, \n            position = position_stack(vjust = 0.5)) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(y = \"Percent\", \n       fill = \"Drive Train\",\n       x = \"Class\",\n       title = \"Marital Status by Interest to Term Deposit\") +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 30, vjust = 0.5),\n        plot.caption = element_markdown(lineheight = 1.2),\n        plot.title = element_text(hjust = 0.5))\n\n\n\nShow the codegridExtra::grid.arrange(plot_marital1, plot_marital2, nrow =1)\n\n\n\n\n\n\n\nShow the codeplot_education1 &lt;- ggplot(bank_dataset, \n       aes(x = education, \n           fill = y)) + \n       scale_fill_hue(c = 40) +\n       theme_bw() +\n       geom_bar(position = position_dodge(preserve = \"single\"))\n\n\n\nShow the codeplot_education2 = bank_dataset %&gt;%\n  group_by(education, y) %&gt;%\n  summarize(n = n()) %&gt;% \n  mutate(pct = n/sum(n),\n         lbl = scales::percent(pct)) %&gt;%\n    ggplot(aes(x = education,\n           y = pct,\n           fill = y)) + \n  geom_bar(stat = \"identity\",\n           position = \"fill\") +\n  geom_text(aes(label = lbl), \n            size = 3, \n            position = position_stack(vjust = 0.5)) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(y = \"Percent\", \n       fill = \"Drive Train\",\n       x = \"Class\",\n       title = \"Educational Background by Interest to Term Deposit\") +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 30, vjust = 0.5),\n        plot.caption = element_markdown(lineheight = 1.2),\n        plot.title = element_text(hjust = 0.5))\n\n\n\nShow the codegridExtra::grid.arrange(plot_education1, plot_education2, nrow =1)\n\n\n\n\n\n\n\nShow the codeplot_default1 &lt;- ggplot(bank_dataset, \n       aes(x = default, \n           fill = y)) + \n        scale_fill_hue(c = 40) +\n        theme_bw() +\n  geom_bar(position = position_dodge(preserve = \"single\"))\n\n\n\nShow the codeplot_default2 = bank_dataset %&gt;%\n  group_by(default, y) %&gt;%\n  summarize(n = n()) %&gt;% \n  mutate(pct = n/sum(n),\n         lbl = scales::percent(pct)) %&gt;%\n    ggplot(aes(x = default,\n           y = pct,\n           fill = y)) + \n  geom_bar(stat = \"identity\",\n           position = \"fill\") +\n  geom_text(aes(label = lbl), \n            size = 3, \n            position = position_stack(vjust = 0.5)) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(y = \"Percent\", \n       fill = \"Drive Train\",\n       x = \"Class\",\n       title = \"Has credit in default ?\") +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 30, vjust = 0.5),\n        plot.caption = element_markdown(lineheight = 1.2),\n        plot.title = element_text(hjust = 0.5))\n\n`summarise()` has grouped output by 'default'. You can override using the\n`.groups` argument.\n\n\n\nShow the codegridExtra::grid.arrange(plot_default1, plot_default2, nrow =1)\n\n\n\n\n\n\n\nShow the codeplot_housing1 &lt;- ggplot(bank_dataset, \n       aes(x = housing, \n           fill = y)) + \n       scale_fill_hue(c = 40) +\n       theme_bw() +\n  geom_bar(position = position_dodge(preserve = \"single\"))\n\n\n\nShow the codeplot_housing2 = bank_dataset %&gt;%\n  group_by(housing, y) %&gt;%\n  summarize(n = n()) %&gt;% \n  mutate(pct = n/sum(n),\n         lbl = scales::percent(pct)) %&gt;%\n    ggplot(aes(x = housing,\n           y = pct,\n           fill = y)) + \n  geom_bar(stat = \"identity\",\n           position = \"fill\") +\n  geom_text(aes(label = lbl), \n            size = 3, \n            position = position_stack(vjust = 0.5)) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(y = \"Percent\", \n       fill = \"Drive Train\",\n       x = \"Class\",\n       title = \"Has housing loan ?\") +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 30, vjust = 0.5),\n        plot.caption = element_markdown(lineheight = 1.2),\n        plot.title = element_text(hjust = 0.5))\n\n`summarise()` has grouped output by 'housing'. You can override using the\n`.groups` argument.\n\n\n\nShow the codegridExtra::grid.arrange(plot_housing1, plot_housing2, nrow =1)\n\n\n\n\n\n\n\nShow the codeplot_loan1 &lt;- ggplot(bank_dataset, \n       aes(x = loan, \n           fill = y)) + \n      scale_fill_hue(c = 40) +\n      theme_bw() +\n      geom_bar(position = position_dodge(preserve = \"single\"))\n\n\n\nShow the codeplot_loan2 = bank_dataset %&gt;%\n  group_by(loan, y) %&gt;%\n  summarize(n = n()) %&gt;% \n  mutate(pct = n/sum(n),\n         lbl = scales::percent(pct)) %&gt;%\n    ggplot(aes(x = loan,\n           y = pct,\n           fill = y)) + \n  geom_bar(stat = \"identity\",\n           position = \"fill\") +\n  geom_text(aes(label = lbl), \n            size = 3, \n            position = position_stack(vjust = 0.5)) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(y = \"Percent\", \n       fill = \"Interested\",\n       x = \"Class\",\n       title = \"Has personal loan ?\") +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 30, vjust = 0.5),\n        plot.caption = element_markdown(lineheight = 1.2),\n        plot.title = element_text(hjust = 0.5))\n\n`summarise()` has grouped output by 'loan'. You can override using the\n`.groups` argument.\n\n\n\nShow the codegridExtra::grid.arrange(plot_loan1, plot_loan2, nrow =1)\n\n\n\n\n\n\n\nShow the codeplot_contact1 &lt;- ggplot(bank_dataset, \n       aes(x = contact, \n           fill = y)) + \n        scale_fill_hue(c = 40) +\n        theme_bw() +\n  geom_bar(position = position_dodge(preserve = \"single\"))\n\n\n\nShow the codeplot_contact2 = bank_dataset %&gt;%\n  group_by(contact, y) %&gt;%\n  summarize(n = n()) %&gt;% \n  mutate(pct = n/sum(n),\n         lbl = scales::percent(pct)) %&gt;%\n    ggplot(aes(x = contact,\n           y = pct,\n           fill = y)) + \n  geom_bar(stat = \"identity\",\n           position = \"fill\") +\n  geom_text(aes(label = lbl), \n            size = 3, \n            position = position_stack(vjust = 0.5)) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(y = \"Percent\", \n       fill = \"Interested\",\n       x = \"Class\",\n       title = \"Forms of contact\") +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 30, vjust = 0.5),\n        plot.caption = element_markdown(lineheight = 1.2),\n        plot.title = element_text(hjust = 0.5))\n\n`summarise()` has grouped output by 'contact'. You can override using the\n`.groups` argument.\n\n\n\nShow the codegridExtra::grid.arrange(plot_contact1, plot_contact2, nrow =1)\n\n\n\n\n\n\n\nShow the codeplot_month1 &lt;- ggplot(bank_dataset, \n       aes(x = factor(month, level = c('jan', 'feb', 'mar', 'apr','may','jun','jul','aug','sep', 'oct', 'nov', 'dec')), \n           fill = y)) + \n       scale_fill_hue(c = 40) +\n       theme_bw() +\n  geom_bar(position = position_dodge(preserve = \"single\"))\n\n\n\nShow the codeplot_month2 &lt;- ggplot(bank_dataset, \n       aes(x = factor(month, level = c('jan', 'feb', 'mar', 'apr','may','jun','jul','aug','sep', 'oct', 'nov', 'dec')), fill = y)) + \n       geom_bar(position = \"fill\") +\n  scale_fill_brewer(palette = \"Set2\") +\n  theme_minimal()\n\n\n\nShow the codegridExtra::grid.arrange(plot_month1, plot_month2, nrow =1)\n\n\n\n\n\n\n\nShow the codeplot_poutcome1 &lt;- ggplot(bank_dataset, \n       aes(x = poutcome, \n           fill = y)) + \n       scale_fill_hue(c = 40) +\n       theme_bw() +\n  geom_bar(position = position_dodge(preserve = \"single\"))\n\n\n\nShow the codeplot_poutcome2 = bank_dataset %&gt;%\n  group_by(poutcome, y) %&gt;%\n  summarize(n = n()) %&gt;% \n  mutate(pct = n/sum(n),\n         lbl = scales::percent(pct)) %&gt;%\n   ggplot(aes(x = poutcome,\n           y = pct,\n           fill = y)) + \n  geom_bar(stat = \"identity\",\n           position = \"fill\") +\n  geom_text(aes(label = lbl), \n            size = 3, \n            position = position_stack(vjust = 0.5)) +\n  scale_fill_brewer(palette = \"Set2\") +\n  labs(y = \"Percent\", \n       fill = \"Interested\",\n       x = \"Class\",\n       title = \"Previous Campaign outcome\") +\n  theme_classic() +\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 30, vjust = 0.5),\n        plot.caption = element_markdown(lineheight = 1.2),\n        plot.title = element_text(hjust = 0.5))\n\n\n\nShow the codegridExtra::grid.arrange(plot_poutcome1, plot_poutcome2, nrow =1)\n\n\n\n\n\n\n\nQuantitative variables\n\n\nAge\nBalance\nDuration\nCampaign\n\n\n\n\nShow the codebank_dataset %&gt;%\nggplot(aes(x=y, y=age, fill=y)) +\n  geom_boxplot() +\n  scale_fill_hue(c = 40) +\n  theme_classic() +\n  labs(\n     title = \"Age & Desire of Bank Deposit Account\" \n  )\n\n\n\n\n\n\n\nShow the codeplot1 = bank_dataset[bank_dataset$balance &lt; 15000, ] %&gt;%\nggplot(aes(x = balance, \n           fill = y)) + \n        scale_fill_hue(c = 40) +\n        theme_bw() +\n  geom_histogram(bins=15)\n\nplot1\n\n\n\n\n\n\n\nShow the codeggplot(bank_dataset, \n       aes(x = duration, \n           fill = y)) + \n       scale_fill_hue(c = 40) +\n       theme_bw() +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\nShow the codeggplot(bank_dataset, \n       aes(x = campaign, \n           fill = y)) + \n       scale_fill_hue(c = 40) +\n       theme_bw() +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#split-traintest-dataset",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#split-traintest-dataset",
    "title": "Predict Possible Interested Clients",
    "section": "Split train/test dataset",
    "text": "Split train/test dataset\nOur first step is to split our dataset on 2 parts. Each of those will be used for a different purpose. The first part’s (train dataset) purpose is to build our model. The other part (test dataset) will be used to evaluate our model’s performance.\n\nShow the codeset.seed(123)\nbank_dataset_split &lt;- initial_split(bank_dataset,\n                                prop = 0.75,\n                                strata = y)\n\n# Create training data\nbank_train &lt;- bank_dataset_split %&gt;%\n                    training()\n\n# Create testing data\nbank_test &lt;- bank_dataset_split %&gt;%\n                    testing()\n\n\n\n\nTrain dataset\nTest dataset\n\n\n\n\nShow the codehead(bank_train) %&gt;%\n  kbl(toprule = T,align = 'c',booktabs = T)  %&gt;%\n  kable_styling(full_width = F, position = \"center\", html_font = \"Cambria\") \n\n\n\nage\njob\nmarital\neducation\ndefault\nbalance\nhousing\nloan\ncontact\nday\nmonth\nduration\ncampaign\npdays\nprevious\npoutcome\ny\n\n\n\n30\nunemployed\nmarried\nprimary\nno\n1787\nno\nno\ncellular\n19\noct\n79\n1\n-1\n0\nunknown\nno\n\n\n33\nservices\nmarried\nsecondary\nno\n4789\nyes\nyes\ncellular\n11\nmay\n220\n1\n339\n4\nfailure\nno\n\n\n30\nmanagement\nmarried\ntertiary\nno\n1476\nyes\nyes\nunknown\n3\njun\n199\n4\n-1\n0\nunknown\nno\n\n\n59\nblue-collar\nmarried\nsecondary\nno\n0\nyes\nno\nunknown\n5\nmay\n226\n1\n-1\n0\nunknown\nno\n\n\n36\nself-employed\nmarried\ntertiary\nno\n307\nyes\nno\ncellular\n14\nmay\n341\n1\n330\n2\nother\nno\n\n\n39\ntechnician\nmarried\nsecondary\nno\n147\nyes\nno\ncellular\n6\nmay\n151\n2\n-1\n0\nunknown\nno\n\n\n\n\n\n\n\n\nShow the codehead(bank_test) %&gt;%\n  kbl(toprule = T,align = 'c',booktabs = T)  %&gt;%\n  kable_styling(full_width = F, position = \"center\", html_font = \"Cambria\") \n\n\n\nage\njob\nmarital\neducation\ndefault\nbalance\nhousing\nloan\ncontact\nday\nmonth\nduration\ncampaign\npdays\nprevious\npoutcome\ny\n\n\n\n35\nmanagement\nsingle\ntertiary\nno\n1350\nyes\nno\ncellular\n16\napr\n185\n1\n330\n1\nfailure\nno\n\n\n35\nmanagement\nsingle\ntertiary\nno\n747\nno\nno\ncellular\n23\nfeb\n141\n2\n176\n3\nfailure\nno\n\n\n31\nblue-collar\nmarried\nsecondary\nno\n360\nyes\nyes\ncellular\n29\njan\n89\n1\n241\n1\nfailure\nno\n\n\n44\nservices\nsingle\nsecondary\nno\n106\nno\nno\nunknown\n12\njun\n109\n2\n-1\n0\nunknown\nno\n\n\n45\nblue-collar\ndivorced\nprimary\nno\n844\nno\nno\nunknown\n5\njun\n1018\n3\n-1\n0\nunknown\nyes\n\n\n37\ntechnician\nsingle\nsecondary\nno\n228\nyes\nno\ncellular\n20\naug\n1740\n2\n-1\n0\nunknown\nno"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#recipes",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#recipes",
    "title": "Predict Possible Interested Clients",
    "section": "Recipes",
    "text": "Recipes\nAn important part in the process of model building is preprocessing. Depending of model type and data structure, I have to do the necessary changes. The tidymodels offers some ready-made preprocessing functions which make the whole process piece of cake.\nIn instance, the dataset I am working right now has imbalanced response variable (term deposit interest). For that reason, I used the recipe step_smote() from themis package.\n\nShow the codebank_recipe &lt;- recipes::recipe(y~., \n                               data = bank_train) %&gt;%\n  step_rm(poutcome) %&gt;%\n  step_corr(all_numeric(), threshold = 0.75) %&gt;%\n  step_dummy(all_nominal(), -all_outcomes()) %&gt;% prep() %&gt;%\n  step_smote(y) %&gt;%\n  prep()\n\n\nLet’s preview our dataset after applying our recipes :\n\nShow the codebank_recipe %&gt;%\n  prep() %&gt;%\n  juice() %&gt;%\n  head() %&gt;%\n  kbl() %&gt;%\n  kable_styling(full_width = F, position = \"center\", html_font = \"Cambria\") \n\n\n\nTable 1: Dataset after recipes\n\n\nage\nbalance\nday\nduration\ncampaign\npdays\nprevious\njob_blue.collar\njob_entrepreneur\njob_housemaid\njob_management\njob_retired\njob_self.employed\njob_services\njob_student\njob_technician\njob_unemployed\njob_unknown\nmarital_married\nmarital_single\neducation_secondary\neducation_tertiary\neducation_unknown\ndefault_yes\nhousing_yes\nloan_yes\ncontact_telephone\ncontact_unknown\nmonth_aug\nmonth_dec\nmonth_feb\nmonth_jan\nmonth_jul\nmonth_jun\nmonth_mar\nmonth_may\nmonth_nov\nmonth_oct\nmonth_sep\ny\n\n\n\n30\n1787\n19\n79\n1\n-1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\nno\n\n\n33\n4789\n11\n220\n1\n339\n4\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n1\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\nno\n\n\n30\n1476\n3\n199\n4\n-1\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n1\n0\n0\n1\n1\n0\n1\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\nno\n\n\n59\n0\n5\n226\n1\n-1\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n1\n0\n0\n0\n1\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\nno\n\n\n36\n307\n14\n341\n1\n330\n2\n0\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n1\n0\n0\n1\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\nno\n\n\n39\n147\n6\n151\n2\n-1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n1\n0\n1\n0\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\nno"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#create-validation-set",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#create-validation-set",
    "title": "Predict Possible Interested Clients",
    "section": "Create validation set",
    "text": "Create validation set\n\nSo, how good is the model? Not so fast…\n\nWe could actually build the model and evaluate its performance. The problem with that approach is the sample.\n\nShow the codecv_folds &lt;- recipes::bake(\n  bank_recipe,\n  new_data = bank_train) %&gt;%\n  rsample::vfold_cv(v = 5, strata = y)"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#specify-models",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#specify-models",
    "title": "Predict Possible Interested Clients",
    "section": "Specify models",
    "text": "Specify models\nNext, parsnip helps us to specify our models. Initially, I will define a LightGBM model,\n\nShow the codelightgbm_model&lt;- parsnip::boost_tree(\n mode = \"classification\",\n trees = 100,\n min_n = tune(),\n learn_rate = tune(),\n tree_depth = tune()) %&gt;%\nset_engine(\"lightgbm\", loss_function = \"squarederror\")\n\n\nand an XGBoost one.\n\nShow the codexgboost_model&lt;- parsnip::boost_tree(\n mode = \"classification\",\n trees = 100,\n min_n = tune(),\n learn_rate = tune(),\n tree_depth = tune()) %&gt;%\n set_engine(\"xgboost\")"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#hyperparameters-tuning",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#hyperparameters-tuning",
    "title": "Predict Possible Interested Clients",
    "section": "Hyperparameters tuning",
    "text": "Hyperparameters tuning\nNow, we are specifying the hyperpaterers’ values and a grid to check whicη combination of those are performing better according to our desired metric (in our case ROC). This has to be done for both, LightGBM\n\nShow the codelightgbm_params &lt;- dials::parameters(\n min_n(),\n tree_depth(range = c(4,10)),\n learn_rate() # learning rate\n)\n\n\n\nShow the codelightgbm_grid &lt;- dials::grid_max_entropy(\n lightgbm_params,\n size = 10)\n\nhead(lightgbm_grid) %&gt;%\n  kbl(toprule = T,align = 'c',booktabs = T)  %&gt;%\n  kable_styling(full_width = F, position = \"center\", html_font = \"Cambria\") \n\n\n\nmin_n\ntree_depth\nlearn_rate\n\n\n\n3\n5\n0.00\n\n\n3\n7\n0.00\n\n\n11\n10\n0.00\n\n\n33\n4\n0.08\n\n\n10\n5\n0.01\n\n\n31\n9\n0.00\n\n\n\n\n\nand XGBoost.\n\nShow the codexgboost_params &lt;- dials::parameters(\n min_n(),\n tree_depth(range = c(4,10)),\n learn_rate() # learning rate\n)\n\n\n\nShow the codexgboost_grid &lt;- dials::grid_max_entropy(\n  xgboost_params,\n  size = 10\n)\n\nhead(xgboost_grid) %&gt;%\n  kbl(toprule = T,align = 'c',booktabs = T)  %&gt;%\n  kable_styling(full_width = F, position = \"center\", html_font = \"Cambria\") \n\n\n\nmin_n\ntree_depth\nlearn_rate\n\n\n\n5\n6\n0.00\n\n\n4\n8\n0.00\n\n\n37\n9\n0.00\n\n\n2\n5\n0.00\n\n\n21\n9\n0.01\n\n\n21\n5\n0.05"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#fit-resamples",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#fit-resamples",
    "title": "Predict Possible Interested Clients",
    "section": "Fit resamples",
    "text": "Fit resamples\n\nShow the code# build workflow for LightGBM\n\nlightgbm_workflow &lt;- workflows::workflow() %&gt;%\n add_model(lightgbm_model) %&gt;%\n add_formula(y ~.)\n\n\n\nShow the code# build workflow for XGBoost\n\nxgboost_workflow &lt;- workflows::workflow() %&gt;%\n  add_model(xgboost_model) %&gt;%\n  add_formula(y~.)\n\n\nFinally, we can build the LightGBM model by combining :\n\nThe workflows we set it up above\nThe resamples\nGrid of values (hyperparameters)\nMetric based on which we will evaluate our model’s performance\n\n\nShow the codestart_time_lightgbm &lt;- Sys.time()\n\nlightgbm_tuned_model &lt;- tune::tune_grid(\n object = lightgbm_workflow,\n resamples = cv_folds,\n metrics = metric_set(roc_auc, accuracy),\n grid = lightgbm_grid,\n control = tune::control_grid(verbose = FALSE) # set this to TRUE to see\n # in what step of the process you are. But that doesn't look that well in\n # a blog.\n)\n\nend_time_lightgbm &lt;- Sys.time()\n\ntime_lightgbm = difftime(end_time_lightgbm,start_time_lightgbm,units = \"secs\")\n\n\nSimilarly, for XGBoost.\n\nShow the codestart_time_xgboost &lt;- Sys.time()\n\nxgboost_tuned_model &lt;- tune::tune_grid(\n object = xgboost_workflow,\n resamples = cv_folds,\n metrics = metric_set(roc_auc, accuracy),\n grid = xgboost_grid,\n control = tune::control_grid(verbose = FALSE) # set this to TRUE to see\n # in what step of the process you are. But that doesn't look that well in\n # a blog.\n)\n\nend_time_xgboost &lt;- Sys.time()\n\ntime_xgboost= difftime(end_time_xgboost,start_time_xgboost,units = \"secs\")"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#evaluate-model",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#evaluate-model",
    "title": "Predict Possible Interested Clients",
    "section": "Evaluate model",
    "text": "Evaluate model\nOur first results based on resamples for LightGBM\n\nShow the codelightgbm_tuned_model %&gt;%\n  show_best(\"roc_auc\",n=5) %&gt;% \n  kbl(toprule = T,align = 'c',booktabs = T)  %&gt;%\n  kable_styling(full_width = F, position = \"center\", html_font = \"Cambria\") \n\n\n\nmin_n\ntree_depth\nlearn_rate\n.metric\n.estimator\nmean\nn\nstd_err\n.config\n\n\n\n33\n4\n0.08\nroc_auc\nbinary\n0.90\n5\n0.01\nPreprocessor1_Model04\n\n\n16\n10\n0.06\nroc_auc\nbinary\n0.90\n5\n0.01\nPreprocessor1_Model10\n\n\n10\n5\n0.01\nroc_auc\nbinary\n0.89\n5\n0.01\nPreprocessor1_Model05\n\n\n34\n10\n0.00\nroc_auc\nbinary\n0.86\n5\n0.01\nPreprocessor1_Model07\n\n\n29\n6\n0.00\nroc_auc\nbinary\n0.86\n5\n0.01\nPreprocessor1_Model09\n\n\n\n\n\nand XGBoost\n\nShow the codexgboost_tuned_model %&gt;%\n  show_best(\"roc_auc\",n=5) %&gt;% \n  kbl(toprule = T,align = 'c',booktabs = T)  %&gt;%\n  kable_styling(full_width = F, position = \"center\", html_font = \"Cambria\") \n\n\n\nmin_n\ntree_depth\nlearn_rate\n.metric\n.estimator\nmean\nn\nstd_err\n.config\n\n\n\n21\n5\n0.05\nroc_auc\nbinary\n0.88\n5\n0.01\nPreprocessor1_Model06\n\n\n21\n9\n0.01\nroc_auc\nbinary\n0.85\n5\n0.01\nPreprocessor1_Model05\n\n\n5\n6\n0.00\nroc_auc\nbinary\n0.84\n5\n0.01\nPreprocessor1_Model01\n\n\n40\n5\n0.00\nroc_auc\nbinary\n0.83\n5\n0.01\nPreprocessor1_Model08\n\n\n19\n7\n0.00\nroc_auc\nbinary\n0.83\n5\n0.01\nPreprocessor1_Model07"
  },
  {
    "objectID": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#last-fit",
    "href": "notebooks/2022-11-24-Predict-Possible-Clients/2022-11-24-Predict-Possible-Clients.html#last-fit",
    "title": "Predict Possible Interested Clients",
    "section": "Last fit",
    "text": "Last fit\nBy now we can assess which is the best combination of values. Given those I will assess my model’s performance on unknown (to my model) data. LightGBM model has 0.8469 ROC-value\n\nShow the codelast_fit_lightgbm_model = parsnip::boost_tree(\n mode = \"classification\",\n trees = 100,\n min_n = 33,\n learn_rate = 0.0787,\n tree_depth = 4) %&gt;%\nset_engine(\"lightgbm\", loss_function = \"squarederror\")\n\n\n\nShow the codeoptions(digits = 4)\n\nlast_fit_workflow &lt;- lightgbm_workflow %&gt;% \n  update_model(last_fit_lightgbm_model)\n\nlast_lightgbm_fit &lt;- \n  last_fit_workflow %&gt;% \n  last_fit(bank_dataset_split)\n\n! train/test split: preprocessor 1/1, model 1/1: NAs introduced by coercion\n\n\n! train/test split: preprocessor 1/1, model 1/1 (predictions): NAs introduced by coercion\n\nShow the codelast_lightgbm_fit %&gt;% \n  collect_metrics() %&gt;%\n  kbl(toprule = T,align = 'c',booktabs = T)  %&gt;%\n  kable_styling(full_width = F, position = \"center\", html_font = \"Cambria\") \n\n\n\n.metric\n.estimator\n.estimate\n.config\n\n\n\naccuracy\nbinary\n0.8815\nPreprocessor1_Model1\n\n\nroc_auc\nbinary\n0.8458\nPreprocessor1_Model1\n\n\n\n\n\nand XGBoost, 0.8736.\n\nShow the codelast_fit_xgboost_model = parsnip::boost_tree(\n mode = \"classification\",\n trees = 100,\n min_n = 21,\n learn_rate = 0.0472,\n tree_depth = 5) %&gt;%\nset_engine(\"xgboost\")\n\n\n\nShow the codeoptions(digits = 4)\n\nlast_fit_xgboost_workflow &lt;- xgboost_workflow %&gt;% \n  update_model(last_fit_xgboost_model)\n\nlast_xgboost_fit &lt;- \n  last_fit_xgboost_workflow %&gt;% \n  last_fit(bank_dataset_split)\n\nlast_xgboost_fit %&gt;% \n  collect_metrics() %&gt;%\n  kbl(toprule = T,align = 'c',booktabs = T)  %&gt;%\n  kable_styling(full_width = F, position = \"center\", html_font = \"Cambria\") \n\n\n\n.metric\n.estimator\n.estimate\n.config\n\n\n\naccuracy\nbinary\n0.8957\nPreprocessor1_Model1\n\n\nroc_auc\nbinary\n0.8702\nPreprocessor1_Model1"
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html",
    "title": "Forecasting Unemployment in Greece",
    "section": "",
    "text": "Introduction \n\n\nPrerequisites    2.1 Import Libraries    2.2 Import Dataset    2.3 Preview Datasset    2.4 Dataset Structure    2.5 Time Series Preprocessing \n\n\nMissing Values \n\n\nDescriptive Statistics \n\n\nExamine Stationarity    5.1 Definition of stationarity    5.2 Examine Stationarity Graphically    5.3 Examine Stationarity with Statistical Tests      5.3.1 ADF test      5.3.2 PP test      5.3.3 KPSS test \n\n\nIdentify Model \n\n\nBuild Time Series Model \n\n\nCompare Models \n\n\nForecast Future Unemployment    9.1 ARIMA (0,2,1) forecasts    9.2 ARIMA (9,2,1) forecasts \n\nResults"
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#background",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#background",
    "title": "Forecasting Unemployment in Greece",
    "section": "Background",
    "text": "Background"
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#time-series",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#time-series",
    "title": "Forecasting Unemployment in Greece",
    "section": "Time series",
    "text": "Time series"
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#procedure",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#procedure",
    "title": "Forecasting Unemployment in Greece",
    "section": "Procedure",
    "text": "Procedure"
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#short-answer",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#short-answer",
    "title": "Forecasting Unemployment in Greece",
    "section": "Short Answer",
    "text": "Short Answer\nIf you are in a hurry, I predicted that unemployment on Greece is expected to further reduce. It will range between 10% - 13% in February, 2023."
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#import-libraries",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#import-libraries",
    "title": "Forecasting Unemployment in Greece",
    "section": "Import Libraries",
    "text": "Import Libraries\nFor this analysis we will need standard libraries for importing and processing my data, such as readr (Wickham, Hester, & Bryan, 2022) and dplyr (Wickham, François, Henry, & Müller, 2022). The kableExtra (Zhu, 2021) package was used to print the results in table format, while the flextable (Gohel & Skintzos, 2022) package was used to print the results of the Dickey-Fuller and KPSS tests.\nThen, due to the nature of the data (time series) it was deemed necessary to use relevant libraries such as lubridate(Spinu, Grolemund, & Wickham, 2021), tseries(Trapletti & Hornik, 2022) & forecast(R. Hyndman et al., 2022) packages.\nFinally, the ggplot2 (Wickham, Chang, et al., 2022) package was used to create some visualizations, as well as an auxiliary package, ggtext (Wilke & Wiernik, 2022), for further formatting those.\n\nShow the code# General purpose R libraries\nlibrary(dplyr)\nlibrary(readr)\nlibrary(kableExtra)\nlibrary(flextable)\n\n\n# Graphs\nlibrary(ggplot2)\nlibrary(ggtext) # Add support for HTML/CSS on ggplot\n\n# Time Series \n\nlibrary(lubridate)\nlibrary(tseries)\nlibrary(forecast)\n\n# Other settings\noptions(digits=2) # print only 2 decimals"
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#import-dataset",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#import-dataset",
    "title": "Forecasting Unemployment in Greece",
    "section": "Import dataset",
    "text": "Import dataset\nAfter loading the libraries I am able to use the commands of the readr package to import my data. My data is in .csv format, so I’ll use the read_csv() command (Wickham, Hester, et al., 2022) to import them.\nAdditionally, I choose not to include EA-19 values (as I investigate Greece’s unemployment).\n\nShow the codeunemployment &lt;- read_csv(\"data/unemployment.csv\") %&gt;%\n  select(LOCATION, TIME, Value) %&gt;% filter(LOCATION != \"EA19\")"
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#preview-dataset",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#preview-dataset",
    "title": "Forecasting Unemployment in Greece",
    "section": "Preview Dataset",
    "text": "Preview Dataset\n\nShow the code#| label: tbl-preview-dataset\n#| tbl-cap: \"Preview Dataset (first 6 rows)\"\n#| \npreview_dataset = head(unemployment, 10)\nkbl(preview_dataset, \n    align = 'c',\n    booktabs = T,\n    centering = T,\n    valign = T) %&gt;%\n  kable_paper() %&gt;%\n  scroll_box(width = \"600px\", height = \"250px\")\n\n\n\n\nLOCATION\nTIME\nValue\n\n\n\nGRC\n1998-04\n11\n\n\nGRC\n1998-05\n11\n\n\nGRC\n1998-06\n11\n\n\nGRC\n1998-07\n11\n\n\nGRC\n1998-08\n11\n\n\nGRC\n1998-09\n11\n\n\nGRC\n1998-10\n11\n\n\nGRC\n1998-11\n11\n\n\nGRC\n1998-12\n11\n\n\nGRC\n1999-01\n11"
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#dataset-structure",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#dataset-structure",
    "title": "Forecasting Unemployment in Greece",
    "section": "Dataset Structure",
    "text": "Dataset Structure\nOur dataset is consisted by 3 variables (columns). More specifically, concerning my variables, are as follows :\n\n\n\n\n\n\n\nVariable\nProperty\nDescription\n\n\n\nLOCATION\n\nqualitative  (nominal)\nSpecific country’s statistics\n\n\nTIME\n\nqualitative  (ordinal)\nMonth of the reported data\n\n\nValue\n\nquantitative  (continuous)\nUnemployment at the given Time and Country\n\n\n\nThus, my sample has 3 variables, of which 2 are qualitative and 1 is quantitative property."
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#time-series-preprocessing",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#time-series-preprocessing",
    "title": "Forecasting Unemployment in Greece",
    "section": "Time Series Preprocessing",
    "text": "Time Series Preprocessing\nThe TIME variable needs to be a Date variable which is not fulfilled on our case.\n\nShow the codesapply(unemployment, class) %&gt;% kbl() %&gt;% kable_styling(full_width = F, position = \"center\")\n\n\n\n\nx\n\n\n\nLOCATION\ncharacter\n\n\nTIME\ncharacter\n\n\nValue\nnumeric\n\n\n\n\n\nSo, above I see that I have dates in a format “YYYY-MM” (Year - Month) and they are considered as characters. With the help of lubridate package I will convert my time series on a Date format.\n\nShow the codeunemployment$TIME &lt;- lubridate::ym(unemployment$TIME)\n\n\nAnd let’s check again :\n\nShow the codesapply(unemployment, class) %&gt;% kbl() %&gt;% kable_styling(full_width = F, position = \"center\")\n\n\n\n\nx\n\n\n\nLOCATION\ncharacter\n\n\nTIME\nDate\n\n\nValue\nnumeric\n\n\n\n\n\nAnd now I got the Date format. I am able to continue my analysis."
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#definition-of-stationarity",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#definition-of-stationarity",
    "title": "Forecasting Unemployment in Greece",
    "section": "Definition of stationarity",
    "text": "Definition of stationarity\nAn important concept in studying time series is stationarity. A time series is called stationary (“Applied Time Series Analysis,” n.d.) if: \n\n\nE(X_t) = \\text{constant} \n\nVar(X_t) = \\text{constant} \nCov(X_t, X_s) = \\text{constant}"
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#examine-stationarity-graphically",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#examine-stationarity-graphically",
    "title": "Forecasting Unemployment in Greece",
    "section": "Examine Stationarity Graphically",
    "text": "Examine Stationarity Graphically\n\n\nLevel\nFirst Diff.\nSecond Diff.\n\n\n\nIt is apparent that there is a big variation on the values of unemployment. This time series is not stationary and the differencing is justified.\n\nShow the codeplot(grc_unemployment$Value,type = \"l\")\n\n\n\n\n\n\nHere we can see a big improvement in comparison with original data. I have some concerns about points close to 150 (mildly upwards trend) and 250 (outlier).\n\nShow the codegrc_unemployment_diff1 &lt;- diff(grc_unemployment$Value, differences = 1)\n\nplot(grc_unemployment_diff1,type = \"l\")\n\n\n\n\n\n\nGiven the concerns of above, I made also a second difference plot. It seems to solve the problem on points close to 150.\n\nShow the codegrc_unemployment_diff2&lt;- diff(grc_unemployment$Value, differences = 2)\n\nplot(grc_unemployment_diff2, type = \"l\")"
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#examine-stationarity-with-statistical-tests",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#examine-stationarity-with-statistical-tests",
    "title": "Forecasting Unemployment in Greece",
    "section": "Examine Stationarity with Statistical tests",
    "text": "Examine Stationarity with Statistical tests\nThe graphical interpretation of stationarity can be beneficial for a quick assessment on topic of stationarity. However it can be considered a subjective metric, which leads on a non consistent decision (someone may consider the second figure as stationary and some others not.\nThankfully, there are some statistical tests which can help us on our decisions. Some commonly used are :\n\n\nAugmented Dickey-Fuller (ADF) test\n\nPhillips- Perron (PP) test\n\nKwiatkowski-Phillips-Schmidt-Shin (KPSS) test\n\nSummary\n\nShow the codesummary_stationarity_results &lt;- data.frame(\n                             \"Type\" = c(\"levels\", \"Diff(GRC)\", \"Diff2(GRC)\"),\n                             \"ADF test\" = c(\"Non Stationary\", \"Stationary\", \"Stationary\"),\n                              \"PP test\" = c(\"Non Stationary\", \"Stationary\", \"Stationary\"),\n                             \"KPSS test\" =c(\"Non Stationary\", \"Non Stationary\", \"Stationary\")\n)\n\n\nsummary_stationarity_results  %&gt;% kbl() %&gt;% kable_styling()\n\n\n\nType\nADF.test\nPP.test\nKPSS.test\n\n\n\nlevels\nNon Stationary\nNon Stationary\nNon Stationary\n\n\nDiff(GRC)\nStationary\nStationary\nNon Stationary\n\n\nDiff2(GRC)\nStationary\nStationary\nStationary\n\n\n\n\n\nADF test\n\n\\begin{array}{l}\nH_0 : \\text{Time series is not stationary} \\\\\nH_1 : \\text{Alternatively}\n\\end{array}\n\\equiv\n\\begin{array}{l}\nH_0 : \\text{There is a unit root} \\\\\nH_1 : \\text{Alternatively}\n\\end{array}\n\n\nShow the codeadf.test(grc_unemployment$Value) %&gt;% as_flextable()\n\n\n\n\n\nstatistic\np.value\nparameter\nmethod\nalternative\n\n\n-0.9\n0.9485 \n6.0\nAugmented Dickey-Fuller Test\nstationary\n\n\nSignif. codes: 0 &lt;= '***' &lt; 0.001 &lt; '**' &lt; 0.01 &lt; '*' &lt; 0.05\n\n\n\n\n\nΣυνεπώς, είναι προφανές από τα αποτελέσματα του στατιστικού ελέγχου Dickey Fuller ότι η χρονοσειρά μου δεν είναι στάσιμη. Θα πρέπει να εφαρμόσω τον έλεγχο Dickey-Fuller στις δοαφορές.\n\nShow the codeadf.test(grc_unemployment_diff1) %&gt;% as_flextable()\n\n\n\n\n\nstatistic\np.value\nparameter\nmethod\nalternative\n\n\n-3.5\n0.0424 *\n6.0\nAugmented Dickey-Fuller Test\nstationary\n\n\nSignif. codes: 0 &lt;= '***' &lt; 0.001 &lt; '**' &lt; 0.01 &lt; '*' &lt; 0.05\n\n\n\n\n\nAnd finally the results for the second differences are :\n\nShow the codeadf.test(grc_unemployment_diff2) %&gt;% as_flextable()\n\nWarning in adf.test(grc_unemployment_diff2): p-value smaller than printed p-\nvalue\n\n\n\n\n\n\nstatistic\np.value\nparameter\nmethod\nalternative\n\n\n-9.5\n0.0100 **\n6.0\nAugmented Dickey-Fuller Test\nstationary\n\n\nSignif. codes: 0 &lt;= '***' &lt; 0.001 &lt; '**' &lt; 0.01 &lt; '*' &lt; 0.05\n\n\n\n\n\nPP test\n\n\\begin{array}{l}\nH_0 : \\text{Time series is not stationary} \\\\\nH_1 : \\text{Alternatively}\n\\end{array}\n\\equiv\n\\begin{array}{l}\nH_0 : \\text{There is a unit root} \\\\\nH_1 : \\text{Alternatively}\n\\end{array}\n\n\nShow the codepp.test(grc_unemployment$Value,) %&gt;% as_flextable()\n\n\n\n\n\nstatistic\np.value\nparameter\nmethod\nalternative\n\n\n0.2\n0.9900 \n5.0\nPhillips-Perron Unit Root Test\nstationary\n\n\nSignif. codes: 0 &lt;= '***' &lt; 0.001 &lt; '**' &lt; 0.01 &lt; '*' &lt; 0.05\n\n\n\n\n\n\nShow the codepp.test(grc_unemployment_diff1) %&gt;% as_flextable()\n\n\n\n\n\nstatistic\np.value\nparameter\nmethod\nalternative\n\n\n-279.8\n0.0100 **\n5.0\nPhillips-Perron Unit Root Test\nstationary\n\n\nSignif. codes: 0 &lt;= '***' &lt; 0.001 &lt; '**' &lt; 0.01 &lt; '*' &lt; 0.05\n\n\n\n\n\n\nShow the codepp.test(grc_unemployment_diff2) %&gt;% as_flextable()\n\n\n\n\n\nstatistic\np.value\nparameter\nmethod\nalternative\n\n\n-337.1\n0.0100 **\n5.0\nPhillips-Perron Unit Root Test\nstationary\n\n\nSignif. codes: 0 &lt;= '***' &lt; 0.001 &lt; '**' &lt; 0.01 &lt; '*' &lt; 0.05\n\n\n\n\n\nKPSS test\n\n\\begin{array}{l}\nH_0 : \\text{Time series is stationary} \\\\\nH_1 : \\text{Alternatively}\n\\end{array}\n\\equiv\n\\begin{array}{l}\nH_0 : \\text{There is not  unit root} \\\\\nH_1 : \\text{Alternatively}\n\\end{array}\n\n\nShow the codekpss.test(grc_unemployment$Value,) %&gt;% as_flextable()\n\n\n\n\n\nstatistic\np.value\nparameter\nmethod\n\n\n2.5\n0.0100 **\n5.0\nKPSS Test for Level Stationarity\n\n\nSignif. codes: 0 &lt;= '***' &lt; 0.001 &lt; '**' &lt; 0.01 &lt; '*' &lt; 0.05\n\n\n\n\n\n\nShow the codekpss.test(grc_unemployment_diff1) %&gt;% as_flextable()\n\n\n\n\n\nstatistic\np.value\nparameter\nmethod\n\n\n0.6\n0.0231 *\n5.0\nKPSS Test for Level Stationarity\n\n\nSignif. codes: 0 &lt;= '***' &lt; 0.001 &lt; '**' &lt; 0.01 &lt; '*' &lt; 0.05\n\n\n\n\n\n\nShow the codekpss.test(grc_unemployment_diff2) %&gt;% as_flextable()\n\n\n\n\n\nstatistic\np.value\nparameter\nmethod\n\n\n0.0\n0.1000 .\n5.0\nKPSS Test for Level Stationarity\n\n\nSignif. codes: 0 &lt;= '***' &lt; 0.001 &lt; '**' &lt; 0.01 &lt; '*' &lt; 0.05"
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#arima-021-forecasts",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#arima-021-forecasts",
    "title": "Forecasting Unemployment in Greece",
    "section": "ARIMA (0,2,1) forecasts",
    "text": "ARIMA (0,2,1) forecasts\n\nShow the codeforecast(auto_model,6) %&gt;% autoplot()\n\n\n\nShow the codeforecast(auto_model,6) %&gt;% kbl() %&gt;% kable_paper()\n\n\n\n\nPoint Forecast\nLo 80\nHi 80\nLo 95\nHi 95\n\n\n\n294\n12\n11.5\n13\n11.2\n13\n\n\n295\n12\n11.1\n13\n10.7\n13\n\n\n296\n12\n10.7\n13\n10.2\n13\n\n\n297\n12\n10.3\n13\n9.7\n13\n\n\n298\n11\n10.0\n13\n9.2\n13\n\n\n299\n11\n9.6\n13\n8.8\n14"
  },
  {
    "objectID": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#arima-921-forecasts",
    "href": "notebooks/2022-10-22-Forecasting-Unemployment-Greece/2022-10-22-Unemployment-Greece.html#arima-921-forecasts",
    "title": "Forecasting Unemployment in Greece",
    "section": "ARIMA (9,2,1) forecasts",
    "text": "ARIMA (9,2,1) forecasts\n\nShow the codeforecast(arimaModel_3,6) %&gt;% autoplot()\n\n\n\nShow the codeforecast(arimaModel_3,6) %&gt;% kbl() %&gt;% kable_paper()\n\n\n\n\nPoint Forecast\nLo 80\nHi 80\nLo 95\nHi 95\n\n\n\n294\n12\n11\n12\n11.1\n13\n\n\n295\n12\n11\n13\n10.9\n13\n\n\n296\n12\n11\n13\n10.7\n13\n\n\n297\n12\n11\n13\n10.1\n13\n\n\n298\n12\n10\n13\n9.8\n13\n\n\n299\n12\n10\n13\n9.4\n14"
  },
  {
    "objectID": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html",
    "href": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html",
    "title": "Predict Cost of Housing in Kallithea",
    "section": "",
    "text": "Introduction\nPrerequisites    2.1 Import Libraries    2.2 Import Dataset    2.3 Preview Dataset    2.4 Dataset structure    2.5 Recoding variables    2.6 Custom functions \nEDA with R    3.1 Missing Values    3.2 Univariate Analysis        3.2.1 Qualitative (Nominal) variables        3.2.2 Qualitative (Ordinal) variables        3.2.2 Qualitative (Discrete) variables        3.2.2 Qualitative (Continuous) variables        3.2.2 Time series \nAcknowledgements\nReferences"
  },
  {
    "objectID": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html#import-libraries",
    "href": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html#import-libraries",
    "title": "Predict Cost of Housing in Kallithea",
    "section": "Import libraries",
    "text": "Import libraries\nIn brief,\n\nfor data entry purposes, I will use readr package (part of tidyverse)\nfor plots, ggplot2\nand building models with tidymodels\n\n\n\nShow the code\n# General purpose R libraries\nlibrary(readr)\nlibrary(dplyr)\nlibrary(kableExtra)\nlibrary(forcats)\n\n# Deal with dates\n\nlibrary(lubridate)\n\n# Graphs\nlibrary(ggplot2)\nlibrary(ggtext) # Add support for HTML/CSS on ggplot\n\n# Build ML models\n\nlibrary(tidymodels)\nlibrary(bonsai)\n\n# Other settings\noptions(digits=4) # print only 4 decimals\noptions(warn = -1)"
  },
  {
    "objectID": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html#import-dataset",
    "href": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html#import-dataset",
    "title": "Predict Cost of Housing in Kallithea",
    "section": "Import dataset",
    "text": "Import dataset\nAfter importing my libraries I can use readr’s, read_csv function in order to import my dataset. This dataset was retrieved from Kaggle. Some customization need to be made in order to make an efficient analysis :\n\nfilter data for apartments in Kallithea\nconvert Greek characters to English ones\n\n\n\nShow the code\ndata &lt;- read_csv(\"kallithea.csv\")"
  },
  {
    "objectID": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html#preview-dataset",
    "href": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html#preview-dataset",
    "title": "Predict Cost of Housing in Kallithea",
    "section": "Preview dataset",
    "text": "Preview dataset\nAs usual, one of my first steps is to preview my dataset. That way I can have a first impression on my dataset and its possible problems. More specifically, the preview reveals :\n\nA LOT variables that need recoding (energyclass, solar, etc.)\nSome values on specific variables are on greek (parking)\nDuplicate ID column\nThere are missing values (!!!)\n\n\n\nShow the code\n#| label: tbl-preview-dataset\n#| tbl-cap: \"Preview Dataset (first 6 rows)\"\n\npreview_data = head(data, 7) %&gt;%\n  kbl(align = 'c',\n    booktabs = T,\n    centering = T,\n    valign = T) %&gt;%\n  kable_paper() %&gt;%\n  scroll_box(width = \"600px\", height = \"250px\")\n\npreview_data\n\n\n\n\n\n\n...1\n...2\nlocation_name\nres_date\nres_price\nres_price_sqr\nres_sqr\nconstruction_year\nlevels\nbedrooms\nbathrooms\ndeleted\ndeleted_at\nstatus\nenergyclass\nauto_heating\nsolar\ncooling\nsafe_door\ngas\nfireplace\nfurniture\nstudent\nparking\n\n\n\n\n1\n1\nKallithea\n2022-03-09\n220000\n2558\n86\n2002\n2nd\n2\n1\n1\n2022-04-15\nExcellent\nC\n1\n0\n1\n1\n0\n0\n1\n0\nParking πιλωτής\n\n\n2\n2\nKallithea\n2022-04-15\n180000\n2400\n75\n1975\n3rd\n2\n1\n1\n2022-04-22\nRenovated\nD\n0\n0\n0\n0\n0\n0\n1\n0\nNA\n\n\n3\n3\nKallithea\n2022-02-11\n180000\n3000\n60\n2022\n1st\n2\n1\n1\n2022-04-14\nExcellent\nA+\n1\n1\n0\n1\n1\n0\n0\n0\nNA\n\n\n4\n4\nKallithea\n2022-05-27\n39000\n1300\n30\n1965\nBasement\n1\n1\n1\n2022-06-02\nRenovated\nF\n0\n0\n0\n0\n0\n0\n1\n0\nNA\n\n\n5\n5\nKallithea\n2022-04-06\n92000\n1533\n60\n1981\n1st\n1\n1\n1\n2022-04-08\nGood\nE\n0\n0\n0\n0\n0\n0\n0\n0\nNA\n\n\n6\n6\nKallithea\n2021-02-17\n220000\n1864\n118\n1992\n1st\n3\n1\n1\n2022-03-23\nNewly built\nD\n1\n0\n0\n1\n0\n0\n0\n0\nNA\n\n\n7\n8\nKallithea\n2022-04-10\n130000\n1461\n89\n1976\nGround\n2\n1\n1\n2022-06-10\nGood\nF\n1\n0\n0\n0\n0\n0\n0\n0\nNA"
  },
  {
    "objectID": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html#recoding-variables",
    "href": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html#recoding-variables",
    "title": "Predict Cost of Housing in Kallithea",
    "section": "Recoding variables",
    "text": "Recoding variables\n\nDates\n\n\nShow the code\ndata$res_date = ymd(data$res_date)\n\n\n\n\nQualitative\nAs we noted previously, there are some variables that need recoding. Based on the 15th chapter of R-graphics book (Chang, 2018) we have 2 main choices to do that :\n\nrecode() from dplyr\nfct_recode() from forcats\n\n\n\nShow the code\n# Deleted\n\ndata$deleted = as.factor(data$deleted)\ndata$deleted = fct_recode(data$deleted, Yes = \"1\", No = \"0\")\n\n# Auto Heating\n\ndata$auto_heating = data$auto_heating %&gt;%\n  as.factor() %&gt;%\n  fct_recode(., Yes = \"1\", No = \"0\")\n\n# Solar\n\ndata$solar = data$solar %&gt;%\n  as.factor() %&gt;%\n  fct_recode(., Yes = \"1\", No = \"0\")\n\n# Cooling\n\ndata$cooling = data$cooling %&gt;%\n  as.factor() %&gt;%\n  fct_recode(., Yes = \"1\", No = \"0\")\n\n# Safe door\n\ndata$safe_door = data$safe_door %&gt;%\n  as.factor() %&gt;%\n  fct_recode(., Yes = \"1\", No = \"0\")\n\n# Gas\n\ndata$gas = data$gas %&gt;%\n  as.factor() %&gt;%\n  fct_recode(., Yes = \"1\", No = \"0\")\n\n# Fireplace\n\ndata$fireplace = data$fireplace %&gt;%\n  as.factor() %&gt;%\n  fct_recode(., Yes = \"1\", No = \"0\")\n\n# Furniture\n\ndata$furniture = data$furniture %&gt;%\n  as.factor() %&gt;%\n  fct_recode(., Yes = \"1\", No = \"0\")\n\n# Student\n\ndata$student = data$student %&gt;%\n  as.factor() %&gt;%\n  fct_recode(., Yes = \"1\", No = \"0\")\n\n## Recoding data$parking\ndata$parking &lt;- data$parking %&gt;%\n  fct_recode(\n    \"Yes\" = \"Parking πιλωτής\",\n    \"Yes\" = \"Ανοιχτό parking\",\n    \"Yes\" = \"Ανοιχτό parking, Parking πιλωτής\",\n    \"Yes\" = \"Κλειστό parking\",\n    \"Yes\" = \"Υπόγειο parking\"\n  ) %&gt;%\n  fct_explicit_na(\"No\")\n\n\n## Levels\ndata$levels &lt;- data$levels %&gt;%\n  as.factor() %&gt;%\n  fct_recode(., \"Mezzanine\" = \"Ημιώροφος\")\n\n# Delete ID column\n\ndata$...2 &lt;- NULL\n\n\nLet’s see one more time our dataset structure after recoding :\n\n\nShow the code\nhead(data, 7) %&gt;%\n  kbl(align = 'c',\n    booktabs = T,\n    centering = T,\n    valign = T) %&gt;%\n  kable_paper() %&gt;%\n  scroll_box(width = \"600px\", height = \"250px\")\n\n\n\n\n\n\n...1\nlocation_name\nres_date\nres_price\nres_price_sqr\nres_sqr\nconstruction_year\nlevels\nbedrooms\nbathrooms\ndeleted\ndeleted_at\nstatus\nenergyclass\nauto_heating\nsolar\ncooling\nsafe_door\ngas\nfireplace\nfurniture\nstudent\nparking\n\n\n\n\n1\nKallithea\n2022-03-09\n220000\n2558\n86\n2002\n2nd\n2\n1\nYes\n2022-04-15\nExcellent\nC\nYes\nNo\nYes\nYes\nNo\nNo\nYes\nNo\nYes\n\n\n2\nKallithea\n2022-04-15\n180000\n2400\n75\n1975\n3rd\n2\n1\nYes\n2022-04-22\nRenovated\nD\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\n\n\n3\nKallithea\n2022-02-11\n180000\n3000\n60\n2022\n1st\n2\n1\nYes\n2022-04-14\nExcellent\nA+\nYes\nYes\nNo\nYes\nYes\nNo\nNo\nNo\nNo\n\n\n4\nKallithea\n2022-05-27\n39000\n1300\n30\n1965\nBasement\n1\n1\nYes\n2022-06-02\nRenovated\nF\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\n\n\n5\nKallithea\n2022-04-06\n92000\n1533\n60\n1981\n1st\n1\n1\nYes\n2022-04-08\nGood\nE\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n\n\n6\nKallithea\n2021-02-17\n220000\n1864\n118\n1992\n1st\n3\n1\nYes\n2022-03-23\nNewly built\nD\nYes\nNo\nNo\nYes\nNo\nNo\nNo\nNo\nNo\n\n\n7\nKallithea\n2022-04-10\n130000\n1461\n89\n1976\nGround\n2\n1\nYes\n2022-06-10\nGood\nF\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo"
  },
  {
    "objectID": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html#custom-functions",
    "href": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html#custom-functions",
    "title": "Predict Cost of Housing in Kallithea",
    "section": "Custom functions",
    "text": "Custom functions\n\nQualitative - Categorical\n\n\nShow the code\ncategorical_plot &lt;- function(var, custom_title){\ndata %&gt;%\n  as.data.frame() %&gt;%\n  select(var) %&gt;%\n  table() %&gt;%\n  as.data.frame() %&gt;%\n  `colnames&lt;-`(c(\"Categories\", \"Occurencies\")) %&gt;%\n  ggplot(., aes(x = Categories, y = Occurencies, fill=Categories)) +\n   geom_bar(stat = \"identity\") +\n   geom_text(aes(label = Occurencies, vjust = -.1)) +\n    labs(\n        title = custom_title\n    ) +\n   theme_classic()\n}\n\n\n\n\nQuantitative - Discrete\n\n\nShow the code\ndiscrete_plot &lt;- function(var){\n  ggplot(data, aes(x = var)) +\n  geom_bar(stat = \"count\") +\n  theme_classic()\n}"
  },
  {
    "objectID": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html#missing-values",
    "href": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html#missing-values",
    "title": "Predict Cost of Housing in Kallithea",
    "section": "Missing Values",
    "text": "Missing Values\nOn this dataset there are 438 missing values, in total. More specifically,\n\n\nShow the code\ndata %&gt;%\n  is.na() %&gt;%\n  colSums() %&gt;%\n  as.data.frame() %&gt;%\n  `colnames&lt;-`(\"Occurencies\") %&gt;%\n  filter(Occurencies &gt;0) %&gt;%\n  arrange(-Occurencies) %&gt;%\n  kbl(caption = \"Missing Values of Dataset\") %&gt;%\n  kable_classic(full_width = F, html_font = \"Cambria\")\n\n\n\nMissing Values of Dataset\n\n\n\nOccurencies\n\n\n\n\ndeleted_at\n144\n\n\nstatus\n97\n\n\nenergyclass\n74\n\n\nbathrooms\n57\n\n\nbedrooms\n37\n\n\nconstruction_year\n29"
  },
  {
    "objectID": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html#univariate-analysis",
    "href": "notebooks/2022-12-03-House-Price-Kallithea/2022-12-03-House-Price-Kallithea.html#univariate-analysis",
    "title": "Predict Cost of Housing in Kallithea",
    "section": "Univariate analysis",
    "text": "Univariate analysis\n\nQualitative (Nominal) variables\n\nAutoheatingSolarCoolingSafe doorGasFireplaceFurnitureStudentParkingDeleted\n\n\n\n\nShow the code\ncategorical_plot(\"auto_heating\",\"Autonomous Heating\")\n\n\n\n\n\n\n\n\n\nShow the code\ncategorical_plot(\"solar\", \"Solar-powered water-heater\")\n\n\n\n\n\n\n\n\n\nShow the code\ncategorical_plot(\"cooling\", \"Cooling\")\n\n\n\n\n\n\n\n\n\nShow the code\ncategorical_plot(\"safe_door\", \"Safe door\")\n\n\n\n\n\n\n\n\n\nShow the code\ncategorical_plot(\"gas\", \"Gas\")\n\n\n\n\n\n\n\n\n\nShow the code\ncategorical_plot(\"fireplace\", \"Fireplace\")\n\n\n\n\n\n\n\n\n\nShow the code\ncategorical_plot(\"furniture\", \"Available furniture\")\n\n\n\n\n\n\n\n\n\nShow the code\ncategorical_plot(\"student\", \"Ideal for students\")\n\n\n\n\n\n\n\n\n\nShow the code\ncategorical_plot(\"parking\", \"Parking\")\n\n\n\n\n\n\n\n\n\nShow the code\ncategorical_plot(\"deleted\", \"Deleted\")\n\n\n\n\n\n\n\n\n\n\nQualitative (Ordinal) variables\n\nStatusEnergy classFloor\n\n\n\n\nShow the code\ntable(data$status) %&gt;%\n  sort(decreasing = F) %&gt;%\n  as.data.frame() %&gt;%\n  ggplot(., aes(x = Var1, y = Freq)) +\n   geom_bar(stat = \"identity\") +\n   geom_text(aes(label = Freq, y = Freq +17)) +\n   theme_classic() +\n   coord_flip()\n\n\n\n\n\n\n\n\n\nShow the code\ntable(data$energyclass) %&gt;%\n  sort(decreasing = F) %&gt;%\n  as.data.frame() %&gt;%\n  ggplot(., aes(x = Var1, y = Freq)) +\n   geom_bar(stat = \"identity\") +\n   geom_text(aes(label = Freq, y = Freq +17)) +\n   theme_classic() +\n   coord_flip()\n\n\n\n\n\n\n\n\n\nShow the code\ntable(data$levels) %&gt;%\n  sort(decreasing = F) %&gt;%\n  as.data.frame() %&gt;%\n  ggplot(., aes(x = Var1, y = Freq)) +\n   geom_bar(stat = \"identity\") +\n   geom_text(aes(label = Freq, y = Freq +17)) +\n   theme_classic() +\n   coord_flip()\n\n\n\n\n\n\n\n\n\n\nQuantitative (Discrete) variables\n\nBedroomsBathrooms\n\n\n\n\nShow the code\nggplot(data, aes(x = bedrooms)) +\n  geom_bar(stat = \"count\") +\n  scale_x_discrete() +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data, aes(x = bathrooms)) +\n  geom_bar(stat = \"count\") +\n  scale_x_discrete() +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\nQuantitative (Continuous) variables\n\nPricePrice per sqrSquaremeters\n\n\n\n\nShow the code\nggplot(data, aes(x= res_price)) +\n  geom_histogram() +\n  theme_classic()\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data, aes(x= res_price_sqr)) +\n  geom_histogram() +\n  theme_classic()\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(data, aes(x= res_sqr)) +\n  geom_line(stat = \"count\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\nTime Series\n\nDate publishedDeleted atConstruction Year\n\n\n\n\nShow the code\ndata$Year_Published = lubridate::year(data$res_date)\n\nggplot(data, aes(x= Year_Published)) +\n  geom_line(stat = \"count\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nShow the code\ndata$Year_Deleted = lubridate::ym(data$deleted_at)\n\nggplot(data, aes(x= Year_Deleted)) +\n  geom_line(stat = \"count\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nShow the code\ndata$construction_year &lt;- cut(data$construction_year,\n  include.lowest = TRUE,\n  right = FALSE,\n  dig.lab = 4,\n  breaks = c(1920, 1940, 1960, 1980, 2000, 2020, 2030)\n)\n\n\n\n\nShow the code\nggplot(data, aes(x = construction_year)) +\n  geom_bar(stat = \"count\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n\nShow the code\ndata_split &lt;- initial_split(data, prop = 0.75)\n\ntrain &lt;- training(data_split)\ntest  &lt;- testing(data_split)\n\nimpute_rec &lt;- recipe(res_price ~ bathrooms + bedrooms, data = data) %&gt;%\n  step_impute_mean(all_predictors())"
  },
  {
    "objectID": "shiny.html",
    "href": "shiny.html",
    "title": "Shiny Projects",
    "section": "",
    "text": "Possible Samples\n      A simple Shiny App that calculates the number of possible samples depending on the chosen sampling method.\n    \n    \n     Website\n     Repo\n    \n\n\n\n\n\n    \n      Shiny Distributions\n      A Shiny App to showcase various distributions and their characteristics.\n    \n    \n     Website\n     Repo\n    \n\n\n\n\n\n    \n      Greek Elections Shiny\n      A Shiny App to calculate parliamentary seats for each party (Greek parliament).\n    \n    \n     Website\n     Repo\n    \n\n\n\n\n\n\n\n\n\n\n\n\nNo matching items"
  }
]