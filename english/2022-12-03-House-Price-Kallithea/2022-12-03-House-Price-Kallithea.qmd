---
title: "Predict Cost of Housing in Kallithea"
author: "stesiam"
description: |
  Build a regression model using various ML algorithms to predict cost to buy a house in Kallithea.
link-external-newwindow: true
categories: [R, Regression]
fig-height: 4
fig-cap-location: bottom
date: "2022-12-06"
freeze: false
image: athens.jpg
image-alt: Panoramic view of Athens
toc: true
toc-title: Table of contents
toc-location: left
citation: true
slug: stesiam2022
title-block-banner: true
nocite: '@*'
csl: apa-6th-edition
bibliography: [packages.bib, references.bib]
format: 
  html:
    code-fold: true
    code-summary: "Show the code"
    code-tools: 
      source: https://github.com/stesiam/stesiam.github.io/tree/gh-pages/notebooks/2022-12-03-House-Price-Kallithea
execute:
  echo: true
editor_options: 
  markdown: 
    wrap: 80
---

# Table of Contents {.unlisted}

1. [Introduction](#introduction)
2. [Prerequisites](#prerequisites) <br>
&nbsp; 2.1 [Import Libraries](#import-libraries) <br>
&nbsp; 2.2 [Import Dataset](#import-dataset) <br>
&nbsp; 2.3 [Preview Dataset](#preview-dataset) <br>
&nbsp; 2.4 [Dataset structure](#dataset-structure) <br>
&nbsp; 2.5 [Recoding variables](#recoding-variables) <br>
&nbsp; 2.6 [Custom functions](#custom-functions) <br>
3. [EDA with R](#eda-with-r) <br>
&nbsp; 3.1 [Missing Values](#missing-values) <br>
&nbsp; 3.2 [Univariate Analysis](#univariate-analysis) <br>
&nbsp; &nbsp; &nbsp; 3.2.1 [Qualitative (Nominal) variables](#qualitative-nominal-variables) <br>
&nbsp; &nbsp; &nbsp; 3.2.2 [Qualitative (Ordinal) variables](#qualitative-ordinal-variables) <br>
&nbsp; &nbsp; &nbsp; 3.2.2 [Qualitative (Discrete) variables](#qualitative-discrete-variables) <br>
&nbsp; &nbsp; &nbsp; 3.2.2 [Qualitative (Continuous) variables](#qualitative-continuous-variables) <br>
&nbsp; &nbsp; &nbsp; 3.2.2 [Time series](#time-series) <br>
4. [Acknowledgements](#acknowledgements)
5. [References](#references)
<hr>

# Introduction



# Prerequisites

## Import libraries

In brief,

- for data entry purposes, I will use readr package (part of tidyverse)
- for plots, ggplot2
- and building models with tidymodels


```{r Import R Libraries, message=FALSE, results='hide', echo=TRUE}
# General purpose R libraries
library(readr)
library(dplyr)
library(kableExtra)
library(forcats)

# Deal with dates

library(lubridate)

# Graphs
library(ggplot2)
library(ggtext) # Add support for HTML/CSS on ggplot

# Build ML models

library(tidymodels)
library(bonsai)

# Other settings
options(digits=4) # print only 4 decimals
options(warn = -1)
```

```{r, include=FALSE}
# Add loaded libraries to bibliography section

knitr::write_bib(.packages(), file = 'packages.bib')
```

## Import dataset

After importing my libraries I can use readr's, `read_csv` function in order to import my dataset. This dataset was retrieved from [Kaggle](https://www.kaggle.com/datasets/argyrisanastopoulos/greece-property-listings). Some customization need to be made in order to make an efficient analysis :

- filter data for apartments in Kallithea
- convert Greek characters to English ones

```{r Import dataset, message=FALSE,results='hide',echo=TRUE}
data <- read_csv("kallithea.csv")
```


## Preview dataset

As usual, one of my first steps is to preview my dataset. That way I can have a first impression on my dataset and its possible problems. More specifically, the preview reveals :

- **A LOT** variables that need recoding (`energyclass`, `solar`, etc.)
- Some values on specific variables are on greek (`parking`)
- Duplicate ID column
- There are **missing values** (!!!)


```{r Preview Data}

#| label: tbl-preview-dataset
#| tbl-cap: "Preview Dataset (first 6 rows)"

preview_data = head(data, 7) %>%
  kbl(align = 'c',
    booktabs = T,
    centering = T,
    valign = T) %>%
  kable_paper() %>%
  scroll_box(width = "600px", height = "250px")

preview_data
```


## Recoding variables

### Dates

```{r}
data$res_date = ymd(data$res_date)
```


### Qualitative

As we noted previously, there are some variables that need recoding. Based on the 15th chapter of R-graphics book [@chang2018r] we have 2 main choices to do that :

- `recode()` from dplyr
- `fct_recode()` from forcats

```{r}
# Deleted

data$deleted = as.factor(data$deleted)
data$deleted = fct_recode(data$deleted, Yes = "1", No = "0")

# Auto Heating

data$auto_heating = data$auto_heating %>%
  as.factor() %>%
  fct_recode(., Yes = "1", No = "0")

# Solar

data$solar = data$solar %>%
  as.factor() %>%
  fct_recode(., Yes = "1", No = "0")

# Cooling

data$cooling = data$cooling %>%
  as.factor() %>%
  fct_recode(., Yes = "1", No = "0")

# Safe door

data$safe_door = data$safe_door %>%
  as.factor() %>%
  fct_recode(., Yes = "1", No = "0")

# Gas

data$gas = data$gas %>%
  as.factor() %>%
  fct_recode(., Yes = "1", No = "0")

# Fireplace

data$fireplace = data$fireplace %>%
  as.factor() %>%
  fct_recode(., Yes = "1", No = "0")

# Furniture

data$furniture = data$furniture %>%
  as.factor() %>%
  fct_recode(., Yes = "1", No = "0")

# Student

data$student = data$student %>%
  as.factor() %>%
  fct_recode(., Yes = "1", No = "0")

## Recoding data$parking
data$parking <- data$parking %>%
  fct_recode(
    "Yes" = "Parking πιλωτής",
    "Yes" = "Ανοιχτό parking",
    "Yes" = "Ανοιχτό parking, Parking πιλωτής",
    "Yes" = "Κλειστό parking",
    "Yes" = "Υπόγειο parking"
  ) %>%
  fct_explicit_na("No")


## Levels
data$levels <- data$levels %>%
  as.factor() %>%
  fct_recode(., "Mezzanine" = "Ημιώροφος")

# Delete ID column

data$...2 <- NULL

```



Let's see one more time our dataset structure after recoding :

```{r}
head(data, 7) %>%
  kbl(align = 'c',
    booktabs = T,
    centering = T,
    valign = T) %>%
  kable_paper() %>%
  scroll_box(width = "600px", height = "250px")
```

  
## Custom functions

### Qualitative - Categorical

```{r}
categorical_plot <- function(var, custom_title){
data %>%
  as.data.frame() %>%
  select(var) %>%
  table() %>%
  as.data.frame() %>%
  `colnames<-`(c("Categories", "Occurencies")) %>%
  ggplot(., aes(x = Categories, y = Occurencies, fill=Categories)) +
   geom_bar(stat = "identity") +
   geom_text(aes(label = Occurencies, vjust = -.1)) +
    labs(
        title = custom_title
    ) +
   theme_classic()
}
```




### Quantitative - Discrete

```{r}
discrete_plot <- function(var){
  ggplot(data, aes(x = var)) +
  geom_bar(stat = "count") +
  theme_classic()
}
```


# EDA with R

## Missing Values

```{r, results='hide', echo=FALSE}
how_many_nas = sum(is.na(data))
```

On this dataset there are `r how_many_nas` missing values, in total. More specifically, 

```{r}
data %>%
  is.na() %>%
  colSums() %>%
  as.data.frame() %>%
  `colnames<-`("Occurencies") %>%
  filter(Occurencies >0) %>%
  arrange(-Occurencies) %>%
  kbl(caption = "Missing Values of Dataset") %>%
  kable_classic(full_width = F, html_font = "Cambria")
```

## Univariate analysis

### Qualitative (Nominal) variables

::: {.panel-tabset}

#### Autoheating

```{r}
categorical_plot("auto_heating","Autonomous Heating")
```


#### Solar

```{r}
categorical_plot("solar", "Solar-powered water-heater")
```


#### Cooling

```{r}
categorical_plot("cooling", "Cooling")
```


#### Safe door

```{r}
categorical_plot("safe_door", "Safe door")
```


#### Gas

```{r}
categorical_plot("gas", "Gas")
```

#### Fireplace

```{r}
categorical_plot("fireplace", "Fireplace")
```

#### Furniture

```{r}
categorical_plot("furniture", "Available furniture")
```


#### Student

```{r}
categorical_plot("student", "Ideal for students")
```

#### Parking

```{r}
categorical_plot("parking", "Parking")
```



#### Deleted


```{r}
categorical_plot("deleted", "Deleted")
```


:::

### Qualitative (Ordinal) variables

::: {.panel-tabset}


#### Status

```{r}
table(data$status) %>%
  sort(decreasing = F) %>%
  as.data.frame() %>%
  ggplot(., aes(x = Var1, y = Freq)) +
   geom_bar(stat = "identity") +
   geom_text(aes(label = Freq, y = Freq +17)) +
   theme_classic() +
   coord_flip()
```


#### Energy class

```{r}
table(data$energyclass) %>%
  sort(decreasing = F) %>%
  as.data.frame() %>%
  ggplot(., aes(x = Var1, y = Freq)) +
   geom_bar(stat = "identity") +
   geom_text(aes(label = Freq, y = Freq +17)) +
   theme_classic() +
   coord_flip()
```

#### Floor

```{r}
table(data$levels) %>%
  sort(decreasing = F) %>%
  as.data.frame() %>%
  ggplot(., aes(x = Var1, y = Freq)) +
   geom_bar(stat = "identity") +
   geom_text(aes(label = Freq, y = Freq +17)) +
   theme_classic() +
   coord_flip()
```


:::

### Quantitative (Discrete) variables

::: {.panel-tabset}

#### Bedrooms

```{r}
ggplot(data, aes(x = bedrooms)) +
  geom_bar(stat = "count") +
  scale_x_discrete() +
  theme_classic()
```


#### Bathrooms

```{r}
ggplot(data, aes(x = bathrooms)) +
  geom_bar(stat = "count") +
  scale_x_discrete() +
  theme_classic()
```

:::

### Quantitative (Continuous) variables

::: {.panel-tabset}

#### Price

```{r}
ggplot(data, aes(x= res_price)) +
  geom_histogram() +
  theme_classic()
```


#### Price per sqr

```{r}
ggplot(data, aes(x= res_price_sqr)) +
  geom_histogram() +
  theme_classic()
```


#### Squaremeters 

```{r}
ggplot(data, aes(x= res_sqr)) +
  geom_line(stat = "count") +
  theme_classic()
```
:::


### Time Series
::: {.panel-tabset}

#### Date published

```{r}
data$Year_Published = lubridate::year(data$res_date)

ggplot(data, aes(x= Year_Published)) +
  geom_line(stat = "count") +
  theme_classic()
```


#### Deleted at

```{r}
data$Year_Deleted = lubridate::ym(data$deleted_at)

ggplot(data, aes(x= Year_Deleted)) +
  geom_line(stat = "count") +
  theme_classic()
```



#### Construction Year

```{r}
data$construction_year <- cut(data$construction_year,
  include.lowest = TRUE,
  right = FALSE,
  dig.lab = 4,
  breaks = c(1920, 1940, 1960, 1980, 2000, 2020, 2030)
)
```

```{r}
ggplot(data, aes(x = construction_year)) +
  geom_bar(stat = "count") +
  theme_classic()
```

:::

```{r}
data_split <- initial_split(data, prop = 0.75)

train <- training(data_split)
test  <- testing(data_split)

impute_rec <- recipe(res_price ~ bathrooms + bedrooms, data = data) %>%
  step_impute_mean(all_predictors())
```




# Acknowledgements {.appendix .unlisted}

Image by <a href="https://pixabay.com/users/publicdomainpictures-14/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=219829">PublicDomainPictures</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=219829">Pixabay</a>


# References {.appendix .unlisted}

