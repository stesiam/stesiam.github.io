---
title: "Πρόσβαση στο API του data.gov.gr"
author: "stesiam"
description: "Ένας απλός οδηγός χρήσης του API του data.gov.gr, ώστε να λαμβάνετε τη ροή δεδομένων με τη χρήση της R."
categories: [R, API]
fig-cap-location: bottom
date: "2023-07-04"
freeze: true
bibliography: [references.bib]
toc: true
toc-title: Περιεχόμενα
toc-location: left
title-block-banner: true
nocite: '@*'
lang: el
language: 
  title-block-author-single: "Συντάκτης"
  title-block-published: "Δημοσιεύτηκε στις"
  appendix-attribution-cite-as: "Εναλλακτικά, μπορείτε να αναφερθείτε στο παραπάνω άρθρο ως εξής:"
  section-title-references: "Παραπομπή άρθρου"
  appendix-attribution-bibtex: "BibTeX citation:"
format: 
  html:
    freeze: true
    code-link: true
    code-fold: false
    code-summary: "Δείξε τον κώδικα"
    code-tools: 
      source: https://github.com/stesiam/stesiam.github.io/blob/gh-pages/greek-posts/2023-07-04-GovGR-API-Greek/index.qmd
execute:
  echo: true
editor_options: 
  markdown: 
    wrap: 80
---

```{r, include =FALSE}
library(here)
here::here("greek/2023-07-01-GovGR-API-Greek")
```

## Εισαγωγή

Στην παραδοσιακή ανάλυση δεδομένων συνήθως ο αναλυτής καλείται να
\<<καθαρίσει>\> τα δεδομένα, να τους δώσει μία κατάλληλη μορφή προκειμένου να
αναλυθούν. Αυτή η διαδικασία υπονοεί ότι τα δεδομένα υπάρχουν συγκεντρωμένα σε
ένα αρχείο. Ωστόσο, δεν είναι πάντα έτσι. Το πρόβλημα με την ανάλυση ενός
dataset είναι ότι δεν λαμβάνει υπόψιν τις όποιες νέες τιμές. Σε αυτή τη
περίπτωση θα πρέπει να ξανακατεβάσω τα νέα δεδομένα και να ξανατρέξω την ανάλυση
μέσω της R ή όποιου εργαλείου χρησιμοποιώ. Αυτό όπως γίνεται αντιληπτό είναι μη
παραγωγικό, ωστόσο όταν γίνεται λίγες φορές μέσα στο χρόνο, ίσως να μην είναι
και τόσο . Εκεί που πλέον γίνεται εμφανής η μη αποτελεσματικότητα της παραπάνω
διαδικασίας είναι όταν υπάρχει συνεχής ροή δεδομένων, άρα πρέπει να γίνεται αυτή
η διαδικασία καθημερινά. Σε αυτές τις περιπτώσεις φαίνεται η χρησιμότητα του API
αφού μας δίνει τις νέες τιμές με μικρό σχετικά κόπο. Παράλληλα η χρήση του API
ευνοεί την ένταξη νέων δεδομένων, συνεπώς αν φτιάχνουμε ένα προβλεπτικό μοντέλο η
ακρίβειά του θα παραμένει σε ένα ικανοποιητικό επίπεδο. Τέλος, άλλη μία θετική
συμβολή είναι σε Shiny Apps, προκειμένου να αυτοματοποιείται η ανάλυση δεδομένων
και οι πληροφορίες να είναι αξιόπιστες για τον επισκέπτη αυτού.


Γενικά υπάρχουν πάρα πολλά API από τα οποία μπορούμε να λάβουμε σημαντικές
πληροφορίες. Για περισσότερες λεπτομέρειες ως προς τη διαθεσιμότητα δωρεάν APIs
μπορείτε να δείτε ένα σχετικό [repository με μία λίστα
αυτών](https://github.com/public-apis/public-apis). Σε αυτό το άρθρο θα
ασχοληθούμε με τα ανοικτά δεδομένα της χώρας μας που διατίθενται μέσω του
[data.gov.gr](data.gov.gr).

## Αίτηση για API Key

Ωστόσο, το συγκεκριμένο API (όπως τα περισσότερα χρειάζονται

Κάνουμε αίτηση στην αντίστοιχη σελίδα και συμπληρώνουμε τα στοιχεία μας και
**όλα** τα πεδία της φόρμας όπως αυτή φαίνεται παρακάτω:

![Προεπισκόπηση σελίδας αίτησης για πρόσβαση στο
API](images/datagovgr_api_request.png){style="text-align:center; background-color: #fafafa; padding: 20px"
width="500"}

Στη συνέχεια θα πρέπει να κοιτάξετε το e-mail σας γιατί θα σας έρθει ένα μήνυμα
με τον Token μέσω του οποίου θα χρησιμοποιείται το API. Να δείτε οπωσδήποτε και
τον φάκελο με την Ανεπιθύμητη αλληλογραφία (spam) καθώς εμένα μου ήρθε εκεί.
Παρεμπιπτόντως, σε περίπτωση που χάσετε το token και έχετε σβήσει το mail και
ξανακάνετε αίτηση (με το ίδιο mail) θα σας το ξαναστείλει. Το έπαθα μόλις :)

## Χρήση API

Αφού λάβουμε το Token, θα πρέπει με κάποιο τρόπο να λάβουμε τα δεδομένα. Στην συγκεκριμένη πλατφόρμα υπάρχουν δύο τρόποι. 

- Χρήση API από την ιστοσελίδα: 
- Χρήση API με την R

Ο ένας τρόπος (και μάλλον ο λιγότερο αποδοτικός) είναι να κάνεις ζητήσεις τα δεδομένα απευθείας από την ιστοσελίδα data.gov.gr. Αυτό είναι από τη μία εξαιρετικά απλό, αλλά από την άλλη κατεβάζουμε μία σταθερή έκδοση των δεδομένων και συνεπώς αν θελήσω να ανανεώσω τα δεδομένα θα πρέπει πάλι να κατεβάσω τα δεδομένα. 



## Παράδειγμα χρήσης

Πριν ολοκληρωθεί αυτό το άρθρο έκρινα ως σημαντική την εφαρμογή ενός
παραδείγματος. Τη στιγμή που γράφεται αυτό το άρθρο, υπάρχουν συνολικά 49 βάσεις
δεδομένων από τις οποίες μπορώ να επιλέξω. Προκειμένου να δούμε την ωφέλεια του
API θα διαλέξω κάποιο που ανανεώνεται σε αρκετά συχνή βάση. Ένα τέτοιο δεδομένο
είναι οι επιβάτες που [ταξιδεύουν με πλοία](https://www.data.gov.gr/datasets/sailing_traffic/).

```{r}
library(httr)
library(jsonlite)
```

Στη συνέχεια θέτω σε μία μεταβλητή τον βασικό σύνδεσμο των δεδομένων. Εγώ που επέλεξα την κίνηση των πλοίων θέτω το εξής:

```{r}
base = "https://data.gov.gr/api/v1/query/sailing_traffic"
```

Στη συνέχεια, όπως τονίζει το documentation της σελίδας για τις άλλες γλώσσες, θα πρέπει να ορίσουμε ένα εύρος ημερομηνιών για το οποίο ενδιαφερόμαστε. Αξίζει να σημειωθεί ότι δεν μπορείτε να πάρετε μεγάλο εύρος με μία μόνο κλήση του API. Για να επιστρέψω στο προηγούμενο παράδειγμα, τα δεδομένα της επιβατικής κίνησης των πλοίων ξεκινάνε από το 2017 μέχρι και σήμερα (2023). Ας υποθέσουμε ότι δεν μας πειράζει αυτό και ότι θέλουμε τα δεδομένα από τις 4 πρώτες μέρες του Ιουλίου του 2023.

```{r}
date_from = "2023-07-01"
date_to = "2023-07-04"

API_URL = paste0(base, "?date_from=", date_from, "&", "date_to=", date_to)

call = httr::GET(url = API_URL,
    add_headers(`Authorization` = paste0('Token token_id')
    )
)
```


Όπου στο σημείο που αναφέρεται το **token_id** θα πρέπει να βάλετε το token που σας έστειλε το data.gov.gr μέσω mail. Αφού λοιπόν αιτηθούμε τα δεδομένα μέσω της GET και κάνουμε λίγο υπομονή βλέπουμε ότι λαμβάνω μία λίστα με διάφορες πληροφορίες. Εμάς μας ενδιαφέρουν τα δεδομένα, οπότε κοιτάμε στη κατηγορία **content** της λίστας, ωστόσο παρατηρούμε μία μη αναγνώσιμη μορφή των στοιχειών μιας και είναι σε δεκαεξαδική μορφή. 

```{r}
data = base::rawToChar(call$content)
```

Με την παραπάνω εντολή μετατρέπονται οι χαρακτήρες και είναι πλέον αναγνώσιμοι, ωστόσο τώρα θα πρέπει να πάρουν και μορφή πίνακα προκειμένου να γίνει η ανάλυση. 

```{r}
data = jsonlite::fromJSON(data, flatten = T)
```


Και τέλος, με τη βοήθεια του πακέτου `jsonlite` λαμβάνω ένα data.frame με όνομα data που περιέχει όλους τους προορισμούς, τον αριθμό επιβατών, αυτοκινήτων για τη κάθε ημέρα που ζήτησα.
